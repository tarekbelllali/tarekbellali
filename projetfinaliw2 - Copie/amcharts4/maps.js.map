{"version":3,"sources":["webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/ascending.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/bisector.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/number.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/bisect.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/fsum.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/array.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/ticks.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/median.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/merge.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/permute.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/range.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/shuffle.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/zip.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/math.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/noop.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/stream.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/area.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/bounds.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/cartesian.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/centroid.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/constant.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/compose.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/rotation.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/circle.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/buffer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/pointEqual.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/rejoin.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/polygonContains.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/antimeridian.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/circle.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/line.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/rectangle.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/extent.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/length.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/distance.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/contains.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/graticule.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/interpolate.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/area.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/identity.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/bounds.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/centroid.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/context.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/measure.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/string.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/transform.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/fit.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/resample.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/albers.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/albersUsa.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/azimuthal.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/mercator.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conicConformal.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/equirectangular.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/equalEarth.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/gnomonic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/identity.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/orthographic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/stereographic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///../../../../../src/.internal/charts/map/MapSeries.ts","webpack:///../../../../../src/.internal/charts/map/MapObject.ts","webpack:///../../../../../src/.internal/charts/map/MapImage.ts","webpack:///../../../../../src/.internal/charts/map/MapUtils.ts","webpack:///../../../../../src/.internal/charts/map/MapPolygon.ts","webpack:///../../../../../src/.internal/charts/map/MapPolygonSeries.ts","webpack:///../../../../../../src/.internal/charts/map/projections/Projection.ts","webpack:///../../../../../src/.internal/charts/map/SmallMap.ts","webpack:///../../../../../src/.internal/charts/map/Geo.ts","webpack:///../../../../../src/.internal/charts/map/MapLineObject.ts","webpack:///../../../../../src/.internal/charts/map/MapImageSeries.ts","webpack:///../../../../../src/.internal/charts/map/MapLine.ts","webpack:///../../../../../src/.internal/charts/map/MapLineSeries.ts","webpack:///../../../../../src/.internal/charts/map/Graticule.ts","webpack:///../../../../../src/.internal/charts/map/GraticuleSeries.ts","webpack:///../../../../../src/.internal/charts/types/MapChart.ts","webpack:///../../../../../src/.internal/charts/map/MapSpline.ts","webpack:///../../../../../src/.internal/charts/map/MapArc.ts","webpack:///../../../../../src/.internal/charts/map/MapSplineSeries.ts","webpack:///../../../../../src/.internal/charts/map/MapArcSeries.ts","webpack:///../../../../../src/.internal/charts/map/ZoomControl.ts","webpack:///../../../../../../src/.internal/charts/map/projections/Mercator.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/math.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/aitoff.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/august.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/baker.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/hammer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/newton.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mollweide.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/boggs.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/sinusoidal.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/bromley.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/collignon.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/craig.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/craster.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/cylindricalEqualArea.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert1.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert2.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert3.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert4.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert5.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert6.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eisenlohr.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/fahey.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/foucaut.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/gingery.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburgPolyconic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg4.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg5.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg6.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg8.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg9.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/gringorten.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/elliptic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/guyou.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/healpix.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/hill.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/sinuMollweide.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/homolosine.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/kavrayskiy7.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/lagrange.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/larrivee.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/laskowski.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/littrow.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/miller.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/naturalEarth2.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/nellHammer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/nicolosi.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/patterson.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/polyconic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/polyhedral/octahedron.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/polyhedral/collignon.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/rectangularPolyconic.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/robinson.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/times.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten2.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten3.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten4.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/wagner4.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/wagner6.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/wiechel.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/winkel3.js","webpack:///../../../../../../src/.internal/charts/map/projections/Miller.ts","webpack:///../../../../../../src/.internal/charts/map/projections/Eckert6.ts","webpack:///../../../../../../src/.internal/charts/map/projections/Orthographic.ts","webpack:///../../../../../../src/.internal/charts/map/projections/Stereographic.ts","webpack:///../../../../../../src/.internal/charts/map/projections/Albers.ts","webpack:///../../../../../../src/.internal/charts/map/projections/AlbersUsa.ts","webpack:///../../../../../../src/.internal/charts/map/projections/NaturalEarth1.ts","webpack:///../../../../../../src/.internal/charts/map/projections/AzimuthalEqualArea.ts","webpack:///../../../../../../src/.internal/charts/map/projections/EqualEarth.ts","webpack:///./maps.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/tinyqueue/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/polylabel/polylabel.js"],"names":["ascending","a","b","NaN","bisector","f","delta","compare","left","x","lo","hi","length","mid","d","ascendingComparator","center","i","right","number","ascendingBisect","Adder","_classCallCheck","this","_partials","Float64Array","_n","_createClass","key","value","p","j","y","Math","abs","n","array","Array","prototype","slice","map","sqrt","flatten","arrays","_iterator","_step","regeneratorRuntime","wrap","_context","prev","next","merge__createForOfIteratorHelper","s","done","delegateYield","t1","e","finish","stop","merge__marked","merge","from","range","start","step","arguments","max","ceil","random","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","hypot","floor","log","pow","sin","sign","tan","acos","asin","haversin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lambda00","phi00","lambda0","cosPhi0","sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","add","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","k","u","v","phi0","lambda1","phi1","lambda2","p0","deltaSum","ranges","src_area","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","l","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","push","linePoint","normal","inflection","phii","lambdai","antimeridian","angle","rangeCompare","rangeContains","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","x0","y0","z0","src_bounds","feature","merged","deltaMax","Infinity","sort","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","z","centroidLinePointFirst","centroidLinePoint","w","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","m","centroid","src_constant","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","rotate","forward","circleStream","radius","direction","t0","cosRadius","sinRadius","circleRadius","t","src_circle","ring","constant","precision","circle","c","apply","r","_","buffer","line","lines","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p1","link","current","isSubject","longitude","polygonContains","polygon","winding","sum","point0","sinPhi1","cosPhi1","point1","absDelta","arc","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clipRejoin","pointLine","clean","ringSegments","filter","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","t2","q","polar","q1","code","c0","v0","v00","point2","clip_line","x1","y1","ax","ay","dx","dy","clipMax","clipMin","clipRectangle","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","a0","b0","b1","polygonInside","cleanInside","min","lengthSum","clip_extent","cache","cacheStream","extent","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","distance","ao","bo","ab","ringRadians","pointRadians","contains","graticuleX","graticuleY","graticule","X","Y","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","x00","y00","src_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","B","src_identity","area","bounds","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","PathString","_string","_circle","join","src_path","projection","projectionStream","contextStream","path","pathArea","measure","pathMeasure","pathBounds","pathCentroid","identity","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","scale","translate","geoStream","fitExtent","h","fitSize","size","fitWidth","width","fitHeight","height","constructor","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","x2","y2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","theta","preclip","clipAntimeridian","postclip","recenter","reset","transformRotate","undefined","clipAngle","clipCircle","reflectX","reflectY","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","fy","conicConformal","equirectangularRaw","projection_equirectangular","conicEquidistantRaw","g","gy","nx","conicEquidistant","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","equalEarth","gnomonicRaw","gnomonic","projection_identity","sa","tx","ty","kx","ky","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","MapSeries_MapSeriesDataItem","_super","MapSeriesDataItem","_this","call","className","values","applyTheme","Object","tslib_es6","defineProperty","setValue","properties","setProperty","_east","_west","_south","_north","updateExtremes","getFeature","west","south","north","east","changed","utils_Math","component","invalidateDataItems","Series","MapSeries_MapSeries","MapSeries","isMeasured","nonScalingStroke","dataFields","ignoreBounds","tooltip","showInViewport","createDataItem","checkInclude","includes","excludes","id","indexOf","getPropertyValue","setPropertyValue","invalidateData","processIncExc","chart","handleObjectAdded","event","mapObject","newValue","parent","series","strokeWidth","_geodata","geodata","data","madeFromGeoData","splice","disposeData","_dataSources","getDataSource","removeDispose","events","on","loadData","setDataSourceEvents","getFeatures","validateDataItems","dataItems","each","dataItem","Type","_mapObjects","dispatch","_northDefined","_southDefined","_westDefined","_eastDefined","processConfig","config","name_1","window","JSON","parse","Error","asIs","field","updateTooltipBounds","topParent","setBounds","maxWidth","maxHeight","Registry","registeredClasses","MapObject_MapObject","MapObject","layout","clickable","validate","itemReaderText","readerTitle","showTooltip","res","showTooltipOn","has","handleTooltipMove","addDisposer","ev","isHidden","setDataItem","applyAccessibility","Container","MapImage_MapImage","MapImage","latitude","geoPoint","validatePosition","d3Projection","d3Path","__disabled","multiPolygonToGeo","multiPolygon","utils_Array","surface","hole","geoArea","multiPointToGeo","multiLineToGeo","multiLine","pointToGeo","multiGeoToPoint","geoPoints","geoToPoint","multiGeoLineToMultiLine","multiGeoLine","multiGeoPolygonToMultipolygon","multiGeoPolygon","geoPolygon","getCircle","getBackground","stepLong","stepLat","ln","ll","lt","MapPolygon_MapPolygon","MapPolygon","createChild","shouldClone","applyOnClones","interfaceColors","InterfaceColorSet","fill","getFor","stroke","strokeOpacity","tooltipPosition","invalidate","pathGenerator","calculateVisualCenter","biggestArea","biggestPolygon","polylabel_default","_visualLongitude","_visualLatitude","measureElement","_adapterO","pixelWidth","pixelHeight","copyFrom","source","getTooltipX","convert","visualLongitude","visualLatitude","getTooltipY","MapPolygonSeries_MapPolygonSeriesDataItem","MapPolygonSeriesDataItem","_mapPolygon","mapPolygon_1","mapPolygons","create","addSprite","_disposers","Disposer","removeValue","_polygon","_multiPolygon","_geoPolygon","_multiGeoPolygon","MapPolygonSeries_MapPolygonSeries","MapPolygonSeries","clear","validateData","useGeodata","geoJSON","console","len","id_1","this_1","geodataNames","name","include","exclude","dataObject","Utils","mapPolygon","sortPolygonsBy","sortBy_1","reversed_1","sortPolygonsReversed","valA","valB","dirA","dirB","boxArea","dataContext","index","zIndex","propertyFields","_mapPolygons","polygonTemplate","List","template","focusable","getPolygonById","Iterator","iterator","_dataItem","Projection_Projection","Projection","_d3Projection","_d3Path","invalidateProjection","unproject","deltaLongitude","deltaLatitude","unrotate","intermediatePoint","pointA","pointB","position","multiDistance","positionToPoint","positionToGeoPoint","intermediatePointA","intermediatePointB","pa","pb","totalDistance","currentDistance","positionA","positionB","positionAB","SmallMap_SmallMap","SmallMap","_chart","align","valign","percentHeight","percentWidth","margin","background","fillOpacity","moveToPosition","updateMapSize","seriesContainer","rectangle","Rectangle","Color","verticalCenter","horizontalCenter","_series","handleSeriesAdded","handleSeriesRemoved","newSeries","clone","dataUsers","interactionsEnabled","hidden","rectPoint","spritePoint","seriesPointToGeo","zoomToGeoPoint","zoomLevel","get","set","updateRectangle","pixelX","pixelY","scaleRatio","bbox","group","node","getBBox","err","afterDraw","maskRectangle","hasKey","getKey","normalizePoint","wrapAngleTo180","latitude180","normalizeMultiline","multiline","Geo_geoToPoint","MapLineObject_MapLineObject","MapLineObject","adjustRotation","mapLine","shortestDistance","MapImageSeries_MapImageSeriesDataItem","MapImageSeriesDataItem","_mapImage","mapImage_1","mapImages","_geoPoint","multiPoint","MapImageSeries_MapImageSeries","MapImageSeries","multiGeoPoint","_parseDataFrom","mapImage","isDisposed","moveValue","_mapImages","validateDataElement","getImageById","MapLine_MapLine","MapLine","_imageListeners","createLine","Polyline","images","handleImagesToConnect","isReady","imagesToConnect","image","img","uid","disposer","property","_b","_c","convertedPoints","convertedSegmentPoints","slen","_arrow","lineObjects","handleGlobalScale","_lineObjects","handleLineObjectAdded","mapLineObject","arrow","triangle","Triangle","Percent","MapLineSeries_MapLineSeriesDataItem","MapLineSeriesDataItem","_mapLine","mapLine_1","mapLines","_multiLine","_multiGeoLine","_geoLine","geoLine","MapLineSeries_MapLineSeries","MapLineSeries","_mapLines","lineTemplate","getLineById","Graticule_Graticule","Graticule","GraticuleSeries_GraticuleSeriesDataItem","GraticuleSeriesDataItem","GraticuleSeries_GraticuleSeries","GraticuleSeries","longitudeStep","latitudeStep","singleSprite","disableType","hiddenInLegend","graticule_graticule","lineStrings","lineString","MapChart_MapChartDataItem","MapChartDataItem","SerialChart","MapChart_MapChart","MapChart","zoomDuration","zoomEasing","Ease","minZoomLevel","maxZoomLevel","_prevZoomGeoPoint","maxPanOut","homeZoomLevel","zoomStep","centerMapOnZoomOut","padding","backgroundSeries","minWidth","minHeight","once","handleAllInited","inert","resizable","handleMapTransform","handleDoubleHit","handleDrag","dragWhileResize","adapter","target","previousWidth","previousHeight","updateCenterGeoPoint","chartContainer","inited","_mapAnimation","allInited_1","dataInvalid","updateScaleRatio","_zoomGeoPointReal","chartContainerBg","dragStart","interactions","downPointers","getIndex","dragStop","handleMapDown","inertia","inertias","Interaction","body","hasFocused","Keyboard","getEventKey","_zoomControl","thumb","isFocused","pan","mouseWheelBehavior","interaction","handlePanDown","handlePanUp","panSprite","Circle","handlePanMove","opacity","panBehavior","svgPoint","pointer","htmlContainer","svgContainer","_downPointOrig","_downDeltaLongitude","_downDeltaLatitude","isResized","areTransformed","dln","dlt","dlg","downGeoLocal","local","geoLocal","goHome","disposer_1","updateZoomGeoPoint","seriesPoint","innerWidth","pixelPaddingLeft","innerHeight","pixelPaddingTop","maxLeft","maxRight","maxTop","maxBottom","seriesMaxLeft","seriesMaxRight","seriesMaxTop","seriesMaxBottom","seriesWidth","seriesHeight","_centerGeoPoint","ww","hh","minX","maxX","minY","maxY","zoomGeoPoint","applyInternalDefaults","language","cssScale","svgPointToGeo","zoomIn","handleWheel","mouseOptions","sensitivity","zoomOut","_mouseWheelDisposer","dispose","wheelable","draggable","_backgroundSeries","foundGraticule","deltaLong","deltaLat","initialScale","invalidateDataUsers","_fitWidth","_fitHeight","hScale","vScale","geoPointToSVG","geoPointToSeries","dataUser","duration","hasData_1","mapPoint","animate","zoomToMapObject","dataItem_1","polygonPoint","zoomToRectangle","level","splitLongitude","newLong","_prevZoomLevel","readerAlert","locale","_smallMap","smallMap","zoomControl","plusButton","exportable","minusButton","createSeries","rotateMap","raiseCriticalError","createClassInstance","configOrder","homeGeoPoint","centerGeoPoint","setPaper","paper","hideOverflow","color","setLegend","legend","setTapToActivate","isTouchProtected","handleTapToActivate","handleTapToActivateDeactivation","asFunction","hasLicense","Options","commercialLicense","licenses","match","MapSpline_MapSpline","MapSpline","Polyspline","tensionX","tensionY","MapArc_MapArc","MapArc","Polyarc","MapSplineSeries_MapSplineSeriesDataItem","MapSplineSeriesDataItem","MapSplineSeries_MapSplineSeries","MapSplineSeries","MapArcSeries_MapArcSeriesDataItem","MapArcSeriesDataItem","MapArcSeries_MapArcSeries","MapArcSeries","ZoomControl_ZoomControl","ZoomControl","Button","label","text","slider","handleBackgroundClick","updateThumbSize","handleThumbDrag","role","readerLive","fixLayout","marginTop","marginBottom","toFront","toBack","sprite","maxPower","LN2","minPower","power","updateThumb","isKey","stepCount","isDown","createBackground","RoundedRectangle","Mercator_Mercator","Mercator","sqrt1_2","SQRT1_2","sqrt2","sqrtPi","sinh","cosh","aitoffRaw","cosy","sincia","sinci","sinx","sinx_2","cosx_2","siny","sin_2y","sin2y","cos2y","sin2x_2","fx","dxdx","dxdy","dydx","dydy","augustRaw","tanPhi","sin3Eta","eta","xi","arcosh","arsinh","cosEta","coshXi","sqrt8","bakerRaw","cosPhi_2","tanPhi_2","hammerQuarticAuthalicRaw","solve","f0","f1","steps","mollweideBromleyTheta","cp","cpsinPhi","mollweideBromleyRaw","mollweideRaw","boggsRaw","sinusoidalRaw","collignonRaw","sqrt3","crasterRaw","eckert1Raw","eckert2Raw","eckert3Raw","eckert4Raw","eckert5Raw","eckert6Raw","eckert6","eisenlohrK","eisenlohrRaw","s0","_0","_1","s1","cos1","v2","vm1v","vp1v","deltatDeltaLambda","deltatDeltaPhi","deltacDeltat","deltacDeltaLambda","deltacDeltaPhi","deltavDeltaLambda","deltavDeltaPhi","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","denominator","faheyK","faheyRaw","foucautRaw","cosk","ginzburgPolyconic","xB","yB","m2","dAlphadLambda","xB2","dxBdPhi","dyBdPhi","dmdPhi","mcosAlpha","msinAlpha","dAlphadPhi","ginzburgPolyconicRaw","ginzburg8Raw","lambda4","gringortenRaw","sLambda","sPhi","r2","p2","a2","secPhi","drdPhi","dp2dPhi","mu","nu","zeta","g2","zetaMug","f2","df","gringortenHexadecant","gringortenHexadecantInvert","ellipticJ","twon","tanh","ellipticF","dPhi","guyouRaw","k_","K","psi","at","y_1","guyouComplexAtan","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticFi","ellipticJi","tn","guyouComplexDivide","sinuMollweidePhi","sinuMollweideY","sinuMollweideRaw","homolosineRaw","kavrayskiy7Raw","pi_sqrt2","larriveeRaw","sqrtcosPhi","sinPhi_2","sinLambda_6","cosLambda_6","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","laskowskiRaw","lambdaPhi","littrowRaw","y2_1","x2_y2_1","millerRaw","miller","sqrt6","sqrt7","mtFlatPolarParabolicRaw","mtFlatPolarQuarticRaw","sinTheta_2","mtFlatPolarSinusoidalRaw","naturalEarth2Raw","phi6","nellHammerRaw","nicolosiRaw","b2","b2d2","d2b2","N","x2y2","pi2","pattersonK1","pattersonK2","pattersonK3","pattersonK4","pattersonC1","pattersonC2","pattersonC3","pattersonC4","pattersonRaw","yc","polyconicRaw","octahedron","face","collignonK","robinsonRaw","i0","di","bx","by","yy","timesRaw","vanDerGrintenRaw","sinTheta","cosTheta","G","P","P2","P2_A2","G_P2","Q","x2_y2","c3","m1","theta1","vanDerGrinten2Raw","vanDerGrinten3Raw","vanDerGrinten4Raw","B2","C","C2","BC","B_C2","B_3C","D","D2","C_","B_C","F_","sqrtF","wagner6Raw","wiechelRaw","sin1_Phi","cosLambda","sinLambda","winkel3Raw","F","cosphi","sinphi","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","E","dxdlambda","dxdphi","dydlambda","dydphi","dlambda","dphi","Miller_Miller","Miller","Eckert6_Eckert6","Eckert6","Orthographic_Orthographic","Orthographic","Stereographic_Stereographic","Stereographic","Albers_Albers","Albers","AlbersUsa_AlbersUsa","AlbersUsa","NaturalEarth1_NaturalEarth1","NaturalEarth1","AzimuthalEqualArea_AzimuthalEqualArea","AzimuthalEqualArea","EqualEarth_EqualEarth","EqualEarth","am4maps","maps_namespaceObject","TinyQueue","defaultCompare","_down","item","_up","top","bottom","pos","halfLength","best","Queue","__webpack_require__","polylabel","debug","cellSize","degeneratePoleOfInaccessibility","cellQueue","compareMax","Cell","bestCell","getCentroidCell","bboxCell","numProbes","cell","poleOfInaccessibility","inside","minDistSq","getSegDistSq","pointToPolygonDist","SQRT2","px","py","default","module","exports"],"mappings":"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","file":"maps.js","sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/ascending.js","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/bisector.js","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/number.js","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/bisect.js","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport default function(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/fsum.js","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/array.js","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    step = -step;\n    start = Math.ceil(start * step);\n    stop = Math.floor(stop * step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/ticks.js","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/median.js","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/merge.js","export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/permute.js","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/range.js","export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/shuffle.js","import transpose from \"./transpose.js\";\n\nexport default function() {\n  return transpose(arguments);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-array/src/zip.js","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/math.js","export default function noop() {}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/noop.js","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/stream.js","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/area.js","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/bounds.js","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/cartesian.js","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/centroid.js","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/constant.js","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/compose.js","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/rotation.js","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/circle.js","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/buffer.js","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/pointEqual.js","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/rejoin.js","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/polygonContains.js","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/index.js","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/antimeridian.js","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/circle.js","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/line.js","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/rectangle.js","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/clip/extent.js","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/length.js","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/distance.js","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/contains.js","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/graticule.js","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/interpolate.js","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/area.js","export default x => x;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/identity.js","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/bounds.js","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/centroid.js","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/context.js","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/measure.js","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/string.js","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/path/index.js","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/transform.js","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/fit.js","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/resample.js","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/index.js","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conic.js","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conicEqualArea.js","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/cylindricalEqualArea.js","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/albers.js","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/albersUsa.js","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/azimuthal.js","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/azimuthalEqualArea.js","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/azimuthalEquidistant.js","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/mercator.js","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conicConformal.js","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/equirectangular.js","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/conicEquidistant.js","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/equalEarth.js","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/gnomonic.js","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/identity.js","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/naturalEarth1.js","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/orthographic.js","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/stereographic.js","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo/src/projection/transverseMercator.js","/**\r\n * Map series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem, ISeriesProperties, ISeriesDataFields, ISeriesAdapters, ISeriesEvents } from \"../series/Series\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapObject } from \"./MapObject\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport { ListTemplate } from \"../../core/utils/List\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * South-most latitude.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * North-most latitude.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * East-most longitude.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * West-most longitude.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapSeries;\r\n\r\n\t/**\r\n\t * Shortcut to either [[MapLine]], [[MapImage]], or [[MapPolygon]].\r\n\t */\r\n\tpublic mapObject: MapObject;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeriesDataItem\";\r\n\t\tthis.values.value = {};\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the data item.\r\n\t *\r\n\t * Value may be used in heat-map calculations.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\t\treturn this.values.value.value;\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * zoom level itself or use object's `zoomLevel` if set.\r\n\t *\r\n\t * @param value  Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.setProperty(\"zoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.properties[\"zoomLevel\"];\r\n\t}\r\n\r\n\t/**\r\n\t * When `zoomToMapObject()` is called the map will either calculate suitable\r\n\t * center position itself or use object's `zoomGeoPoint` if set.\r\n\t *\r\n\t * @param value  Zoom geo point\r\n\t */\r\n\tpublic set zoomGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setProperty(\"zoomGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom geo point\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\treturn this.properties[\"zoomGeoPoint\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet geometry = this.getFeature().geometry;\r\n\t\tif (geometry) {\r\n\r\n\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\tlet west = bounds[0][0];\r\n\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\tlet north = bounds[1][1];\r\n\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\tlet changed = false;\r\n\t\t\tif (north != this.north) {\r\n\t\t\t\tthis._north = $math.round(north, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (south != this.south) {\r\n\t\t\t\tthis._south = $math.round(south, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (east != this.east) {\r\n\t\t\t\tthis._east = $math.round(east, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (west != this.west) {\r\n\t\t\t\tthis._west = $math.round(west, 6);\r\n\t\t\t\tchanged = true;\r\n\t\t\t}\r\n\r\n\t\t\t// solves single russia prob\r\n\t\t\tif (this._east < this._west) {\r\n\t\t\t\tthis._east = 180;\r\n\t\t\t\tthis._west = -180;\r\n\t\t\t}\r\n\r\n\t\t\tif (changed) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * [GEOJSONGeometry description]\r\n *\r\n * @todo Description\r\n */\r\nexport type GEOJSONGeometry = \"Point\" | \"LineString\" | \"Polygon\" | \"MultiPoint\" | \"MultiLineString\" | \"MultiPolygon\";\r\n\r\n/**\r\n * Defines data fields for [[MapSeries]].\r\n *\r\n * @todo Alllow any number of values?\r\n */\r\nexport interface IMapSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * A field name in data for a numeric value of the map object.\r\n\t */\r\n\tvalue?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomLevel` of the map object.\r\n\t */\r\n\tzoomLevel?: string;\r\n\r\n\t/**\r\n\t * A field name in data for a `zoomGeoPoint` of the map object.\r\n\t */\r\n\tzoomGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * A flag telling if the series should get data from `geodata` or not\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tuseGeodata?: boolean;\r\n\r\n\t/**\r\n\t * A list of object ids to include from the series.\r\n\t */\r\n\tinclude?: string[];\r\n\r\n\t/**\r\n\t * A list of object ids to exclude from the series.\r\n\t */\r\n\texclude?: string[];\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t */\r\n\tignoreBounds?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapSeries]].\r\n */\r\nexport interface IMapSeriesEvents extends ISeriesEvents {\r\n\tgeoBoundsChanged: {};\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSeriesAdapters extends ISeriesAdapters, IMapSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for series of map objects.\r\n *\r\n * @see {@link IMapSeriesEvents} for a list of available Events\r\n * @see {@link IMapSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSeries extends Series {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\t/**\r\n\t * The longitude of the East-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * The longitude of the West-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * The latitude of the South-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * The latitude of the North-most point in the series. (out of all elements)\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\tprotected _eastDefined: number;\r\n\r\n\tprotected _westDefined: number;\r\n\r\n\tprotected _southDefined: number;\r\n\r\n\tprotected _northDefined: number;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: MapChart;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\r\n\tprotected _mapObjects: ListTemplate<MapObject>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSeries\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.value = \"value\";\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tif (this.tooltip) {\r\n\t\t\tthis.tooltip.showInViewport = true;\r\n\t\t}\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSeriesDataItem();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Checks whether object should be included in series.\r\n\t *\r\n\t * @param includes  A list of explicitly included ids\r\n\t * @param excludes  A list of explicitly excluded ids\r\n\t * @param id        Id of the object\r\n\t * @return Include?\r\n\t */\r\n\tprotected checkInclude(includes: string[], excludes: string[], id: string): boolean {\r\n\t\tif (includes) {\r\n\t\t\tif (includes.length == 0) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (includes.indexOf(id) == -1) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (excludes && excludes.length > 0) {\r\n\t\t\tif (excludes.indexOf(id) != -1) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Should the map extract all the data about element from the GeoJSON?\r\n\t *\r\n\t * This is especially relevant for [[MapPolygonSeries]]. If not set to `true`\r\n\t * polygon series will need to contain geographical data in itself in order\r\n\t * to be drawn.\r\n\t *\r\n\t * If this is set to `true`, series will try to extract data for its objects\r\n\t * from either chart-level `geodata` or from series' `geodata` which holds\r\n\t * map infor in GeoJSON format.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Use GeoJSON data?\r\n\t */\r\n\tpublic set useGeodata(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"useGeodata\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use GeoJSON data?\r\n\t */\r\n\tpublic get useGeodata(): boolean {\r\n\t\treturn this.getPropertyValue(\"useGeodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be explictly included in the series.\r\n\t *\r\n\t * If this is not set, the series will automatically include all of the\r\n\t * objects, available in the GeoJSON map. (minus the ones listed in\r\n\t * `exclude`)\r\n\t *\r\n\t * If you need to display only specific objects, use `include`. E.g.:\r\n\t *\r\n\t * `include = [\"FR\", \"ES\", \"DE\"];`\r\n\t *\r\n\t * The above will show only France, Spain, and Germany out of the whole map.\r\n\t *\r\n\t * @param value  Included objects\r\n\t */\r\n\tpublic set include(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"include\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\t//this.data = [];\r\n\t\tthis.invalidateData();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Included objects\r\n\t */\r\n\tpublic get include(): string[] {\r\n\t\treturn this.getPropertyValue(\"include\");\r\n\t}\r\n\r\n\t/**\r\n\t * Should this series be included when calculating bounds of the map?\r\n\t *\r\n\t * This affects initial zoom as well as limits for zoom/pan.\r\n\t *\r\n\t * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and\r\n\t * `MapLineSeries` are not (`false`).\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Ignore bounds?\r\n\t */\r\n\tpublic set ignoreBounds(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"ignoreBounds\", value)) {\r\n\t\t\tif (this.chart) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Ignore bounds?\r\n\t */\r\n\tpublic get ignoreBounds(): boolean {\r\n\t\treturn this.getPropertyValue(\"ignoreBounds\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of object ids that should be excluded from the series.\r\n\t *\r\n\t * E.g. you want to include all of the areas from a GeoJSON map, except\r\n\t * Antarctica.\r\n\t *\r\n\t * You'd leave `include` empty, and set `exclude = [\"AQ\"]`.\r\n\t *\r\n\t * @param value  Excluded ids\r\n\t */\r\n\tpublic set exclude(value: string[]) {\r\n\t\tif (this.setPropertyValue(\"exclude\", value)) {\r\n\t\t\tthis.processIncExc();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Excluded ids\r\n\t */\r\n\tpublic get exclude(): string[] {\r\n\t\treturn this.getPropertyValue(\"exclude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Decorates a newly added object.\r\n\t *\r\n\t * @param event [description]\r\n\t */\r\n\tprotected handleObjectAdded(event: IListEvents<MapObject>[\"inserted\"]) {\r\n\t\tlet mapObject: MapObject = event.newValue;\r\n\t\tmapObject.parent = this;\r\n\t\tmapObject.series = this;\r\n\t\tmapObject.strokeWidth = mapObject.strokeWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The series supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\t\t\tfor (let i = this.data.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (this.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\tthis.data.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.disposeData();\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\")\r\n\t\t}, undefined, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.getDataSource(\"geodata\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"Point\" | \"MultiLineString\" | \"MultiPolygon\", coordinates: [number, number] | Array<Array<[number, number]>> | Array<Array<Array<[number, number]>>> } }[] {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tlet north: number;\r\n\t\tlet south: number;\r\n\t\tlet east: number;\r\n\t\tlet west: number;\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.north > north || !$type.isNumber(north)) {\r\n\t\t\t\tnorth = dataItem.north;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.south < south || !$type.isNumber(south)) {\r\n\t\t\t\tsouth = dataItem.south;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.west < west || !$type.isNumber(west)) {\r\n\t\t\t\twest = dataItem.west;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.east > east || !$type.isNumber(east)) {\r\n\t\t\t\teast = dataItem.east;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (this._mapObjects) {\r\n\t\t\tthis._mapObjects.each((mapObject) => {\r\n\t\t\t\tif (mapObject.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = mapObject.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = mapObject.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = mapObject.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (mapObject.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = mapObject.east;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\r\n\t\tif (this.north != north || this.east != east || this.south != south || this.west != west) {\r\n\t\t\tthis._north = north;\r\n\t\t\tthis._east = east;\r\n\t\t\tthis._west = west;\r\n\t\t\tthis._south = south;\r\n\r\n\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\tif (!this.ignoreBounds) {\r\n\t\t\t\tthis.chart.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * North-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set north(value: number) {\r\n\t\tthis._northDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._northDefined)) {\r\n\t\t\treturn this._northDefined;\r\n\t\t}\r\n\t\treturn this._north;\r\n\t}\r\n\r\n\t/**\r\n\t * South-most latitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated latitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set south(value: number) {\r\n\t\tthis._southDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._southDefined)) {\r\n\t\t\treturn this._southDefined;\r\n\t\t}\r\n\t\treturn this._south;\r\n\t}\r\n\r\n\t/**\r\n\t * West-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set west(value: number) {\r\n\t\tthis._westDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._westDefined)) {\r\n\t\t\treturn this._westDefined;\r\n\t\t}\r\n\t\treturn this._west;\r\n\t}\r\n\r\n\t/**\r\n\t * East-most longitude of the series.\r\n\t *\r\n\t * By default, this holds auto-calculated longitude of the extremity.\r\n\t *\r\n\t * It can be overridden manually.\r\n\t *\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set east(value: number) {\r\n\t\tthis._eastDefined = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._eastDefined)) {\r\n\t\t\treturn this._eastDefined;\r\n\t\t}\r\n\t\treturn this._east;\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthrow Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateTooltipBounds() {\r\n\t\tif (this.tooltip && this.topParent) {\r\n\t\t\tthis.tooltip.setBounds({ x: 10, y: 10, width: this.topParent.maxWidth - 20, height: this.topParent.maxHeight - 20 });\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSeries\"] = MapSeries;\r\nregistry.registeredClasses[\"MapSeriesDataItem\"] = MapSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapSeries.ts","/**\r\n * Map object module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapSeries, MapSeriesDataItem } from \"./MapSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines propeties for [[MapObject]].\r\n */\r\nexport interface IMapObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * A custom zoom level to use when `zoomToMapObject()` is called on this\r\n\t * map object.\r\n\t */\r\n\tzoomLevel?: number;\r\n\r\n\t/**\r\n\t * A custom point to use when `zoomToMapObject()` is called on this map\r\n\t * object.\r\n\t */\r\n\tzoomGeoPoint?: IGeoPoint;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapObject]].\r\n */\r\nexport interface IMapObjectEvents extends IContainerEvents {\r\n\tgeoBoundsChanged: {}\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapObjectAdapters extends IContainerAdapters, IMapObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A base class for all map objects: lines, images, etc.\r\n *\r\n * @see {@link IMapObjectEvents} for a list of available events\r\n * @see {@link IMapObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapObjectEvents;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSeries;\r\n\r\n\tpublic _dataItem: MapSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tprotected _east: number;\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tprotected _west: number;\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tprotected _south: number;\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tprotected _north: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapObject\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.clickable = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates this object, forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series && this.series.itemReaderText) {\r\n\t\t\tthis.readerTitle = this.series.itemReaderText;\r\n\t\t}\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Updates the item's bounding coordinates: coordinates of the East, West,\r\n\t * North, and South-most points.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\t\tlet feature = this.getFeature();\r\n\t\tif (feature) {\r\n\t\t\tlet geometry = feature.geometry;\r\n\r\n\t\t\tif (geometry) {\t\t\t\t\r\n\t\t\t\tlet bounds = d3geo.geoBounds(geometry);\r\n\r\n\t\t\t\tlet west = bounds[0][0];\r\n\t\t\t\tlet south = bounds[0][1];\r\n\r\n\t\t\t\tlet north = bounds[1][1];\r\n\t\t\t\tlet east = bounds[1][0];\r\n\r\n\t\t\t\tlet changed = false;\r\n\t\t\t\tif (north != this.north) {\r\n\t\t\t\t\tthis._north = $math.round(north, 8);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (south != this.south) {\r\n\t\t\t\t\tthis._south = $math.round(south);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (east != this.east) {\r\n\t\t\t\t\tthis._east = $math.round(east);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (west != this.west) {\r\n\t\t\t\t\tthis._west = $math.round(west);\r\n\t\t\t\t\tchanged = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (changed) {\r\n\t\t\t\t\tthis.dispatch(\"geoBoundsChanged\");\r\n\t\t\t\t\tif(this.series){\r\n\t\t\t\t\t\tthis.series.invalidateDataItems();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): any {\r\n\t\treturn {};\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the East-most point of the element.\r\n\t */\r\n\tpublic get east(): number {\r\n\t\tif ($type.isNumber(this._east)) {\r\n\t\t\treturn this._east;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.east;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the West-most point of the element.\r\n\t */\r\n\tpublic get west(): number {\r\n\t\tif ($type.isNumber(this._west)) {\r\n\t\t\treturn this._west;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.west;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the South-most point of the element.\r\n\t */\r\n\tpublic get south(): number {\r\n\t\tif ($type.isNumber(this._south)) {\r\n\t\t\treturn this._south;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.south;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the North-most point of the element.\r\n\t */\r\n\tpublic get north(): number {\r\n\t\tif ($type.isNumber(this._north)) {\r\n\t\t\treturn this._north;\r\n\t\t}\r\n\t\telse if (this.dataItem) {\r\n\t\t\treturn this.dataItem.north;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the element's [[Tooltip]].\r\n\t *\r\n\t * A tooltip will be populated using text templates in either `tooltipHTML` or\r\n\t * `tooltipText` as well as data in `tooltipDataItem`.\r\n\t *\r\n\t * @see {@link Tooltip}\r\n\t * @param optional point (sprite-related) to which tooltip must point.\r\n\t * @return returns true if the tooltip was shown and false if it wasn't (no text was found)\r\n\t */\r\n\tpublic showTooltip(point?: IPoint): boolean {\r\n\t\tconst res = super.showTooltip(point);\r\n\t\tif (res && this.showTooltipOn == \"always\" && !this.series.chart.events.has(\"mappositionchanged\", this.handleTooltipMove, this)) {\r\n\t\t\tthis.addDisposer(this.series.chart.events.on(\"mappositionchanged\", this.handleTooltipMove, this));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\tprotected handleTooltipMove(ev: any): void {\r\n\t\tif(!this.tooltip.isHidden){\r\n\t\t\tthis.showTooltip();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataItem]].\r\n\t * @param dataItem DataItem\r\n\t */\r\n\tprotected setDataItem(dataItem: MapSeriesDataItem) {\r\n\t\tsuper.setDataItem(dataItem);\r\n\t\tthis.applyAccessibility();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapObject\"] = MapObject;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapObject.ts","/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapImageSeriesDataItem, MapImageSeries } from \"./MapImageSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapImage]].\r\n */\r\nexport interface IMapImageProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Latitude of the image location.\r\n\t */\r\n\tlatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the mage location.\r\n\t */\r\n\tlongitude?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapImage]].\r\n */\r\nexport interface IMapImageEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImage]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageAdapters extends IMapObjectAdapters, IMapImageProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to place an image on the map.\r\n *\r\n * @see {@link IMapImageEvents} for a list of available events\r\n * @see {@link IMapImageAdapters} for a list of available Adapters\r\n */\r\nexport class MapImage extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageEvents;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapImage\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude image is placed at.\r\n\t *\r\n\t * @param value  Latitude\r\n\t */\r\n\tpublic set latitude(value: number) {\r\n\t\tthis.setPropertyValue(\"latitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"latitude\");\r\n\t\t\r\n\t\tif(!$type.isNumber(latitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlatitude = this.dataItem.geoPoint.latitude;\r\n\t\t}\t\t\r\n\t\treturn latitude;\t\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude image is placed on.\r\n\t *\r\n\t * @param value  Longitude\r\n\t */\r\n\tpublic set longitude(value: number) {\r\n\t\tthis.setPropertyValue(\"longitude\", value, false, true);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"longitude\");\r\n\t\tif(!$type.isNumber(longitude) && this.dataItem && this.dataItem.geoPoint){\r\n\t\t\tlongitude = this.dataItem.geoPoint.longitude;\r\n\t\t}\t\t\r\n\t\treturn longitude;\r\n\t}\r\n\r\n\t/**\r\n\t * Repositions the image to it's current position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition(): void {\r\n\t\tif ($type.isNumber(this.latitude) && $type.isNumber(this.longitude)) {\r\n\t\t\t//this.moveTo(this.series.chart.projection.convert({ latitude: this.latitude, longitude: this.longitude }));\r\n\t\t\tlet p = this.series.chart.projection.d3Projection([this.longitude, this.latitude]);\r\n\r\n\t\t\tlet visible: any = this.series.chart.projection.d3Path({ type: 'Point', coordinates: [this.longitude, this.latitude] });\r\n\r\n\t\t\tif (!visible) {\r\n\t\t\t\tthis.__disabled = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.__disabled = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.moveTo({ x: p[0], y: p[1] });\r\n\t\t}\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [this.longitude, this.latitude] } };\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImage\"] = MapImage;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapImage.ts","/**\r\n * A collection of Map-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n/**\r\n * Converts a multi-part polygon in X/Y coordinates to a geo-multipolygon in\r\n * geo-points (lat/long).\r\n *\r\n * @param multiPolygon  Source multi-polygon\r\n * @return Geo-multipolygon\r\n */\r\n\r\nexport function multiPolygonToGeo(multiPolygon: Array<[Array<[number, number]>, Array<[number, number]>]>): Array<Array<Array<IGeoPoint>>> {\r\n\treturn $array.map(multiPolygon, (polygon) => {\r\n\t\tlet surface: Array<[number, number]> = polygon[0];\r\n\t\tlet hole: Array<[number, number]> = polygon[1];\r\n\r\n\t\t//let holePoints: Array<IGeoPoint> = [];\r\n\r\n\t\tconst geoArea = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tgeoArea.push(multiPointToGeo(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tgeoArea.push(multiPointToGeo(hole));\r\n\t\t}\r\n\r\n\t\treturn geoArea;\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a multiline in X/Y coordinates to a geo-multiline in geo-points\r\n * (lat/long).\r\n *\r\n * @param multiLine  Source multiline\r\n * @return Geo-multiline\r\n */\r\nexport function multiLineToGeo(multiLine: Array<Array<[number, number]>>): Array<Array<IGeoPoint>> {\r\n\treturn $array.map(multiLine, (multiLine) => {\r\n\t\treturn multiPointToGeo(multiLine);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiPointToGeo(points: Array<[number, number]>): Array<IGeoPoint> {\r\n\treturn $array.map(points, (point) => {\r\n\t\treturn pointToGeo(point);\r\n\t});\r\n}\r\n\r\n\r\n/**\r\n * Converts multiple X/Y points into a lat/long geo-points.\r\n *\r\n * @param points  Source points\r\n * @return Geo-points\r\n */\r\nexport function multiGeoToPoint(geoPoints: Array<IGeoPoint>): Array<[number, number]> {\r\n\treturn $array.map(geoPoints, geoToPoint);\r\n}\r\n\r\n\r\n/**\r\n * Converts X/Y point into a lat/long geo-point.\r\n *\r\n * @param point  Source point\r\n * @return Geo-point\r\n */\r\nexport function pointToGeo(point: [number, number]): IGeoPoint {\r\n\treturn { longitude: point[0], latitude: point[1] }\r\n}\r\n\r\n/**\r\n * Converts lat/long geo-point into a X/Y point.\r\n *\r\n * @param point  Source geo-point\r\n * @return X/Y point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): [number, number] {\r\n\treturn [geoPoint.longitude, geoPoint.latitude];\r\n}\r\n\r\n\r\n/**\r\n * Converts geo line (collection of lat/long coordinates) to screen line (x/y).\r\n *\r\n * @param   multiGeoLine  Source geo line\r\n * @return                Screen line\r\n */\r\nexport function multiGeoLineToMultiLine(multiGeoLine: Array<Array<IGeoPoint>>): Array<Array<[number, number]>> {\r\n\treturn $array.map(multiGeoLine, (segment) => {\r\n\t\treturn $array.map(segment, geoToPoint);\r\n\t});\r\n}\r\n\r\n/**\r\n * Converts a geo polygon (collection of lat/long coordinates) to screen\r\n * polygon (x/y).\r\n *\r\n * @param   multiGeoPolygon  Source polygon\r\n * @return                   Screen polygon\r\n */\r\nexport function multiGeoPolygonToMultipolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>): Array<Array<Array<[number, number]>>> {\r\n\treturn $array.map(multiGeoPolygon, (geoPolygon) => {\r\n\t\tlet surface = geoPolygon[0];\r\n\t\tlet hole = geoPolygon[1];\r\n\r\n\t\tconst multiPolygon = [];\r\n\r\n\t\tif (surface) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(surface));\r\n\t\t}\r\n\r\n\t\tif (hole) {\r\n\t\t\tmultiPolygon.push(multiGeoToPoint(hole));\r\n\t\t}\r\n\r\n\t\treturn multiPolygon;\r\n\t});\r\n}\r\n\r\n/**\r\n * Returns a set of geographical coordinates for the circle with a center\r\n * at specific lat/long coordinates and radius (in degrees).\r\n *\r\n * @since 4.3.0\r\n * @param   longitude  Center longitude\r\n * @param   latitude   Center latitude\r\n * @param   radius     Radius (degrees)\r\n * @return             Circle coordinates\r\n */\r\nexport function getCircle(longitude: number, latitude: number, radius: number): Array<Array<Array<[number, number]>>> {\r\n\treturn [d3geo.geoCircle().center([longitude, latitude]).radius(radius)().coordinates as Array<Array<[number, number]>>];\r\n}\r\n\r\n/**\r\n * Returns a set of screen coordinates that represents a \"background\" area\r\n * between provided extremities.\r\n *\r\n * @since 4.3.0\r\n * @param   north  North latitude\r\n * @param   east   East longitude\r\n * @param   south  South latitude\r\n * @param   west   West longitude\r\n * @return         Polygon\r\n */\r\nexport function getBackground(north: number, east: number, south: number, west: number): Array<Array<Array<[number, number]>>> {\r\n\r\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\r\n\r\n\tif(west == -180){\r\n\t\twest = -179.9999;\r\n\t}\r\n\tif(south == -90){\r\n\t\tsouth = -89.9999;\r\n\t}\r\n\tif(north == 90){\r\n\t\tnorth = 89.9999;\r\n\t}\r\n\tif(east == 180){\r\n\t\teast = 179.9999;\r\n\t}\r\n\r\n\r\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\r\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\r\n\r\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\r\n\t\tlet surface: Array<[number, number]> = [];\r\n\t\tmultiPolygon.push([surface]);\r\n\r\n\t\tif(ln + stepLong > east){\r\n\t\t\tstepLong = east - ln;\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\r\n\t\t\tsurface.push([ll, north]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\r\n\t\t\tsurface.push([ln + stepLong, lt]);\r\n\t\t}\r\n\r\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\r\n\t\t\tsurface.push([ll, south]);\r\n\t\t}\r\n\r\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\r\n\t\t\tsurface.push([ln, lt]);\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn multiPolygon;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapUtils.ts","/**\r\n * Map polygon module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Polygon } from \"../../core/elements/Polygon\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport $polylabel from \"polylabel\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Set of geographical coordinates for the polygon.\r\n\t */\r\n\tmultiGeoPolygon?: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Set of screen coordinates for the polygon.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLatitude?: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tvisualLongitude?: number;\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection, to depict the shortest distance how it would go on the actual\r\n\t * land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t */\r\n\tprecision?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygon]].\r\n */\r\nexport interface IMapPolygonEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygon]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonAdapters extends IMapObjectAdapters, IMapPolygonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a polygon on the map.\r\n *\r\n * @see {@link IMapPolygonEvents} for a list of available events\r\n * @see {@link IMapPolygonAdapters} for a list of available Adapters\r\n */\r\nexport class MapPolygon extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonEvents;\r\n\r\n\t/**\r\n\t * A visual polygon element.\r\n\t */\r\n\tpublic polygon: Polygon;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapPolygonSeries;\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLatitude: number;\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t */\r\n\tprotected _visualLongitude: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygon\";\r\n\r\n\t\tthis.polygon = this.createChild(Polygon);\r\n\t\tthis.polygon.shouldClone = false;\r\n\t\tthis.polygon.applyOnClones = true;\r\n\t\tthis.setPropertyValue(\"precision\", 0.5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fill = interfaceColors.getFor(\"secondaryButton\");\r\n\t\tthis.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tthis.tooltipPosition = \"pointer\";\r\n\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set of coordinates for the polygon.\r\n\t *\r\n\t * @param multiGeoPolygon  Polygon coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis.setPropertyValue(\"multiGeoPolygon\", multiGeoPolygon, true);\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Polygon coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\tlet multiGeoPolygon = this.getPropertyValue(\"multiGeoPolygon\");\r\n\t\tif (!multiGeoPolygon && this.dataItem) {\r\n\t\t\tmultiGeoPolygon = this.dataItem.multiGeoPolygon;\r\n\t\t}\r\n\t\treturn multiGeoPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tif (this.setPropertyValue(\"multiPolygon\", multiPolygon)) {\r\n\t\t\tthis.updateExtremes();\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\tlet multiPolygon = this.getPropertyValue(\"multiPolygon\");\r\n\t\tif (!multiPolygon && this.dataItem) {\r\n\t\t\tmultiPolygon = this.dataItem.multiPolygon;\r\n\t\t}\r\n\t\treturn multiPolygon;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the polygon, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this.series) {\r\n\t\t\tlet projection = this.series.chart.projection;\r\n\r\n\t\t\tlet pathGenerator = projection.d3Path;\r\n\r\n\t\t\tif (this.multiPolygon) {\r\n\r\n\t\t\t\tif (this.series) {\r\n\t\t\t\t\tlet feature = { type: \"MultiPolygon\", coordinates: this.multiPolygon };\r\n\r\n\t\t\t\t\tprojection.d3Projection.precision(this.precision);\r\n\t\t\t\t\tthis.polygon.path = pathGenerator(<any>feature);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.series.calculateVisualCenter) {\r\n\t\t\t\t\tlet biggestArea = 0;\r\n\t\t\t\t\tlet biggestPolygon = this.multiPolygon[0];\r\n\r\n\t\t\t\t\tif (this.multiPolygon.length > 1) {\r\n\t\t\t\t\t\tfor (let i = 0; i < this.multiPolygon.length; i++) {\r\n\t\t\t\t\t\t\tlet polygon = this.multiPolygon[i];\r\n\t\t\t\t\t\t\tlet area = d3geo.geoArea({ type: \"Polygon\", coordinates: polygon });\r\n\r\n\t\t\t\t\t\t\tif (area > biggestArea) {\r\n\t\t\t\t\t\t\t\tbiggestPolygon = polygon;\r\n\t\t\t\t\t\t\t\tbiggestArea = area;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet center = $polylabel(biggestPolygon);\r\n\r\n\t\t\t\t\tthis._visualLongitude = center[0];\r\n\t\t\t\t\tthis._visualLatitude = center[1];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._visualLongitude = this.longitude;\r\n\t\t\t\t\tthis._visualLatitude = this.latitude;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the geometrical center of the polygon.\r\n\t *\r\n\t * @readonly\r\n\t * @return Center longitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Latitude\r\n\t */\r\n\tpublic set visualLatitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLatitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Latitude\r\n\t */\r\n\tpublic get visualLatitude(): number {\r\n\t\tlet latitude = this.getPropertyValue(\"visualLatitude\");\r\n\t\tif ($type.isNumber(latitude)) {\r\n\t\t\treturn (latitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLatitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLatitude\",\r\n\t\t\t\tthis._visualLatitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the visual center of the polygon.\r\n\t *\r\n\t * It may (and probably won't) coincide with geometrical center.\r\n\t *\r\n\t * @since 4.3.0\r\n\t * @param  value  Longitude\r\n\t */\r\n\tpublic set visualLongitude(value: number) {\r\n\t\tthis.setPropertyValue(\"visualLongitude\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Longitude\r\n\t */\r\n\tpublic get visualLongitude(): number {\r\n\t\tlet longitude = this.getPropertyValue(\"visualLongitude\");\r\n\t\tif ($type.isNumber(longitude)) {\r\n\t\t\treturn (longitude);\r\n\t\t}\r\n\t\tif (!this._adapterO) {\r\n\t\t\treturn this._visualLongitude;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this._adapterO.apply(\r\n\t\t\t\t\"visualLongitude\",\r\n\t\t\t\tthis._visualLongitude\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Not 100% sure about this, as if we add something to MapPolygon this\r\n\t * won't be true, but otherwise we will get all 0 and the tooltip won't\r\n\t * be positioned properly\r\n\t * @hidden\r\n\t */\r\n\r\n\t/**\r\n\t * Element's width in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelWidth(): number {\r\n\t\treturn this.polygon.pixelWidth;\r\n\t}\r\n\r\n\t/**\r\n\t * Element's height in pixels.\r\n\t *\r\n\t * @readonly\r\n\t * @return Width (px)\r\n\t */\r\n\tpublic get pixelHeight(): number {\r\n\t\treturn this.polygon.pixelHeight;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[MapPolygon]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.polygon.copyFrom(source.polygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateExtremes() {\r\n\t\tsuper.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * used to sorth polygons from big to small\r\n\t */\r\n\tpublic get boxArea() {\r\n\t\treturn (this.north - this.south) * (this.east - this.west);\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).x;\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\treturn this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).y\r\n\t}\r\n\r\n\t/**\r\n\t * When polygon's sides are plotted, they are bent according to the used\r\n\t * projection.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between two points of polygon's side is less\r\n\t * than `precision`, no bending will take place and the line will be straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight lines on all\r\n\t * polygon's sides.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.5\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygon\"] = MapPolygon;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapPolygon.ts","/**\r\n * Map polygon series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapPolygon } from \"./MapPolygon\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapPolygonDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapPolygonSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapPolygonSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t */\r\n\tprotected _mapPolygon: MapPolygon;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon.\r\n\t */\r\n\tprotected _polygon: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiPolygon: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon.\r\n\t */\r\n\tprotected _geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>];\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon.\r\n\t */\r\n\tprotected _multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapPolygonSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } } {\r\n\t\tif (this.multiPolygon && this.multiPolygon.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: this.multiPolygon } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapPolygon]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapPolygon(): MapPolygon {\r\n\t\tif (!this._mapPolygon) {\r\n\t\t\tlet mapPolygon = this.component.mapPolygons.create();\r\n\t\t\tthis._mapPolygon = mapPolygon;\r\n\t\t\tthis.addSprite(mapPolygon);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapPolygons.removeValue(mapPolygon);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapPolygon;\r\n\t\t}\r\n\t\treturn this._mapPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 200 ],\r\n\t *     [ 170, 240 ],\r\n\t *     [ 100, 150 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param polygon  Coordinates\r\n\t */\r\n\tpublic set polygon(polygon: Array<Array<[number, number]>>) {\r\n\t\tthis._polygon = polygon;\r\n\t\tthis.multiPolygon = [polygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get polygon(): Array<Array<[number, number]>> {\r\n\t\treturn this._polygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Part 1\r\n\t *   [\r\n\t *     [\r\n\t *       [ 100, 150 ],\r\n\t *       [ 120, 200 ],\r\n\t *       [ 150, 220 ],\r\n\t *       [ 170, 240 ],\r\n\t *       [ 100, 150 ]\r\n\t *     ]\r\n\t *   ],\r\n\t *\r\n\t *   // Part 2\r\n\t *   [\r\n\t *     [\r\n\t *       [ 300, 350 ],\r\n\t *       [ 320, 400 ],\r\n\t *       [ 350, 420 ],\r\n\t *       [ 370, 440 ],\r\n\t *       [ 300, 350 ]\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiPolygon  Coordinates\r\n\t */\r\n\tpublic set multiPolygon(multiPolygon: Array<Array<Array<[number, number]>>>) {\r\n\t\tthis._multiPolygon = multiPolygon;\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiPolygon(): Array<Array<Array<[number, number]>>> {\r\n\t\treturn this._multiPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     { latitude: -10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: -10.0 },\r\n\t *     { latitude: 10.0, longitude: 10.0 },\r\n\t *     { latitude: -10.0, longitude: -10.0 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.6} GeoJSON Polygon reference\r\n\t * @param geoPolygon  Coordinates\r\n\t */\r\n\tpublic set geoPolygon(geoPolygon: [Array<IGeoPoint>, Array<IGeoPoint>]) {\r\n\t\tthis._geoPolygon = geoPolygon;\r\n\t\tthis.multiGeoPolygon = [geoPolygon];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoPolygon(): [Array<IGeoPoint>, Array<IGeoPoint>] {\r\n\t\treturn this._geoPolygon;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-part polygon. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: 180.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 50.0 },\r\n\t *       { longitude: 170.0, latitude: 40.0 },\r\n\t *       { longitude: 180.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ],\r\n\t *   [\r\n\t *     [\r\n\t *       { longitude: -170.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 50.0 },\r\n\t *       { longitude: -180.0, latitude: 40.0 },\r\n\t *       { longitude: -170.0, latitude: 40.0 }\r\n\t *     ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.7} GeoJSON MultiPolygon reference\r\n\t * @param multiGeoPolygon  Coordinates\r\n\t */\r\n\tpublic set multiGeoPolygon(multiGeoPolygon: Array<[Array<IGeoPoint>, Array<IGeoPoint>]>) {\r\n\t\tthis._multiGeoPolygon = multiGeoPolygon;\r\n\t\tthis.multiPolygon = $mapUtils.multiGeoPolygonToMultipolygon(multiGeoPolygon);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoPolygon(): Array<[Array<IGeoPoint>, Array<IGeoPoint>]> {\r\n\t\treturn this._multiGeoPolygon;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds polygon pixels.\r\n\t */\r\n\tpolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-polygon pixels.\r\n\t */\r\n\tmultiPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds polygon data in Geo coordinates.\r\n\t */\r\n\tgeoPolygon?: string;\r\n\r\n\t/**\r\n\t * Field name that holds poly-polygon data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesProperties extends IMapSeriesProperties {\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsBy: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\";\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @since 4.9.36\r\n\t */\r\n\tsortPolygonsReversed: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapPolygonSeries]].\r\n */\r\nexport interface IMapPolygonSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapPolygonSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapPolygonSeriesAdapters extends IMapSeriesAdapters, IMapPolygonSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map polygon elements.\r\n *\r\n * @see {@link IMapPolygonSeriesEvents} for a list of available Events\r\n * @see {@link IMapPolygonSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapPolygonSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapPolygonSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapPolygonSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapPolygonSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapPolygonSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapPolygonSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map polygons in the series.\r\n\t */\r\n\tprotected _mapPolygons: ListTemplate<MapPolygon>;\r\n\r\n\t/**\r\n\t * Indicates if series should automatically calculate visual center of the\r\n\t * polygons (accessible via `visualLongitude` and `visualLatitude` properties\r\n\t * of the [[MapPolygon]]).\r\n\t *\r\n\t * @default false\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic calculateVisualCenter: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"MapPolygonSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPolygon = \"multiPolygon\";\r\n\t\tthis.dataFields.polygon = \"polygon\";\r\n\r\n\t\tthis.dataFields.geoPolygon = \"geoPolygon\";\r\n\t\tthis.dataFields.multiGeoPolygon = \"multiGeoPolygon\";\r\n\r\n\t\tthis.setPropertyValue(\"sortPolygonsBy\", \"area\");\r\n\t\tthis.setPropertyValue(\"sortPolygonsReversed\", false);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapPolygonSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected processIncExc() {\r\n\t\tthis.mapPolygons.clear();\r\n\t\tsuper.processIncExc();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = !this._dataSources[\"geodata\"] ? this.chart.geodata : undefined;\r\n\r\n\t\t\tif (this.geodata) {\r\n\t\t\t\tgeoJSON = this.geodata;\r\n\t\t\t}\r\n\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\r\n\t\t\t\t\t\t\tif (this.chart.geodataNames && this.chart.geodataNames[id]) {\r\n\t\t\t\t\t\t\t\tfeature.properties.name = this.chart.geodataNames[id];\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (type == \"Polygon\" || type == \"MultiPolygon\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\tif (coordinates) {\r\n\t\t\t\t\t\t\t\t\t// make the same as MultiPolygon\r\n\t\t\t\t\t\t\t\t\tif (type == \"Polygon\") {\r\n\t\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// find data object in user-provided data\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapPolygonDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t\t\t\t\t// create one if not found\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPolygon: coordinates, id: id, madeFromGeoData: true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// in case found\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPolygon) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPolygon = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapPolygon);\r\n\t\t});\r\n\r\n\t\tif (this.sortPolygonsBy != \"none\") {\r\n\r\n\t\t\tconst sortBy = this.sortPolygonsBy;\r\n\t\t\tconst reversed = this.sortPolygonsReversed;\r\n\t\t\tthis.mapPolygons.sort((a, b) => {\r\n\t\t\t\tlet valA: number | string = \"\";\r\n\t\t\t\tlet valB: number | string = \"\";\r\n\t\t\t\tlet dirA: Ordering = -1;\r\n\t\t\t\tlet dirB: Ordering = 1;\r\n\r\n\t\t\t\tswitch (sortBy) {\r\n\t\t\t\t\tcase \"area\":\r\n\t\t\t\t\t\tvalA = a.boxArea;\r\n\t\t\t\t\t\tvalB = b.boxArea;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"name\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.name || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"id\":\r\n\t\t\t\t\t\tvalA = (<any>a).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tvalB = (<any>b).dataItem.dataContext.id || \"\";\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"latitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.south : a.north;\r\n\t\t\t\t\t\tvalB = reversed ? b.south : b.north;\r\n\t\t\t\t\t\tdirA = -1;\r\n\t\t\t\t\t\tdirB = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"longitude\":\r\n\t\t\t\t\t\tvalA = reversed ? a.east : a.west;\r\n\t\t\t\t\t\tvalB = reversed ? b.east : b.west;\r\n\t\t\t\t\t\tdirA = 1;\r\n\t\t\t\t\t\tdirB = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (valA < valB) {\r\n\t\t\t\t\treturn reversed ? dirB : dirA;\r\n\t\t\t\t}\r\n\t\t\t\tif (valA > valB) {\r\n\t\t\t\t\treturn reversed ? dirA : dirB;\r\n\t\t\t\t}\r\n\t\t\t\treturn 0;\r\n\t\t\t});\r\n\r\n\t\t\tthis.mapPolygons.each((mapPolygon, index) => {\r\n\t\t\t\tmapPolygon.validate();\r\n\t\t\t\t// makes small go first to avoid hover problems with IE\r\n\t\t\t\tif (!mapPolygon.zIndex && !mapPolygon.propertyFields.zIndex) {\r\n\t\t\t\t\tmapPolygon.zIndex = 1000000 - index;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * List of polygon elements in the series.\r\n\t *\r\n\t * @return Polygon list\r\n\t */\r\n\tpublic get mapPolygons(): ListTemplate<MapPolygon> {\r\n\r\n\t\tif (!this._mapPolygons) {\r\n\t\t\tlet polygonTemplate: MapPolygon = new MapPolygon();\r\n\r\n\t\t\tlet mapPolygons: ListTemplate<MapPolygon> = new ListTemplate<MapPolygon>(polygonTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapPolygons));\r\n\t\t\tthis._disposers.push(mapPolygons.template);\r\n\t\t\tmapPolygons.template.focusable = true;\r\n\t\t\tmapPolygons.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapPolygons = mapPolygons;\r\n\t\t\tthis._mapObjects = mapPolygons;\r\n\t\t}\r\n\r\n\t\treturn this._mapPolygons;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapPolygon by id in geoJSON file\r\n\t * @param polygon id\r\n\t * @return {MapPolygon}\r\n\t */\r\n\tpublic getPolygonById(id: string): MapPolygon {\r\n\t\treturn $iter.find(this.mapPolygons.iterator(), (mapPolygon) => {\r\n\t\t\tlet dataContext: any = mapPolygon.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapPolygons.template.copyFrom(source.mapPolygons.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] {\r\n\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: Array<Array<Array<[number, number]>>> } }[] = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapPolygons.each((mapPolygon) => {\r\n\t\t\tif (this.dataItems.indexOf(mapPolygon._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapPolygon.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * How to order polygons in actual SVG document. Affects selection order\r\n\t * using TAB key.\r\n\t *\r\n\t * Available options: `\"area\"` (default), `\"name\"`, `\"longitude\"`,\r\n\t * `\"latitude\"`, `\"id\"`, and `\"none\"`.\r\n\t *\r\n\t * @default area\r\n\t * @since 4.9.36\r\n\t * @param value  How to sort map polygons\r\n\t */\r\n\tpublic set sortPolygonsBy(value: \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\") {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsBy\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return How to sort map polygons\r\n\t */\r\n\tpublic get sortPolygonsBy(): \"area\" | \"name\" | \"longitude\" | \"latitude\" | \"id\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsBy\");\r\n\t}\r\n\r\n\t/**\r\n\t * If `sortPolygonsBy` is set to something other than `\"none\"`, polygons\r\n\t * will be sorted by the given parameter, using natural sort direction.\r\n\t *\r\n\t * Setting `sortPolygonsReversed = true` will reverse this direction.\r\n\t *\r\n\t * @default false\r\n\t * @since 4.9.36\r\n\t * @param value  Reverse polygon sort direction\r\n\t */\r\n\tpublic set sortPolygonsReversed(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"sortPolygonsReversed\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Reverse polygon sort direction\r\n\t */\r\n\tpublic get sortPolygonsReversed(): boolean {\r\n\t\treturn this.getPropertyValue(\"sortPolygonsReversed\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapPolygonSeries\"] = MapPolygonSeries;\r\nregistry.registeredClasses[\"MapPolygonSeriesDataItem\"] = MapPolygonSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapPolygonSeries.ts","/**\r\n * This module contains funcitonality related to geographical projections\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../../core/defs/IGeoPoint\";\r\n//import { IGeoRectangle } from \"../../../core/defs/IGeoRectangle\";\r\nimport { IPoint, IOrientationPoint } from \"../../../core/defs/IPoint\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as $math from \"../../../core/utils/Math\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport { MapChart } from \"../../types/MapChart\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This is a base class for a geographical projection.\r\n */\r\nexport class Projection {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Projection: d3geo.GeoProjection;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _d3Path: d3geo.GeoPath;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\r\n\tconstructor() {\r\n\t\tthis.d3Projection = d3geo.geoEquirectangular();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic set d3Projection(projection: d3geo.GeoProjection) {\r\n\t\tthis._d3Projection = projection;\r\n\t\tprojection.precision(0.1);\r\n\t\tthis._d3Path = d3geo.geoPath().projection(projection);\r\n\r\n\t\tif (this.chart) {\r\n\t\t\tthis.chart.invalidateProjection();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * d3 projection\r\n\t */\r\n\tpublic get d3Projection(): d3geo.GeoProjection {\r\n\t\treturn this._d3Projection;\r\n\t}\r\n\r\n\t/**\r\n\t * d3 path generator method\r\n\t * @ignore\r\n\t */\r\n\tpublic get d3Path(): d3geo.GeoPath {\r\n\t\treturn this._d3Path;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic get scale(): number {\r\n\t\treturn this.d3Projection.scale() / 100;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a geographical point (lat/long) to a screen point (x/y)\r\n\t * @param geoPoint Geo point (lat/long)\r\n\t * @return Screen point (x/y)\r\n\t */\r\n\tpublic convert(geoPoint: IGeoPoint): IPoint {\r\n\t\t/*\r\n\t\tgeoPoint = $geo.normalizePoint(geoPoint);\r\n\t\tgeoPoint = this.rotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\tlet pointInRadians: IPoint = this.project(geoPoint.longitude * $math.RADIANS, geoPoint.latitude * $math.RADIANS);\r\n\t\treturn {\r\n\t\t\tx: $math.round(pointInRadians.x * $math.DEGREES - this.centerPoint.x, 4) * this.scale,\r\n\t\t\ty: $math.round(-pointInRadians.y * $math.DEGREES - this.centerPoint.y, 4) * this.scale\r\n\t\t};*/\r\n\r\n\t\tlet p = this.d3Projection([geoPoint.longitude, geoPoint.latitude]);\r\n\t\tif (p) {\r\n\t\t\treturn { x: p[0], y: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a screen point (x/y) to a geographical point (lat/long)\r\n\t * @param point Screen point (x/y)\r\n\t * @return Geo point (lat/long)\r\n\t */\r\n\tpublic invert(point: IPoint): IGeoPoint {\r\n\t\t/*\r\n\t\tlet pointInRadians: IGeoPoint = this.unproject((point.x / this.scale + this.centerPoint.x) * $math.RADIANS, (-point.y / this.scale - this.centerPoint.y) * $math.RADIANS);\r\n\r\n\t\tlet geoPoint = { longitude: pointInRadians.longitude * $math.DEGREES, latitude: pointInRadians.latitude * $math.DEGREES };\r\n\r\n\t\tgeoPoint = this.unrotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);\r\n\t\t*/\r\n\t\tlet p = this.d3Projection.invert([point.x, point.y]);\r\n\t\tif (p) {\r\n\t\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns X/Y coordinates.\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param lambda [description]\r\n\t * @param phi    [description]\r\n\t * @return X/Y coordinates\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic project(lambda: number, phi: number): IPoint {\r\n\t\treturn this.convert({ longitude: lambda * $math.DEGREES, latitude: phi * $math.DEGREES });\r\n\t}\r\n\r\n\t/**\r\n\t * Returns geographical coordinates (lat/long).\r\n\t * Individual projections will override this method to apply their own\r\n\t * projection logic.\r\n\t * @deprecated\r\n\t * @param x X coordinate\r\n\t * @param y Y coordinate\r\n\t * @return Geographical point\r\n\t * @todo Needs description\r\n\t */\r\n\tpublic unproject(x: number, y: number): IGeoPoint {\r\n\t\treturn this.invert({ x: x, y: y });\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic rotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS + deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaPhi + x * sinDeltaPhi;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaGamma + y * sinDeltaGamma) };\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @deprecated\r\n\t */\r\n\tpublic unrotate(geoPoint: IGeoPoint, deltaLongitude: number, deltaLatitude: number, deltaGamma?: number): IGeoPoint {\r\n\r\n\t\tlet deltaLambda = deltaLongitude * $math.RADIANS;\r\n\t\tlet deltaPhi = deltaLatitude * $math.RADIANS;\r\n\t\tdeltaGamma = deltaGamma * $math.RADIANS;\r\n\r\n\t\tlet lambda = geoPoint.longitude * $math.RADIANS - deltaLambda;\r\n\t\tlet phi = geoPoint.latitude * $math.RADIANS;\r\n\r\n\t\tlet cosDeltaPhi = Math.cos(deltaPhi);\r\n\t\tlet sinDeltaPhi = Math.sin(deltaPhi);\r\n\t\tlet cosDeltaGamma = Math.cos(deltaGamma);\r\n\t\tlet sinDeltaGamma = Math.sin(deltaGamma);\r\n\r\n\t\tlet cosPhi = Math.cos(phi);\r\n\r\n\t\tlet x = Math.cos(lambda) * cosPhi;\r\n\t\tlet y = Math.sin(lambda) * cosPhi;\r\n\t\tlet z = Math.sin(phi);\r\n\t\tlet k = z * cosDeltaGamma - y * sinDeltaGamma;\r\n\r\n\t\treturn { longitude: $math.DEGREES * Math.atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), latitude: $math.DEGREES * Math.asin(k * cosDeltaPhi - x * sinDeltaPhi) };\r\n\t}\r\n\r\n\r\n\t//@todo: move to some utils?\r\n\t//@todo: add credits to: https://www.movable-type.co.uk/scripts/latlong.html\r\n\tpublic intermediatePoint(pointA: IGeoPoint, pointB: IGeoPoint, position: number): IGeoPoint {\r\n\t\tlet p = d3geo.geoInterpolate([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude])(position);\r\n\t\treturn { longitude: p[0], latitude: p[1] };\r\n\t};\r\n\r\n\t// returns radians\r\n\tpublic multiDistance(multiGeoLine: Array<Array<IGeoPoint>>): number {\r\n\t\tlet distance = 0;\r\n\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\tif (points.length > 1) {\r\n\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\tlet pointA = points[p - 1];\r\n\t\t\t\t\tlet pointB = points[p];\r\n\t\t\t\t\tdistance += this.distance(pointA, pointB);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn distance;\r\n\t}\r\n\r\n\t// returns radians\r\n\tpublic distance(pointA: IGeoPoint, pointB: IGeoPoint): number {\r\n\t\treturn d3geo.geoDistance([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude]);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IOrientationPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet intermediatePoint = this.positionToGeoPoint(multiGeoLine, position);\r\n\t\t\tlet intermediatePointA = this.positionToGeoPoint(multiGeoLine, position - 0.01);\r\n\t\t\tlet intermediatePointB = this.positionToGeoPoint(multiGeoLine, position + 0.01);\r\n\r\n\t\t\tif (intermediatePointA && intermediatePointB) {\r\n\r\n\t\t\t\tlet point = this.convert(intermediatePoint);\r\n\r\n\t\t\t\tlet pa = this.convert(intermediatePointA);\r\n\t\t\t\tlet pb = this.convert(intermediatePointB);\r\n\r\n\t\t\t\treturn { x: point.x, y: point.y, angle: $math.getAngle(pa, pb) };\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Converts relative position along the line (0-1) into pixel coordinates.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToGeoPoint(multiGeoLine: Array<Array<IGeoPoint>>, position: number): IGeoPoint {\r\n\r\n\t\tif (multiGeoLine) {\r\n\t\t\tlet totalDistance: number = this.multiDistance(multiGeoLine);\r\n\t\t\tlet currentDistance: number = 0;\r\n\r\n\t\t\tlet distanceAB: number;\r\n\t\t\tlet positionA: number = 0;\r\n\t\t\tlet positionB: number = 0;\r\n\t\t\tlet pointA: IGeoPoint;\r\n\t\t\tlet pointB: IGeoPoint;\r\n\r\n\t\t\tfor (let s = 0; s < multiGeoLine.length; s++) {\r\n\t\t\t\tlet points: Array<IGeoPoint> = multiGeoLine[s];\r\n\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\tfor (let p = 1; p < points.length; p++) {\r\n\t\t\t\t\t\tpointA = points[p - 1];\r\n\t\t\t\t\t\tpointB = points[p];\r\n\r\n\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\r\n\t\t\t\t\t\tdistanceAB = this.distance(pointA, pointB);\r\n\t\t\t\t\t\tcurrentDistance += distanceAB;\r\n\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\r\n\r\n\t\t\t\t\t\tif (positionA <= position && positionB > position) {\r\n\t\t\t\t\t\t\ts = multiGeoLine.length;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (points.length == 1) {\r\n\t\t\t\t\tpointA = points[0];\r\n\t\t\t\t\tpointB = points[0];\r\n\t\t\t\t\tpositionA = 0;\r\n\t\t\t\t\tpositionB = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (pointA && pointB) {\r\n\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\r\n\t\t\t\treturn this.intermediatePoint(pointA, pointB, positionAB);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { longitude: 0, latitude: 0 };\r\n\t}\r\n}\r\n\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Projection\"] = Projection;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/Projection.ts","/**\r\n * A module for the mini-map control.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { IRectangle } from \"../../core/defs/IRectangle\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Rectangle } from \"../../core/elements/Rectangle\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapSeries } from \"./MapSeries\";\r\nimport { List, IListEvents } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[SmallMap]].\r\n */\r\nexport interface ISmallMapProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[SmallMap]].\r\n */\r\nexport interface ISmallMapEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[SmallMap]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISmallMapAdapters extends IContainerAdapters, ISmallMapProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a \"bird's eye\" view of the whole map.\r\n *\r\n * This control creates a mini-map with the whole of the map, highlighting\r\n * the area which is in the current viewport of the map map.\r\n *\r\n * @see {@link ISmallMapEvents} for a list of available events\r\n * @see {@link ISmallMapAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class SmallMap extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISmallMapProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISmallMapAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISmallMapEvents;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A container that holds the visual elements for the mini-map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic seriesContainer: Container;\r\n\r\n\t/**\r\n\t * The rectangle element which highlights current viewport.\r\n\t */\r\n\tpublic rectangle: Rectangle;\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t */\r\n\tprotected _series: List<MapSeries>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"SmallMap\";\r\n\r\n\t\t// Set defaults\r\n\t\tthis.align = \"left\";\r\n\t\tthis.valign = \"bottom\";\r\n\t\tthis.percentHeight = 20;\r\n\t\tthis.percentWidth = 20;\r\n\t\tthis.margin(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\t// Set background defailts\r\n\t\tthis.background.fillOpacity = 0.9;\r\n\t\tthis.background.fill = interfaceColors.getFor(\"background\");\r\n\r\n\t\t// Set up events\r\n\t\tthis.events.on(\"hit\", this.moveToPosition, this, false);\r\n\t\tthis.events.on(\"maxsizechanged\", this.updateMapSize, this, false);\r\n\r\n\t\t// Create a container\r\n\t\tthis.seriesContainer = this.createChild(Container);\r\n\t\tthis.seriesContainer.shouldClone = false;\r\n\r\n\t\t// Create an outline rectangle\r\n\t\tlet rectangle: Rectangle = this.createChild(Rectangle);\r\n\t\trectangle.shouldClone = false;\r\n\t\trectangle.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\trectangle.strokeWidth = 1;\r\n\t\trectangle.strokeOpacity = 0.5;\r\n\t\trectangle.fill = color(); //\"none\";\r\n\t\trectangle.verticalCenter = \"middle\";\r\n\t\trectangle.horizontalCenter = \"middle\";\r\n\t\trectangle.isMeasured = false;\r\n\t\trectangle.visible = false;\t\t\r\n\r\n\t\tthis.rectangle = rectangle;\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * A list of map series used to draw the mini-map.\r\n\t *\r\n\t * @readonly\r\n\t * @return Series\r\n\t */\r\n\tpublic get series(): List<MapSeries> {\r\n\t\tif (!this._series) {\r\n\t\t\tthis._series = new List<MapSeries>();\r\n\t\t\tthis._series.events.on(\"inserted\", this.handleSeriesAdded, this, false);\r\n\t\t\tthis._series.events.on(\"removed\", this.handleSeriesRemoved, this, false);\r\n\t\t}\r\n\t\treturn this._series;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new series when they are pushed into a `series` list.\r\n\t *\r\n\t * @param event Event\r\n\t */\r\n\tprotected handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]) {\r\n\t\tlet series: MapSeries = event.newValue;\r\n\t\tif (this.chart.series.contains(series)) {\r\n\t\t\tlet newSeries = series.clone();\r\n\t\t\tthis._series.removeValue(series);\r\n\t\t\tthis._series.push(newSeries);\r\n\t\t\tseries = newSeries;\r\n\r\n\t\t\tthis.chart.dataUsers.push(newSeries);\r\n\t\t}\r\n\t\tseries.chart = this.chart;\r\n\t\tseries.parent = this.seriesContainer;\r\n\t\tseries.interactionsEnabled = false;\r\n\t\tseries.events.on(\"inited\", this.updateMapSize, this, false);\r\n\t\tseries.hidden = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Cleans up after series are removed from Scrollbar.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleSeriesRemoved(event: IListEvents<MapSeries>[\"removed\"]) {\r\n\t\t//let sourceSeries: MapSeries = event.oldValue;\r\n\t\tthis.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * Moves main map pan position after click on the small map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic moveToPosition(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]) {\r\n\t\tlet rectPoint: IPoint = $utils.spritePointToSprite(event.spritePoint, this, this.seriesContainer);\r\n\t\tlet geoPoint: IGeoPoint = this.chart.seriesPointToGeo(rectPoint);\r\n\t\tthis.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);\r\n\t}\r\n\r\n\t/**\r\n\t * A chart/map that this control is meant for.\r\n\t *\r\n\t * @param chart  Chart/map\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tif (this.chart != chart) {\r\n\t\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\t\t//chart.events.on(\"zoomlevelchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"mappositionchanged\", this.updateRectangle, this, false),\r\n\t\t\t\tchart.events.on(\"scaleratiochanged\", this.updateMapSize, this, false)\r\n\t\t\t]));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Chart/map\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the viewport recangle as per current map zoom/pan position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateRectangle(): void {\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet zoomLevel: number = chart.zoomLevel;\r\n\t\tlet rectangle: Rectangle = this.rectangle;\r\n\r\n\t\trectangle.width = this.pixelWidth / zoomLevel;\r\n\t\trectangle.height = this.pixelHeight / zoomLevel;\r\n\r\n\t\tlet scale: number = Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\r\n\t\tlet seriesContainer: Container = chart.seriesContainer;\r\n\r\n\t\trectangle.x = Math.ceil(( - seriesContainer.pixelX) * scale / zoomLevel) + this.seriesContainer.pixelX;\r\n\t\trectangle.y = Math.ceil(( - seriesContainer.pixelY) * scale / zoomLevel) + this.seriesContainer.pixelY;\r\n\r\n\t\trectangle.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * Update map size so that internal elements can redraw themselves after\r\n\t * the size of the small map changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateMapSize(): void {\r\n\t\tif (this.chart) {\r\n\t\t\tlet scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;\r\n\t\t\tthis.seriesContainer.scale = scale;\r\n\r\n\t\t\tlet bbox: IRectangle = {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0,\r\n\t\t\t\tx: 0,\r\n\t\t\t\ty: 0\r\n\t\t\t};\r\n\r\n\t\t\ttry { // Add exception catching to tame FF\r\n\t\t\t\tbbox = this.seriesContainer.group.node.getBBox();\r\n\t\t\t} catch (err) { }\r\n\r\n\t\t\tif(bbox.width > 0){\r\n\t\t\t\tthis.rectangle.visible = true;\r\n\t\t\t}\r\n\r\n\t\t\tthis.seriesContainer.x = this.pixelWidth / 2 - bbox.x * scale - bbox.width / 2 * scale;\r\n\t\t\tthis.seriesContainer.y = this.pixelHeight / 2 - bbox.y * scale - bbox.height / 2 * scale;\r\n\r\n\t\t\tthis.updateRectangle();\r\n\t\t\tthis.afterDraw();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Update elements after drawing the small map.\r\n\t */\r\n\tprotected afterDraw(): void {\r\n\t\tsuper.afterDraw();\r\n\t\t//this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });\r\n\t\tthis.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif (config) {\r\n\r\n\t\t\t// Set up series\r\n\t\t\tif ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n\t\t\t\tfor (let i = 0, len = config.series.length; i < len; i++) {\r\n\t\t\t\t\tlet series = config.series[i];\r\n\t\t\t\t\tif ($type.hasValue(series) && $type.isString(series) && this.map.hasKey(series)) {\r\n\t\t\t\t\t\tconfig.series[i] = this.map.getKey(series);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SmallMap\"] = SmallMap;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/SmallMap.ts","/**\r\n * A collection of GeoJSON format-related utility functions.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * Normalizes a geo-point.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo-point\r\n * @return Normalized geo-point\r\n */\r\nexport function normalizePoint(geoPoint: IGeoPoint): IGeoPoint {\r\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\r\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\r\n\r\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\r\n\r\n\tif (Math.abs(latitude180) > 90) {\r\n\t\tlongitude = wrapAngleTo180(longitude + 180);\r\n\t}\r\n\r\n\tgeoPoint.longitude = longitude;\r\n\tgeoPoint.latitude = latitude;\r\n\r\n\treturn geoPoint;\r\n}\r\n\r\n/**\r\n * Normalizes all points of a geo-line.\r\n *\r\n * @ignore Exclude from docs\r\n * @param multiline  Source geo-line\r\n * @return Normalized geo-line\r\n */\r\nexport function normalizeMultiline(multiline: Array<Array<IGeoPoint>>): Array<Array<IGeoPoint>> {\r\n\t$array.each(multiline, (segment) => {\r\n\t\t$array.each(segment, (point) => {\r\n\t\t\tnormalizePoint(point);\r\n\t\t});\r\n\t});\r\n\treturn multiline;\r\n}\r\n\r\n/**\r\n * [wrapAngleTo180 description]\r\n *\r\n * @todo Description\r\n * @ignore Exclude from docs\r\n * @param angle  Angle\r\n * @return Angle\r\n */\r\nexport function wrapAngleTo180(angle: number): number {\r\n\tangle = angle % 360;\r\n\r\n\tif (angle > 180) {\r\n\t\tangle -= 360;\r\n\t}\r\n\tif (angle < -180) {\r\n\t\tangle += 360;\r\n\t}\r\n\r\n\treturn angle;\r\n}\r\n\r\n/**\r\n * Converts a geo point to a regular point object.\r\n *\r\n * @ignore Exclude from docs\r\n * @param geoPoint  Source geo point\r\n * @return Point\r\n */\r\nexport function geoToPoint(geoPoint: IGeoPoint): IPoint {\r\n\treturn { x: geoPoint.longitude, y: geoPoint.latitude };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/Geo.ts","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectProperties extends IContainerProperties {\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t */\r\n\tposition?: number;\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tadjustRotation?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLineObject]].\r\n */\r\nexport interface IMapLineObjectEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineObject]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineObjectAdapters extends IContainerAdapters, IMapLineObjectProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Draws a line on the map.\r\n *\r\n * @see {@link IMapLineObjectEvents} for a list of available events\r\n * @see {@link IMapLineObjectAdapters} for a list of available Adapters\r\n */\r\nexport class MapLineObject extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineObjectProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineObjectAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineObjectEvents;\r\n\r\n\t/**\r\n\t * A reference to the [[MapLine]] object this object is attached to.\r\n\t *\r\n\t * @todo Review if necessary (same as parent)\r\n\t */\r\n\tpublic mapLine: MapLine;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.adjustRotation = true;\r\n\t\tthis.className = \"MapLineObject\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.layout = \"none\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates element's position.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validatePosition() {\r\n\r\n\t\tlet mapLine = this.mapLine;\r\n\r\n\t\tif (mapLine) {\r\n\r\n\t\t\tlet point: IOrientationPoint = mapLine.positionToPoint(this.position);\r\n\r\n\t\t\tthis.x = point.x;\r\n\t\t\tthis.y = point.y;\r\n\r\n\t\t\tif (this.adjustRotation) {\r\n\t\t\t\tthis.rotation = point.angle;\r\n\t\t\t}\r\n\r\n\t\t\tlet dataItem = this.mapLine.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tlet series = this.mapLine.dataItem.component;\r\n\t\t\t\tthis.scale = 1 / series.scale;\r\n\t\t\t}\r\n\r\n\t\t\t// hide out of bounds\r\n\t\t\tif (mapLine.shortestDistance) {\r\n\r\n\t\t\t\tlet projection = this.mapLine.series.chart.projection;\r\n\r\n\t\t\t\tlet geoPoint = projection.positionToGeoPoint(mapLine.multiGeoLine, this.position);\r\n\r\n\t\t\t\tlet visible: any = projection.d3Path({ type: 'Point', coordinates: [geoPoint.longitude, geoPoint.latitude] });\r\n\r\n\t\t\t\tif (!visible) {\r\n\t\t\t\t\tthis.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsuper.validatePosition();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets object's relative position (0-1) within the line.\r\n\t *\r\n\t * `0` will place the object at the beginning of the line. `1` - at the end.\r\n\t *\r\n\t * Any intermediate number will place the object at some point within the\r\n\t * line.\r\n\t *\r\n\t * @param value  Position within the line (0-1)\r\n\t */\r\n\tpublic set position(value: number) {\r\n\t\tthis.setPropertyValue(\"position\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position within the line\r\n\t */\r\n\tpublic get position(): number {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * If set to `true`, the object will be automatically rotated to face the\r\n\t * direction of the line at the specific position.\r\n\t *\r\n\t * This allows creating images that has its \"front\" always facing the logical\r\n\t * direction of the line.\r\n\t *\r\n\t * @default false\r\n\t * @param value  Auto-rotate\r\n\t */\r\n\tpublic set adjustRotation(value: boolean) {\r\n\t\tthis.setPropertyValue(\"adjustRotation\", value, false, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Auto-rotate\r\n\t */\r\n\tpublic get adjustRotation(): boolean {\r\n\t\treturn this.getPropertyValue(\"adjustRotation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineObject\"] = MapLineObject;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapLineObject.ts","/**\r\n * Map image series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapImageDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapImageSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapImageSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t */\r\n\tprotected _mapImage: MapImage;\r\n\r\n\t/**\r\n\t * [_point description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _point: [number, number];\r\n\r\n\t/**\r\n\t * Geographical coordinates image is placed at.\r\n\t */\r\n\tprotected _geoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapImageSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } } {\r\n\t\treturn { \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: this.point } };\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapImage]] element related to this data item.\r\n\t *\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapImage(): MapImage {\r\n\t\tif (!this._mapImage) {\r\n\t\t\tlet mapImage = this.component.mapImages.create();\r\n\t\t\tthis.addSprite(mapImage);\r\n\t\t\tthis._mapImage = mapImage;\r\n\t\t\tthis._disposers.push(mapImage);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapImages.removeValue(mapImage);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t\tthis.mapObject = mapImage;\r\n\t\t}\r\n\t\treturn this._mapImage;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set point(point: [number, number]) {\r\n\t\tthis._point = point;\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get point(): [number, number] {\r\n\t\treturn this._point;\r\n\t}\r\n\r\n\t/**\r\n\t * [point description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param point [description]\r\n\t */\r\n\tpublic set multiPoint(multiPoint: [[number, number]]) {\r\n\t\tthis._point = multiPoint[0];\r\n\t\tthis._geoPoint = $mapUtils.pointToGeo(this._point);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get multiPoint(): [[number, number]] {\r\n\t\treturn [this._point];\r\n\t}\t\r\n\r\n\t/**\r\n\t * Geographical coordinates (lat/long) image is placed at.\r\n\t *\r\n\t * @param geoPoint Image coordinates\r\n\t */\r\n\tpublic set geoPoint(geoPoint: IGeoPoint) {\r\n\t\tthis._geoPoint = geoPoint;\r\n\t\tthis.point = [geoPoint.longitude, geoPoint.latitude];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Image coordinates\r\n\t */\r\n\tpublic get geoPoint(): IGeoPoint {\r\n\t\treturn this._geoPoint;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds image point data in pixels.\r\n\t */\r\n\tpoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in pixels.\r\n\t */\r\n\tmultiPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds image point data in Geo coordinates.\r\n\t */\r\n\tgeoPoint?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-image point data in Geo coordinates.\r\n\t */\r\n\tmultiGeoPoint?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapImageSeries]].\r\n */\r\nexport interface IMapImageSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapImageSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapImageSeriesAdapters extends IMapSeriesAdapters, IMapImageSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map image (marker) elements.\r\n *\r\n * @see {@link IMapImageSeriesEvents} for a list of available Events\r\n * @see {@link IMapImageSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapImageSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapImageSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapImageSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapImageSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapImageSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapImageSeriesDataItem;\r\n\r\n\t/**\r\n\t * A related chart/map object, this image is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t */\r\n\tprotected _mapImages: ListTemplate<MapImage>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapImageSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiPoint = \"multiPoint\";\r\n\t\tthis.dataFields.point = \"point\";\r\n\r\n\t\tthis.dataFields.geoPoint = \"geoPoint\";\r\n\t\tthis.dataFields.multiGeoPoint = \"multiGeoPoint\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapImageSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the data of the sries, effectively forcing it to redraw\r\n\t * all of its elements.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\tif (this.data.length > 0 && this._parseDataFrom == 0) {\r\n\t\t\tthis.mapImages.clear();\r\n\t\t}\r\n\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata) {\r\n\t\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"Point\" || type == \"MultiPoint\") {  // todo: we don't support multipoints at the moment actually\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\r\n\t\t\t\t\t\t\t\t// make the same as MultiPoint\r\n\t\t\t\t\t\t\t\tif (type == \"Point\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapImageDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiPoint: coordinates, id: id, madeFromGeoData:true };\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiPoint) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiPoint = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\r\n\t\t// important! this should go after super.validateData\r\n\t\t// if data is parsed in chunks, images list is corrupted, fix it here\r\n\r\n\t\t$iter.each(this.dataItems.iterator(), (dataItem) => {\r\n\t\t\tlet mapImage = dataItem.mapImage;\r\n\t\t\tif (!mapImage.isDisposed()) {\r\n\t\t\t\tthis.mapImages.moveValue(mapImage);\r\n\t\t\t\tif ($type.isNumber(mapImage.latitude) && $type.isNumber(mapImage.latitude)) {\r\n\t\t\t\t\tdataItem.geoPoint = { latitude: mapImage.latitude, longitude: mapImage.longitude }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * A list of map images in the series.\r\n\t *\r\n\t * @return Map images\r\n\t */\r\n\tpublic get mapImages(): ListTemplate<MapImage> {\r\n\r\n\t\tif (!this._mapImages) {\r\n\t\t\tlet template: MapImage = new MapImage();\r\n\t\t\tlet mapImages = new ListTemplate<MapImage>(template);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapImages));\r\n\t\t\tthis._disposers.push(mapImages.template);\r\n\t\t\tmapImages.template.focusable = true;\r\n\t\t\tmapImages.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapImages = mapImages;\r\n\t\t\tthis._mapObjects = mapImages;\r\n\t\t}\r\n\r\n\t\treturn this._mapImages;\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates data element, effectively triggering its redrawal.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]) {\r\n\t\tsuper.validateDataElement(dataItem);\r\n\t\tdataItem.mapImage.invalidate();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\t$iter.each(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tmapImage.validatePosition();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapImages.template.copyFrom(source.mapImages.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> {\r\n\t\tlet features: Array<{ \"type\": \"Feature\", geometry: { type: \"Point\", coordinates: [number, number] } }> = [];\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapImages.each((mapImage)=>{\r\n\t\t\tif (this.dataItems.indexOf(mapImage._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapImage.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\t/**\r\n\t * returns MapImage by id\r\n\t * @param image id\r\n\t * @return {MapImage}\r\n\t */\r\n\tpublic getImageById(id: string): MapImage {\r\n\t\treturn $iter.find(this.mapImages.iterator(), (mapImage) => {\r\n\t\t\tlet dataContext: any = mapImage.dataItem.dataContext;\r\n\t\t\tif(mapImage.id == id || (dataContext && dataContext.id == id)){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapImageSeries\"] = MapImageSeries;\r\nregistry.registeredClasses[\"MapImageSeriesDataItem\"] = MapImageSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapImageSeries.ts","/**\r\n * Map line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapObject, IMapObjectProperties, IMapObjectAdapters, IMapObjectEvents } from \"./MapObject\";\r\nimport { MapLineObject } from \"./MapLineObject\";\r\nimport { MapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapImage } from \"./MapImage\";\r\nimport { MapImageSeries } from \"./MapImageSeries\";\r\nimport { IOrientationPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { ListTemplate, IListEvents, ListDisposer } from \"../../core/utils/List\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport * as $geo from \"./Geo\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\n\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapLine]].\r\n */\r\nexport interface IMapLineProperties extends IMapObjectProperties {\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Lat/long coordinates of all line ends and intermediate elbows.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * If `true` it line will be arched in the way to simulate shortest path\r\n\t * over curvature of Earth's surface, based on currently used on projection.\r\n\t */\r\n\tshortestDistance?: boolean;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images which will be connected by the line\r\n\t */\r\n\timagesToConnect?: MapImage[];\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t */\r\n\tprecision?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[MapLine]].\r\n */\r\nexport interface IMapLineEvents extends IMapObjectEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineAdapters extends IMapObjectAdapters, IMapLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a line on the map.\r\n *\r\n * @see {@link IMapLineEvents} for a list of available events\r\n * @see {@link IMapLineAdapters} for a list of available Adapters\r\n */\r\nexport class MapLine extends MapObject {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineEvents;\r\n\r\n\t/**\r\n\t * A line visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A list of actual line objects.\r\n\t */\r\n\tprotected _lineObjects: ListTemplate<MapLineObject>;\r\n\r\n\t/**\r\n\t * A reference to arrow object.\r\n\t */\r\n\tprotected _arrow: MapLineObject;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapLineSeries;\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t */\r\n\tprotected _imagesToConnect: MapImage[];\r\n\r\n\t/**\r\n\t * A list of event disposers for images.\r\n\t */\r\n\tprotected _imageListeners: { [index: string]: IDisposer } = {};\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLine\";\r\n\r\n\t\tthis.createLine();\r\n\t\tthis.line.stroke = color();\r\n\t\tthis.line.parent = this;\r\n\t\tthis.strokeOpacity = 1;\r\n\t\tthis.setPropertyValue(\"precision\", 0.1);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.shortestDistance = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine() {\r\n\t\tthis.line = new Polyline();\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a position within the line (0-1) to a physical point\r\n\t * coordinates.\r\n\t *\r\n\t * 0 indicates start of the line, 0.5 - middle, while 1 indicates the end.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic positionToPoint(position: number): IOrientationPoint {\r\n\t\tif (this.shortestDistance) {\r\n\t\t\treturn this.series.chart.projection.positionToPoint(this.multiGeoLine, position);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.line) {\r\n\t\t\t\treturn this.line.positionToPoint(position);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tif (multiGeoLine && multiGeoLine.length > 0) {\r\n\t\t\tthis.setPropertyValue(\"multiGeoLine\", $geo.normalizeMultiline(multiGeoLine), true);\r\n\r\n\t\t\tlet multiLine: Array<Array<[number, number]>> = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\r\n\t\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\r\n\t\t\tthis.updateExtremes();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\tlet multiGeoLine = this.getPropertyValue(\"multiGeoLine\");\r\n\t\tif (!multiGeoLine && this.dataItem && this.dataItem.multiGeoLine) {\r\n\t\t\tmultiGeoLine = this.dataItem.multiGeoLine;\r\n\t\t}\r\n\r\n\t\treturn multiGeoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis.setPropertyValue(\"multiLine\", multiLine);\r\n\t\tthis.multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\r\n\t\tlet multiLine = this.getPropertyValue(\"multiLine\");\r\n\t\tif (!multiLine && this.dataItem && this.dataItem.multiLine) {\r\n\t\t\tmultiLine = this.dataItem.multiLine;\r\n\t\t}\r\n\r\n\t\treturn multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * Instead of setting longitudes/latitudes you can set an array of images\r\n\t * which will be connected by the line.\r\n\t *\r\n\t * Parameter is an array that can hold string `id`'s to of the images, or\r\n\t * references to actual [[MapImage]] objects.\r\n\t *\r\n\t * @param images  Images\r\n\t */\r\n\tpublic set imagesToConnect(images: MapImage[] | string[]) {\r\n\t\tthis.setPropertyValue(\"imagesToConnect\", images, true);\r\n\t\tthis.handleImagesToConnect();\r\n\r\n\t\tif (this.series) {\r\n\t\t\tlet chart = this.series.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\tif (!series.isReady()) {\r\n\t\t\t\t\t\t\tthis._disposers.push(series.events.on(\"ready\", this.handleImagesToConnect, this, false));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {MapImages[]}\r\n\t */\r\n\tpublic get imagesToConnect(): MapImage[] | string[] {\r\n\t\treturn this.getPropertyValue(\"imagesToConnect\");\r\n\t}\r\n\r\n\tprotected handleImagesToConnect() {\r\n\t\tif (this.imagesToConnect) {\r\n\t\t\tlet segment: Array<IGeoPoint> = [];\r\n\t\t\tlet multiGeoLine = [segment];\r\n\r\n\t\t\tfor (let image of this.imagesToConnect) {\r\n\t\t\t\tif ($type.isString(image)) {\r\n\t\t\t\t\tlet chart = this.series.chart;\r\n\t\t\t\t\tif (chart) {\r\n\t\t\t\t\t\tchart.series.each((series) => {\r\n\t\t\t\t\t\t\tif (series instanceof MapImageSeries) {\r\n\t\t\t\t\t\t\t\tlet img = series.getImageById(<string>image)\r\n\t\t\t\t\t\t\t\tif (img) {\r\n\t\t\t\t\t\t\t\t\timage = img;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (image instanceof MapImage) {\r\n\r\n\t\t\t\t\tsegment.push({ longitude: (<MapImage>image).longitude, latitude: (<MapImage>image).latitude });\r\n\r\n\t\t\t\t\tif (!this._imageListeners[image.uid]) {\r\n\t\t\t\t\t\tlet disposer = image.events.on(\"propertychanged\", (event) => {\r\n\t\t\t\t\t\t\tif (event.property == \"longitude\" || event.property == \"latitude\") {\r\n\t\t\t\t\t\t\t\tthis.handleImagesToConnect();\r\n\t\t\t\t\t\t\t\tthis.invalidate();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this, false);\r\n\t\t\t\t\t\tthis._imageListeners[image.uid] = disposer;\r\n\t\t\t\t\t\tthis._disposers.push(disposer);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.multiGeoLine = multiGeoLine;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the line, effectively forcing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tlet chart: MapChart = this.series.chart;\r\n\r\n\t\tif (this.multiLine) {\r\n\r\n\t\t\tif (!this.shortestDistance) {\r\n\r\n\t\t\t\tlet convertedPoints: Array<Array<IPoint>> = [];\r\n\r\n\t\t\t\tfor (let i = 0, len = this.multiLine.length; i < len; i++) {\r\n\r\n\t\t\t\t\tlet segment: Array<[number, number]> = this.multiLine[i];\r\n\r\n\t\t\t\t\tlet convertedSegmentPoints: Array<IPoint> = [];\r\n\r\n\t\t\t\t\tfor (let s = 0, slen = segment.length; s < slen; s++) {\r\n\t\t\t\t\t\tlet geoPoint: [number, number] = segment[s];\r\n\t\t\t\t\t\tlet point: IPoint = this.series.chart.projection.convert({ longitude: geoPoint[0], latitude: geoPoint[1] });\r\n\t\t\t\t\t\tconvertedSegmentPoints.push(point);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconvertedPoints.push(convertedSegmentPoints);\r\n\t\t\t\t}\r\n\t\t\t\tthis.line.segments = convertedPoints;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tchart.projection.d3Projection.precision(this.precision);\r\n\t\t\t\tthis.line.path = chart.projection.d3Path(<any>this.getFeature());\r\n\t\t\t}\r\n\r\n\t\t\tif (this._arrow) {\r\n\t\t\t\tthis._arrow.validatePosition();\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.lineObjects.iterator(), (x) => {\r\n\t\t\t\tx.validatePosition();\r\n\t\t\t});\r\n\r\n\t\t\tthis.handleGlobalScale();\r\n\t\t}\r\n\t\telse if (this.imagesToConnect) {\r\n\t\t\tthis.handleImagesToConnect();\r\n\t\t}\r\n\r\n\r\n\t\tsuper.validate();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0 && this.multiLine[0] && this.multiLine[0].length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic measureElement(): void {\r\n\t\t// Overriding, just to avoid extra measure\r\n\t}\r\n\r\n\t/**\r\n\t * The line should take the shortest path over the globe.\r\n\t *\r\n\t * Enabling this will make the line look differently in different\r\n\t * projections. Only `MapLine` supports this setting, `MapArc` and\r\n\t * `MapSplice` don't.\r\n\t *\r\n\t * @default true\r\n\t * @param value  Real path?\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\t\tthis.setPropertyValue(\"shortestDistance\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Real path?\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn this.getPropertyValue(\"shortestDistance\");\r\n\t}\r\n\r\n\t/**\r\n\t * List of separate line objects the line consists of.\r\n\t *\r\n\t * @readonly\r\n\t * @return List of line objects\r\n\t */\r\n\tpublic get lineObjects(): ListTemplate<MapLineObject> {\r\n\t\tif (!this._lineObjects) {\r\n\t\t\tthis._lineObjects = new ListTemplate<MapLineObject>(new MapLineObject());\r\n\t\t\tthis._lineObjects.events.on(\"inserted\", this.handleLineObjectAdded, this, false);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._lineObjects));\r\n\t\t\tthis._disposers.push(this._lineObjects.template);\r\n\t\t}\r\n\r\n\t\treturn this._lineObjects;\r\n\t}\r\n\r\n\t/**\r\n\t * Decorate a [[LineObject]] when it is added to the line.\r\n\t *\r\n\t * @param event  Event\r\n\t */\r\n\tprotected handleLineObjectAdded(event: IListEvents<MapLineObject>[\"inserted\"]) {\r\n\t\tlet mapLineObject: MapLineObject = event.newValue;\r\n\t\tmapLineObject.mapLine = this;\r\n\t\tmapLineObject.shouldClone = false;\r\n\t\tmapLineObject.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLineObject]] to use as an option arrowhead on the line.\r\n\t *\r\n\t * Just accessing this property will create a default arrowhead on the line\r\n\t * automatically.\r\n\t *\r\n\t * @param arrow  Arrow element\r\n\t */\r\n\tpublic set arrow(arrow: MapLineObject) {\r\n\t\tthis._arrow = arrow;\r\n\t\tarrow.mapLine = this;\r\n\t\tarrow.parent = this;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Arrow element\r\n\t */\r\n\tpublic get arrow(): MapLineObject {\r\n\t\tif (!this._arrow) {\r\n\t\t\tlet arrow: MapLineObject = this.createChild(MapLineObject);\r\n\t\t\tarrow.shouldClone = false;\r\n\t\t\tarrow.width = 8;\r\n\t\t\tarrow.height = 10;\r\n\t\t\tarrow.mapLine = this;\r\n\t\t\tarrow.position = 0.5;\r\n\r\n\t\t\tlet triangle = arrow.createChild(Triangle);\r\n\t\t\t//triangle.shouldClone = false;\r\n\t\t\ttriangle.fillOpacity = 1;\r\n\t\t\ttriangle.width = percent(100);\r\n\t\t\ttriangle.height = percent(100);\r\n\t\t\ttriangle.rotation = 90;\r\n\t\t\ttriangle.horizontalCenter = \"middle\";\r\n\t\t\ttriangle.verticalCenter = \"middle\";\r\n\t\t\tthis._arrow = arrow;\r\n\t\t}\r\n\t\treturn this._arrow;\r\n\t}\r\n\r\n\t/**\r\n\t * Copies line properties and other attributes, like arrow, from another\r\n\t * instance of [[MapLine]].\r\n\t *\r\n\t * @param source  Source map line\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.line.copyFrom(source.line);\r\n\t\tthis.lineObjects.copyFrom(source.lineObjects);\r\n\t\tif (source._arrow) {\r\n\t\t\tthis.arrow = <MapLineObject>source.arrow.clone();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Latitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get latitude(): number {\r\n\t\treturn this.north + (this.south - this.north) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * Longitude of the line center.\r\n\t *\r\n\t * @readonly\r\n\t * @return Latitude\r\n\t */\r\n\tpublic get longitude(): number {\r\n\t\treturn this.east + (this.west - this.east) / 2;\r\n\t}\r\n\r\n\t/**\r\n\t * X coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return X\r\n\t */\r\n\tpublic getTooltipX(): number {\r\n\t\tlet x = this.getPropertyValue(\"tooltipX\");\r\n\t\tif (!(x instanceof Percent)) {\r\n\t\t\tx = percent(50);\r\n\t\t}\r\n\t\tif (x instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(x.value).x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Y coordinate for the slice tooltip.\r\n\t *\r\n\t * @ignore\r\n\t * @return Y\r\n\t */\r\n\tpublic getTooltipY(): number {\r\n\t\tlet y = this.getPropertyValue(\"tooltipY\");\r\n\t\tif (!(y instanceof Percent)) {\r\n\t\t\ty = percent(50);\r\n\t\t}\r\n\t\tif (y instanceof Percent) {\r\n\t\t\treturn this.positionToPoint(y.value).y;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * When line is plotted, if its `shortestDistance` is set to `true` it is\r\n\t * bent according to the used projection, to depict the shortest distance how\r\n\t * it would go on the actual land.\r\n\t *\r\n\t * `precision` introduces a setting which can control when such bending\r\n\t * occurs.\r\n\t *\r\n\t * If the distance (in degrees) between line start and end points\r\n\t * is less than `precision`, no bending will take place and the line will be\r\n\t * straight.\r\n\t *\r\n\t * Set to large number (e.g. 10000) for perfectly straight line.\r\n\t *\r\n\t * @since 4.9.1\r\n\t * @default 0.1\r\n\t * @param  value  Precision\r\n\t */\r\n\tpublic set precision(value: number) {\r\n\t\tthis.setPropertyValue(\"precision\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Precision\r\n\t */\r\n\tpublic get precision(): number {\r\n\t\treturn this.getPropertyValue(\"precision\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLine\"] = MapLine;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapLine.ts","/**\r\n * Map line series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapSeries, MapSeriesDataItem, GEOJSONGeometry, IMapSeriesProperties, IMapSeriesDataFields, IMapSeriesAdapters, IMapSeriesEvents } from \"./MapSeries\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { MapLine } from \"./MapLine\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { IMapLineDataObject } from \"../types/MapChart\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $mapUtils from \"./MapUtils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapLineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapLineSeriesDataItem extends MapSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line.\r\n\t */\r\n\tprotected _line: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiLine: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line.\r\n\t */\r\n\tprotected _geoLine: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a multi-segment line.\r\n\t */\r\n\tprotected _multiGeoLine: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapLineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic getFeature(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } } {\r\n\t\tif (this.multiLine && this.multiLine.length > 0) {\r\n\t\t\treturn { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: this.multiLine } };\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[MapLine]] element related to this data item.\r\n\t *\r\n\t * @readonly\r\n\t * @return Element\r\n\t */\r\n\tpublic get mapLine(): this[\"_mapLine\"] {\r\n\t\tif (!this._mapLine) {\r\n\t\t\tlet mapLine = this.component.mapLines.create();\r\n\r\n\t\t\tthis._mapLine = mapLine;\r\n\t\t\tthis.addSprite(mapLine);\r\n\r\n\t\t\tthis._disposers.push(mapLine);\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.mapLines.removeValue(mapLine);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.mapObject = mapLine;\r\n\t\t}\r\n\t\treturn this._mapLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   [ 100, 150 ],\r\n\t *   [ 120, 200 ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param line  Coordinates\r\n\t */\r\n\tpublic set line(line: Array<[number, number]>) {\r\n\t\tthis._line = line;\r\n\t\tthis.multiLine = [line];\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get line(): Array<[number, number]> {\r\n\t\treturn this._line;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     [ 100, 150 ],\r\n\t *     [ 120, 200 ]\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     [ 120, 200 ],\r\n\t *     [ 150, 100 ]\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @param multiLine  Coordinates\r\n\t */\r\n\tpublic set multiLine(multiLine: Array<Array<[number, number]>>) {\r\n\t\tthis._multiLine = multiLine;\r\n\t\tthis._multiGeoLine = $mapUtils.multiLineToGeo(multiLine);\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiLine(): Array<Array<[number, number]>> {\r\n\t\treturn this._multiLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of lat/long coordinates for a single-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   { longitude: 3.121, latitude: 0.58 },\r\n\t *   { longitude: -5.199, latitude: 21.223 }\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.4} GeoJSON LineString reference\r\n\t * @param geoLine  Coordinates\r\n\t */\r\n\tpublic set geoLine(geoLine: Array<IGeoPoint>) {\r\n\t\tthis._geoLine = geoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine([geoLine]);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get geoLine(): Array<IGeoPoint> {\r\n\t\treturn this._geoLine;\r\n\t}\r\n\r\n\t/**\r\n\t * A collection of X/Y coordinates for a multi-segment line. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * [\r\n\t *   // Segment 1\r\n\t *   [\r\n\t *     { longitude: 3.121, latitude: 0.58 },\r\n\t *     { longitude: -5.199, latitude: 21.223 }\r\n\t *   ],\r\n\t *\r\n\t *   // Segment 2\r\n\t *   [\r\n\t *     { longitude: -5.199, latitude: 21.223 },\r\n\t *     { longitude: -12.9, latitude: 25.85 }\r\n\t *   ]\r\n\t * ]\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference\r\n\t * @param multiGeoLine  Coordinates\r\n\t */\r\n\tpublic set multiGeoLine(multiGeoLine: Array<Array<IGeoPoint>>) {\r\n\t\tthis._multiGeoLine = multiGeoLine;\r\n\t\tthis.multiLine = $mapUtils.multiGeoLineToMultiLine(multiGeoLine);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get multiGeoLine(): Array<Array<IGeoPoint>> {\r\n\t\treturn this._multiGeoLine;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesDataFields extends IMapSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name that holds line data in pixels.\r\n\t */\r\n\tline?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in pixels.\r\n\t */\r\n\tmultiLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds line data in Geo coordinates.\r\n\t */\r\n\tgeoLine?: string;\r\n\r\n\t/**\r\n\t * Field name that holds multi-line data in Geo coordinates.\r\n\t */\r\n\tmultiGeoLine?: string;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesProperties extends IMapSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapLineSeries]].\r\n */\r\nexport interface IMapLineSeriesEvents extends IMapSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapLineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapLineSeriesAdapters extends IMapSeriesAdapters, IMapLineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map line series.\r\n *\r\n * @see {@link IMapLineSeriesEvents} for a list of available Events\r\n * @see {@link IMapLineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapLineSeries extends MapSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapLineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapLineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapLineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapLineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapLineSeriesDataItem;\r\n\r\n\r\n\t/**\r\n\t * A related chart/map object, this element is drawn on.\r\n\t */\r\n\tpublic chart: MapChart;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapLine;\r\n\r\n\t/**\r\n\t * A list of map lins in the series.\r\n\t */\r\n\tprotected _mapLines: ListTemplate<this[\"_mapLine\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapLineSeries\";\r\n\r\n\t\t// Set data fields\r\n\t\tthis.dataFields.multiLine = \"multiLine\";\r\n\t\tthis.dataFields.line = \"line\";\r\n\r\n\t\tthis.dataFields.geoLine = \"geoLine\";\r\n\t\tthis.dataFields.multiGeoLine = \"multiGeoLine\";\r\n\r\n\t\tthis.ignoreBounds = true;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapLineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates series data, effectively causing the whole series to be\r\n\t * redrawn.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateData(): void {\r\n\t\t// process geoJSON and created map objects\r\n\t\tif (this.useGeodata || this.geodata) {\r\n\t\t\tlet geoJSON: any = this.chart.geodata;\r\n\t\t\tif (geoJSON) {\r\n\r\n\t\t\t\tlet features: any[];\r\n\r\n\t\t\t\tif (geoJSON.type == \"FeatureCollection\") {\r\n\t\t\t\t\tfeatures = geoJSON.features;\r\n\t\t\t\t}\r\n\t\t\t\telse if (geoJSON.type == \"Feature\") {\r\n\t\t\t\t\tfeatures = [geoJSON];\r\n\t\t\t\t}\r\n\t\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\r\n\t\t\t\t\tfeatures = [{ geometry: geoJSON }];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconsole.log(\"nothing found in geoJSON\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (features) {\r\n\t\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\r\n\r\n\t\t\t\t\t\tlet feature: any = features[i];\r\n\t\t\t\t\t\tlet geometry: any = feature.geometry;\r\n\t\t\t\t\t\tif (geometry) {\r\n\t\t\t\t\t\t\tlet type: GEOJSONGeometry = <GEOJSONGeometry>geometry.type;\r\n\t\t\t\t\t\t\tlet id: string = feature.id;\r\n\t\t\t\t\t\t\tif (type == \"LineString\" || type == \"MultiLineString\") {\r\n\r\n\t\t\t\t\t\t\t\tif (!this.checkInclude(this.include, this.exclude, id)) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet coordinates: any[] = geometry.coordinates;\r\n\t\t\t\t\t\t\t\tlet dataObject: IMapLineDataObject = $array.find(this.data, (value, i) => {\r\n\t\t\t\t\t\t\t\t\treturn value.id == id;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\tif (type == \"LineString\") {\r\n\t\t\t\t\t\t\t\t\tcoordinates = [coordinates];\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (!dataObject) {\r\n\t\t\t\t\t\t\t\t\tdataObject = { multiLine: coordinates, id: id, madeFromGeoData:true};\r\n\t\t\t\t\t\t\t\t\tthis.data.push(dataObject);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (!dataObject.multiLine) {\r\n\t\t\t\t\t\t\t\t\t\tdataObject.multiLine = coordinates;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// copy properties data to datacontext\r\n\t\t\t\t\t\t\t\t$utils.softCopyProperties(feature.properties, dataObject);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsuper.validateData();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of lines in the series.\r\n\t *\r\n\t * @return Lines\r\n\t */\r\n\tpublic get mapLines(): ListTemplate<this[\"_mapLine\"]> {\r\n\r\n\t\tif (!this._mapLines) {\r\n\t\t\tlet lineTemplate: MapLine = this.createLine();\r\n\t\t\tlet mapLines = new ListTemplate<MapLine>(lineTemplate);\r\n\t\t\tthis._disposers.push(new ListDisposer(mapLines));\r\n\t\t\tthis._disposers.push(mapLines.template);\r\n\t\t\tmapLines.events.on(\"inserted\", this.handleObjectAdded, this, false);\r\n\t\t\tthis._mapLines = mapLines;\r\n\t\t\tthis._mapObjects = mapLines;\r\n\t\t}\r\n\r\n\t\treturn this._mapLines;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapLine();\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the series\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t$utils.used(dataItem.mapLine);\r\n\t\t})\r\n\r\n\r\n\t\tsuper.validate();\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tmapLine.validate();\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties from another instance of [[Series]].\r\n\t *\r\n\t * @param source  Source series\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tthis.mapLines.template.copyFrom(source.mapLines.template);\r\n\t\tsuper.copyFrom(source);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic getFeatures(): { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] {\r\n\t\tlet features: { \"type\": \"Feature\", geometry: { type: \"MultiLineString\", coordinates: Array<Array<[number, number]>> } }[] = [];\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\tlet feature = dataItem.getFeature();\r\n\t\t\tif (feature) {\r\n\t\t\t\tfeatures.push(feature);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.mapLines.each((mapLine) => {\r\n\t\t\tif (this.dataItems.indexOf(mapLine._dataItem) == -1) {\r\n\t\t\t\tlet feature = mapLine.getFeature();\r\n\t\t\t\tif (feature) {\r\n\t\t\t\t\tfeatures.push(feature);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn features;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * returns MapLine by id\r\n\t * @param line id\r\n\t * @return {MapLine}\r\n\t */\r\n\tpublic getLineById(id: string): MapLine {\r\n\t\treturn $iter.find(this.mapLines.iterator(), (mapLine) => {\r\n\t\t\tlet dataContext: any = mapLine.dataItem.dataContext;\r\n\t\t\treturn dataContext.id == id;\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapLineSeries\"] = MapLineSeries;\r\nregistry.registeredClasses[\"MapLineSeriesDataItem\"] = MapLineSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapLineSeries.ts","/**\r\n * Graticule (map grid line).\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { GraticuleSeries } from \"./GraticuleSeries\";\r\nimport { Polyline } from \"../../core/elements/Polyline\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Graticule]].\r\n */\r\nexport interface IGraticuleProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[Graticule]].\r\n */\r\nexport interface IGraticuleEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Graticule]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleAdapters extends IMapLineAdapters, IGraticuleProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Graticule is a map line spanning from the poles or around the globe.\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleEvents} for a list of available events\r\n * @see {@link IGraticuleAdapters} for a list of available Adapters\r\n */\r\nexport class Graticule extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyline;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Graticule\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.shortestDistance = true;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Graticule\"] = Graticule;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/Graticule.ts","/**\r\n * Graticule (map grid) series functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { Graticule } from \"./Graticule\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\nimport * as $array from \"../../core/utils/Array\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[GraticuleSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class GraticuleSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[Graticule]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: GraticuleSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesProperties extends IMapLineSeriesProperties {\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t */\r\n\tlongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t */\r\n\t// majorLatitudeStep?: number;\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t */\r\n\t// majorLongitudeStep?: number;\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tfitExtent?: boolean;\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tsingleSprite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[GraticuleSeries]].\r\n */\r\nexport interface IGraticuleSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[GraticuleSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGraticuleSeriesAdapters extends IMapLineSeriesAdapters, IGraticuleSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * This class is used to create a set of graticules (map grid).\r\n *\r\n * To enable, create like you would create any regular map series:\r\n *\r\n * ```TypeScript\r\n * let graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JavaScript\r\n * var graticule = chart.series.push(new am4maps.GraticuleSeries())\r\n * graticule.mapLines.template.line.stroke = am4core.color(\"#000000\");\r\n * graticule.mapLines.template.line.strokeOpacity = 0.1;\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"series\": [{\r\n *     \"type\": \"GraticuleSeries\",\r\n *     \"mapLines\": {\r\n *       \"line\": {\r\n *         \"stroke\": \"#000000\",\r\n *         \"strokeOpacity\": 0.1\r\n *       }\r\n *     }\r\n *   }]\r\n * }\r\n * ```\r\n *\r\n * @since 4.3.0\r\n * @see {@link IGraticuleSeriesEvents} for a list of available Events\r\n * @see {@link IGraticuleSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class GraticuleSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IGraticuleSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGraticuleSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGraticuleSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGraticuleSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: GraticuleSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: Graticule;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"GraticuleSeries\";\r\n\r\n\t\tthis.longitudeStep = 10;\r\n\r\n\t\tthis.latitudeStep = 10;\r\n\r\n\t\tthis.north = 90;\r\n\t\tthis.south = -90;\r\n\t\tthis.east = -180;\r\n\t\tthis.west = 180;\r\n\r\n\t\t//this.majorLatitudeStep = 90;\r\n\t\t//this.majorLongitudeStep = 360;\r\n\r\n\t\tthis.fitExtent = true;\r\n\r\n\t\tthis.singleSprite = true;\r\n\r\n\t\tthis.events.disableType(\"geoBoundsChanged\");\r\n\r\n\t\tthis.mapLines.template.line.strokeOpacity = 0.08;\r\n\r\n\t\tthis.ignoreBounds = false;\r\n\r\n\t\tthis.hiddenInLegend = true;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new GraticuleSeriesDataItem();\r\n\t}\r\n\r\n\tpublic validateData() {\r\n\t\tsuper.validateData();\r\n\r\n\t\tthis.mapLines.clear();\r\n\r\n\t\tlet graticule = d3geo.geoGraticule();\r\n\r\n\t\tif (graticule) {\r\n\t\t\tgraticule.stepMinor([this.longitudeStep, this.latitudeStep]);\r\n\t\t\tgraticule.stepMajor([360, 360]);\r\n\r\n\t\t\tlet chart = this.chart;\r\n\t\t\tif (this.fitExtent) {\r\n\t\t\t\tgraticule.extent([[chart.east, chart.north], [chart.west, chart.south]]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgraticule.extent([[this.east, this.north], [this.west, this.south]]);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.singleSprite) {\r\n\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\tmapLine.multiLine = graticule().coordinates as Array<Array<[number, number]>>;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet lineStrings = graticule.lines();\r\n\r\n\t\t\t\t$array.each(lineStrings, (lineString) => {\r\n\t\t\t\t\tlet mapLine = this.mapLines.create();\r\n\t\t\t\t\tmapLine.multiLine = [lineString.coordinates as Array<[number, number]>];\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new Graticule();\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of latitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value Step\r\n\t */\r\n\tpublic set latitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"latitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get latitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"latitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a graticule (grid) every X degrees of longitude.\r\n\t *\r\n\t * @default 10\r\n\t * @param  value  Step\r\n\t */\r\n\tpublic set longitudeStep(value: number) {\r\n\t\tif (this.setPropertyValue(\"longitudeStep\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\tpublic get longitudeStep(): number {\r\n\t\treturn this.getPropertyValue(\"longitudeStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of latitude.\r\n\t *\r\n\t * @default 90\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLatitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLatitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLatitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLatitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Draw a thicker (major) graticule every X degrees of longitude.\r\n\t *\r\n\t * @default 360\r\n\t * @param  value  Step\r\n\t */\r\n\t// public set majorLongitudeStep(value: number) {\r\n\t// \tif (this.setPropertyValue(\"majorLongitudeStep\", value)) {\r\n\t// \t\tthis.invalidateData();\r\n\t// \t}\r\n\t// }\r\n\r\n\t/**\r\n\t * @return Step\r\n\t */\r\n\t// public get majorLongitudeStep(): number {\r\n\t// \treturn this.getPropertyValue(\"majorLongitudeStep\");\r\n\t// }\r\n\r\n\t/**\r\n\t * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.\r\n\t * where there are polygons, or draw full-world grid (`false`).\r\n\t *\r\n\t * For world maps, using `false` makes sense. For smaller maps - not so much.\r\n\t *\r\n\t * If set to `false`, the grid will be drawn from this series `east` to\r\n\t * `west`, and from `south` to `north` (default values: `east = -180`;\r\n\t * `west = 180`; `south =-90`; `north =90`).\r\n\t *\r\n\t * These can be overridden by setting `GraticuleSeries`' respective\r\n\t * properties.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Fit?\r\n\t */\r\n\tpublic set fitExtent(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"fitExtent\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Fit?\r\n\t */\r\n\tpublic get fitExtent(): boolean {\r\n\t\treturn this.getPropertyValue(\"fitExtent\");\r\n\t}\r\n\r\n\t/**\r\n\t * Whether to draw all the grid as a single element or as separate lines.\r\n\t *\r\n\t * Setting `true` (default) will result in better performance, whereas\r\n\t * `false` allows setting visual properties of each line individually.\r\n\t *\r\n\t * @default true\r\n\t * @param  value  Use single sprite?\r\n\t */\r\n\tpublic set singleSprite(value: boolean) {\r\n\t\tif (this.setPropertyValue(\"singleSprite\", value)) {\r\n\t\t\tthis.invalidateData();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use single sprite?\r\n\t */\r\n\tpublic get singleSprite(): boolean {\r\n\t\treturn this.getPropertyValue(\"singleSprite\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GraticuleSeries\"] = GraticuleSeries;\r\nregistry.registeredClasses[\"GraticuleSeriesDataItem\"] = GraticuleSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/GraticuleSeries.ts","/**\r\n * Map module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"./SerialChart\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { IDisposer, Disposer } from \"../../core/utils/Disposer\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { MapSeries } from \"../map/MapSeries\";\r\nimport { MapObject } from \"../map/MapObject\";\r\nimport { MapImage } from \"../map/MapImage\";\r\nimport { MapPolygon } from \"../map/MapPolygon\";\r\nimport { MapPolygonSeries } from \"../map/MapPolygonSeries\";\r\nimport { IPoint } from \"../../core/defs/IPoint\";\r\nimport { IGeoPoint } from \"../../core/defs/IGeoPoint\";\r\nimport { DataSource } from \"../../core/data/DataSource\";\r\nimport { Projection } from \"../map/projections/Projection\";\r\nimport { ZoomControl } from \"../map/ZoomControl\";\r\nimport { Ordering } from \"../../core/utils/Order\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { SmallMap } from \"../map/SmallMap\";\r\nimport * as $mapUtils from \"../map/MapUtils\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { options } from \"../../core/Options\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $geo from \"../map/Geo\";\r\nimport { Paper } from \"../../core/rendering/Paper\";\r\nimport { IListEvents } from \"../../core/utils/List\";\r\nimport { GraticuleSeries } from \"../map/GraticuleSeries\";\r\nimport { getInteraction, IInteractionEvents } from \"../../core/interaction/Interaction\";\r\nimport { Legend } from \"../Legend\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapChartDataItem extends SerialChartDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapChart;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChartDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines interface for a map polygon object.\r\n */\r\nexport interface IMapPolygonDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single polygon information in X/Y coordinates.\r\n\t */\r\n\tpolygon?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in X/Y coordinates.\r\n\t */\r\n\tmultiPolygon?: Array<Array<Array<[number, number]>>>;\r\n\r\n\t/**\r\n\t * Single polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPolygon?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * Multi-part polygon information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPolygon?: Array<Array<Array<IGeoPoint>>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines types of map line.\r\n */\r\nexport type MapLineType = \"line\" | \"arc\" | \"spline\" | \"realTrajectory\";\r\n\r\n/**\r\n * Defines interface for the map line object.\r\n */\r\nexport interface IMapLineDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Single line information in X/Y coordinates.\r\n\t */\r\n\tline?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Multi-part line information in X/Y coordinates.\r\n\t */\r\n\tmultiLine?: Array<Array<[number, number]>>;\r\n\r\n\t/**\r\n\t * Single line information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoLine?: Array<IGeoPoint>;\r\n\r\n\t/**\r\n\t * Multi-part line information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoLine?: Array<Array<IGeoPoint>>;\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines interface for a map image (market) object.\r\n */\r\nexport interface IMapImageDataObject {\r\n\r\n\t/**\r\n\t * A unique id of the object.\r\n\t */\r\n\tid?: string;\r\n\r\n\t/**\r\n\t * Numeric value for heat-map scenarios.\r\n\t */\r\n\tvalue?: number;\r\n\r\n\t/**\r\n\t * Image position information in X/Y coordinates.\r\n\t */\r\n\tpoint?: [number, number];\r\n\r\n\t/**\r\n\t * Multi-image position information in X/Y coordinates.\r\n\t */\r\n\tmultiPoint?: Array<[number, number]>;\r\n\r\n\t/**\r\n\t * Image position information in lat/long geo-coordinates.\r\n\t */\r\n\tgeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * Multi-image position information in lat/long geo-coordinates.\r\n\t */\r\n\tmultiGeoPoint?: Array<IGeoPoint>;\r\n\r\n\r\n\t/**\r\n\t * flag indicating whether this data item was created from geo data\r\n\t */\r\n\tmadeFromGeoData?: boolean;\r\n}\r\n\r\n/**\r\n * Defines type suitable for all map objects.\r\n */\r\nexport type IMapDataObject = IMapPolygonDataObject | IMapLineDataObject;\r\n\r\n/**\r\n * Defines data fields for [[MapChart]].\r\n */\r\nexport interface IMapChartDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapChart]].\r\n */\r\nexport interface IMapChartProperties extends ISerialChartProperties {\r\n\r\n\t/**\r\n\t * Projection to be used when drawing the map.\r\n\t */\r\n\tprojection?: Projection;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t */\r\n\tdeltaLongitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to -90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaLatitude?: number;\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal \"Z\" - an axis that goes from\r\n\t * the center of the globe directly to the viewer.\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tdeltaGamma?: number;\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t */\r\n\tmaxPanOut?: number;\r\n\r\n\t/**\r\n\t * A map will start centered on this geographical point.\r\n\t */\r\n\thomeGeoPoint?: IGeoPoint;\r\n\r\n\t/**\r\n\t * A map will start zoomed to this level.\r\n\t */\r\n\thomeZoomLevel?: number;\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t */\r\n\tzoomStep?: number;\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t */\r\n\tmouseWheelBehavior?: \"zoom\" | \"none\";\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t */\r\n\tpanBehavior?: \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\";\r\n\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tcenterMapOnZoomOut?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[MapChart]].\r\n */\r\nexport interface IMapChartEvents extends ISerialChartEvents {\r\n\r\n\t/**\r\n\t * Invoked when map is zoomed in or out.\r\n\t */\r\n\tzoomlevelchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when map is panned. (moved)\r\n\t */\r\n\tmappositionchanged: {};\r\n\r\n\t/**\r\n\t * Invoked when scale ratio is changed, e.g when the whole map area is\r\n\t * resized and the map needs to be resized to fit it, without changing\r\n\t * zoom level.\r\n\t */\r\n\tscaleratiochanged: {};\r\n\r\n}\r\n\r\n/**\r\n * Defines adapters for [[MapChart]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapChartAdapters extends ISerialChartAdapters, IMapChartProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a map.\r\n *\r\n * @see {@link IMapChartEvents} for a list of available Events\r\n * @see {@link IMapChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/} for documentation\r\n */\r\nexport class MapChart extends SerialChart {\r\n\r\n\t/**\r\n\t * Available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapChartDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapChartProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapChartAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapChartEvents;\r\n\r\n\t/**\r\n\t * The East-most longitude point of the map.\r\n\t */\r\n\tpublic east: number;\r\n\r\n\t/**\r\n\t * The West-most longitude point of the map.\r\n\t */\r\n\tpublic west: number;\r\n\r\n\t/**\r\n\t * The South-most latitude point of the map.\r\n\t */\r\n\tpublic south: number;\r\n\r\n\t/**\r\n\t * The North-most latitude point of the map.\r\n\t */\r\n\tpublic north: number;\r\n\r\n\t/**\r\n\t * A ratio to be used when scaling the map shapes.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic scaleRatio: number = 1;\r\n\r\n\t/**\r\n\t * A screen point of the map's center.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic centerPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's left.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic westPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's right.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic eastPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's top.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic northPoint: IPoint;\r\n\r\n\t/**\r\n\t * A screen point of the map's bottom.\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic southPoint: IPoint;\r\n\r\n\t/**\r\n\t * Width of the actual map objects (px).\r\n\t */\r\n\tpublic seriesWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxLeft: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxRight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxTop: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic seriesMaxBottom: number;\r\n\r\n\t/**\r\n\t * Height of the actual map objects (px).\r\n\t */\r\n\tpublic seriesHeight: number;\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * @see {@link http://geojson.org/} GeoJSON official specification\r\n\t */\r\n\tprotected _geodata: Object;\r\n\r\n\t/**\r\n\t * Names of geodata items, such as countries, to replace by from loaded\r\n\t * geodata.\r\n\t *\r\n\t * Can be used to override built-in English names for countries.\r\n\t *\r\n\t * ```TypeScript\r\n\t * import am4geodata_lang_ES from '@amcharts4-geodata/lang/es';\r\n\t * // ...\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.geodataNames = am4geodata_lang_ES;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"geodataNames\": am4geodata_lang_ES\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.7.4\r\n\t */\r\n\tpublic geodataNames: { [index: string]: string };\r\n\r\n\t/**\r\n\t * A reference to a [[ZoomControl]] instance.\r\n\t */\r\n\tprotected _zoomControl: ZoomControl;\r\n\r\n\t/**\r\n\t * A reference to a [[SmallMap]] control instance.\r\n\t */\r\n\tprotected _smallMap: SmallMap;\r\n\r\n\t/**\r\n\t * [_zoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _zoomGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * Default duration of zoom animations (ms).\r\n\t */\r\n\tpublic zoomDuration: number = 1000;\r\n\r\n\t/**\r\n\t * Default zooming animation easing function.\r\n\t */\r\n\tpublic zoomEasing: (value: number) => number = $ease.cubicOut;\r\n\r\n\t/**\r\n\t * Smallest available zoom level. The map will not allow to zoom out past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 1\r\n\t */\r\n\tpublic minZoomLevel: number = 1;\r\n\r\n\t/**\r\n\t * Biggest available zoom level. The map will not allow to zoom in past\r\n\t * this setting.\r\n\t *\r\n\t * NOTE: Should be power of 2.\r\n\t *\r\n\t * @default 32\r\n\t */\r\n\tpublic maxZoomLevel: number = 32;\r\n\r\n\t/**\r\n\t * [_prevZoomLevel description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomLevel: number;\r\n\r\n\t/**\r\n\t * [_prevZoomGeoPoint description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected _prevZoomGeoPoint: IGeoPoint = { latitude: 0, longitude: 0 };\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: MapSeries;\r\n\r\n\t/**\r\n\t * A reference to currently playing animation, e.g. zooming.\r\n\t */\r\n\tprotected _mapAnimation: Animation;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _mouseWheelDisposer: IDisposer;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _zoomGeoPointReal: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _centerGeoPoint: IGeoPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitWidth: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _fitHeight: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\r\n\tpublic panSprite: Circle;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downPointOrig: IPoint;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLongitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _downDeltaLatitude: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _backgroundSeries: MapPolygonSeries;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapChart\";\r\n\r\n\t\t// Set default projection\r\n\t\tthis.projection = new Projection();\r\n\r\n\t\tthis.setPropertyValue(\"deltaLatitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaLongitude\", 0);\r\n\t\tthis.setPropertyValue(\"deltaGamma\", 0);\r\n\t\tthis.maxPanOut = 0.7;\r\n\t\tthis.homeZoomLevel = 1;\r\n\t\tthis.zoomStep = 2;\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\t\tthis.centerMapOnZoomOut = true;\r\n\r\n\t\t// Set padding\r\n\t\tthis.padding(0, 0, 0, 0);\r\n\r\n\t\t$utils.used(this.backgroundSeries);\r\n\r\n\t\t// so that the map would render in a hidden div too\r\n\t\tthis.minWidth = 10;\r\n\t\tthis.minHeight = 10;\r\n\r\n\t\tthis.events.once(\"inited\", this.handleAllInited, this, false);\r\n\r\n\t\t// Create a container for map series\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tseriesContainer.visible = false;\r\n\t\tseriesContainer.inert = true;\r\n\t\tseriesContainer.resizable = true;\r\n\t\tseriesContainer.events.on(\"transformed\", this.handleMapTransform, this, false);\r\n\t\tseriesContainer.events.on(\"doublehit\", this.handleDoubleHit, this, false);\r\n\t\tseriesContainer.events.on(\"dragged\", this.handleDrag, this, false);\r\n\t\tseriesContainer.zIndex = 0;\r\n\t\tseriesContainer.dragWhileResize = true;\r\n\t\t//seriesContainer.background.fillOpacity = 0;\r\n\r\n\t\tseriesContainer.adapter.add(\"scale\", (scale, target) => {\r\n\t\t\treturn $math.fitToRange(scale, this.minZoomLevel, this.maxZoomLevel);\r\n\t\t});\r\n\r\n\t\t// Set up events\r\n\t\t//this.events.on(\"validated\", this.updateExtremes, this);\r\n\t\t//this.events.on(\"datavalidated\", this.handleAllValidated, this, false);\r\n\t\t//this.events.on(\"datavalidated\", this.updateExtremes, this, false);\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t}\r\n\t\t}, undefined, false)\r\n\r\n\t\t// Set up main chart container, e.g. set backgrounds and events to monitor\r\n\t\t// size changes, etc.\r\n\t\tlet chartContainer = this.chartContainer;\r\n\t\tchartContainer.parent = this;\r\n\t\tchartContainer.zIndex = -1;\r\n\r\n\t\tthis._disposers.push(this.events.on(\"maxsizechanged\", () => {\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tif (this._mapAnimation) {\r\n\t\t\t\t\tthis._mapAnimation.stop();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet allInited = true;\r\n\t\t\t\tthis.series.each((series) => {\r\n\t\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\t\t\tallInited = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tif (allInited) {\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t}\r\n\t\t\t\tthis.zoomToGeoPoint(this._zoomGeoPointReal, this.zoomLevel, true, 0);\r\n\t\t\t}\r\n\r\n\t\t}, undefined, false));\r\n\r\n\t\tlet chartContainerBg = chartContainer.background;\r\n\t\tchartContainerBg.fillOpacity = 0;\r\n\t\tchartContainerBg.events.on(\"down\", (e) => { this.seriesContainer.dragStart(e.target.interactions.downPointers.getIndex(0)); }, this);\r\n\t\tchartContainerBg.events.on(\"up\", (e) => { this.seriesContainer.dragStop() }, this);\r\n\t\tchartContainerBg.events.on(\"doublehit\", this.handleDoubleHit, this);\r\n\t\tchartContainerBg.focusable = true;\r\n\r\n\t\tchartContainer.events.on(\"down\", this.handleMapDown, this, false);\r\n\r\n\t\tthis.addDisposer(seriesContainer.events.on(\"down\", () => {\r\n\t\t\t// Cancel any move inertia if there is one\r\n\t\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\t\tif (inertia) {\r\n\t\t\t\tinertia.done();\r\n\t\t\t}\r\n\t\t}))\t\t\r\n\r\n\t\t// Add description to background\r\n\t\tthis.background.fillOpacity = 0;\r\n\r\n\t\t// Add keyboard events for panning\r\n\t\tthis._disposers.push(getInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\tconst key = keyboard.getEventKey(ev.event);\r\n\t\t\t\tif (!this._zoomControl || !this._zoomControl.thumb.isFocused) {\r\n\t\t\t\t\tswitch (key) {\r\n\t\t\t\t\t\tcase \"up\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: 0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"down\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0, y: -0.1 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t\tthis.pan({ x: 0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\t\tthis.pan({ x: -0.1, y: 0 });\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, this));\r\n\r\n\t\tthis.mouseWheelBehavior = \"zoom\";\r\n\r\n\t\tconst interaction = getInteraction();\r\n\t\tthis._disposers.push(interaction.body.events.on(\"down\", this.handlePanDown, this));\r\n\t\tthis._disposers.push(interaction.body.events.on(\"up\", this.handlePanUp, this));\r\n\t\t//this._disposers.push(interaction.body.events.on(\"track\", this.handlePanMove, this));\r\n\r\n\t\tlet panSprite = this.seriesContainer.createChild(Circle);\r\n\t\tpanSprite.radius = 10;\r\n\t\tpanSprite.inert = true;\r\n\t\tpanSprite.isMeasured = false;\r\n\t\tpanSprite.events.on(\"transformed\", this.handlePanMove, this, false);\r\n\t\tpanSprite.interactionsEnabled = false;\r\n\t\tpanSprite.opacity = 0;\r\n\t\tpanSprite.x = 0;\r\n\t\tpanSprite.y = 0;\r\n\t\tthis.panSprite = panSprite;\r\n\t\tthis.panBehavior = \"move\";\r\n\t\t/*\r\n\t\t\t\tthis.panSprite.inertiaOptions.setKey(\"move\", {\r\n\t\t\t\t\t\"time\": 100,\r\n\t\t\t\t\t\"duration\": 1000,\r\n\t\t\t\t\t\"factor\": 3,\r\n\t\t\t\t\t\"easing\": $ease.sinOut\r\n\t\t\t\t});*/\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanDown(event: IInteractionEvents[\"down\"]): void {\r\n\t\tlet svgPoint = $utils.documentPointToSvg(event.pointer.point, this.htmlContainer);\r\n\t\tif (svgPoint.x > 0 && svgPoint.y > 0 && svgPoint.x < this.svgContainer.width && svgPoint.y < this.svgContainer.height) {\r\n\t\t\t// Get local point\r\n\t\t\tthis._downPointOrig = $utils.documentPointToSprite(event.pointer.point, this.seriesContainer);\r\n\r\n\t\t\tthis.panSprite.moveTo(this._downPointOrig);\r\n\t\t\tthis.panSprite.dragStart(event.pointer);\r\n\t\t\tthis._downDeltaLongitude = this.deltaLongitude;\r\n\t\t\tthis._downDeltaLatitude = this.deltaLatitude;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanUp(event: IInteractionEvents[\"down\"]): void {\r\n\t\tif (this._downPointOrig) {\r\n\t\t\tthis.panSprite.dragStop(event.pointer, true);\r\n\t\t}\r\n\t\tthis._downPointOrig = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handlePanMove(): void {\r\n\r\n\t\tif (!this.seriesContainer.isResized) {\r\n\r\n\t\t\tif (getInteraction().areTransformed([this.panSprite.interactions, this.seriesContainer.interactions])) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\t\tlet panBehavior = this.panBehavior;\r\n\r\n\t\t\tif (panBehavior != \"move\" && panBehavior != \"none\" && this._downPointOrig && d3Projection.rotate) {\r\n\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\r\n\t\t\t\tlet dln = rotation[0];\r\n\t\t\t\tlet dlt = rotation[1];\r\n\t\t\t\tlet dlg = rotation[2];\r\n\r\n\t\t\t\td3Projection.rotate([0, 0, 0]);\r\n\r\n\t\t\t\tlet downGeoLocal = this.projection.invert(this._downPointOrig);\r\n\r\n\t\t\t\tlet local: IPoint = { x: this.panSprite.pixelX, y: this.panSprite.pixelY };\r\n\t\t\t\tlet geoLocal: IGeoPoint;\r\n\t\t\t\tif (local) {\r\n\t\t\t\t\tgeoLocal = this.projection.invert(local);\r\n\t\t\t\t}\r\n\r\n\t\t\t\td3Projection.rotate([dln, dlt, dlg]);\r\n\t\t\t\tif (geoLocal) {\r\n\t\t\t\t\tif (panBehavior == \"rotateLat\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLatitude = this._downDeltaLatitude + geoLocal.latitude - downGeoLocal.latitude;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (panBehavior == \"rotateLong\" || panBehavior == \"rotateLongLat\") {\r\n\t\t\t\t\t\tthis.deltaLongitude = this._downDeltaLongitude + geoLocal.longitude - downGeoLocal.longitude;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected handleAllInited() {\r\n\t\tlet inited = true;\r\n\t\tthis.seriesContainer.visible = true;\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (!series.inited || series.dataInvalid) {\r\n\t\t\t\tinited = false;\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (inited) {\r\n\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\tthis.updateScaleRatio();\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// TODO verify that this is correct\r\n\t\t\tconst disposer = registry.events.once(\"exitframe\", () => {\r\n\t\t\t\tthis.removeDispose(disposer);\r\n\t\t\t\tthis.handleAllInited();\r\n\t\t\t}, this, false);\r\n\r\n\t\t\tthis.addDisposer(disposer);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateZoomGeoPoint() {\r\n\t\tlet seriesPoint = $utils.svgPointToSprite({ x: this.innerWidth / 2 + this.pixelPaddingLeft, y: this.innerHeight / 2 + this.pixelPaddingTop }, this.series.getIndex(0));\r\n\t\tlet geoPoint = this.projection.invert(seriesPoint);\r\n\t\tthis._zoomGeoPointReal = geoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic updateCenterGeoPoint() {\r\n\t\tlet maxLeft: number;\r\n\t\tlet maxRight: number;\r\n\t\tlet maxTop: number;\r\n\t\tlet maxBottom: number;\r\n\r\n\r\n\t\tif (this.backgroundSeries) {\r\n\t\t\tlet features = this.backgroundSeries.getFeatures();\r\n\t\t\tif (features.length > 0) {\r\n\t\t\t\tlet bounds = this.projection.d3Path.bounds(<any>features[0].geometry);\r\n\t\t\t\tmaxLeft = bounds[0][0];\r\n\t\t\t\tmaxTop = bounds[0][1];\r\n\t\t\t\tmaxRight = bounds[1][0];\r\n\t\t\t\tmaxBottom = bounds[1][1];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tlet bbox = series.group.node.getBBox();\r\n\r\n\t\t\t\tif (maxLeft > bbox.x || !$type.isNumber(maxLeft)) {\r\n\t\t\t\t\tmaxLeft = bbox.x;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxRight < bbox.x + bbox.width || !$type.isNumber(maxRight)) {\r\n\t\t\t\t\tmaxRight = bbox.x + bbox.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxTop > bbox.y || !$type.isNumber(maxTop)) {\r\n\t\t\t\t\tmaxTop = bbox.y;\r\n\t\t\t\t}\r\n\t\t\t\tif (maxBottom < bbox.y + bbox.height || !$type.isNumber(maxBottom)) {\r\n\t\t\t\t\tmaxBottom = bbox.y + bbox.height;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.seriesMaxLeft = maxLeft;\r\n\t\tthis.seriesMaxRight = maxRight;\r\n\t\tthis.seriesMaxTop = maxTop;\r\n\t\tthis.seriesMaxBottom = maxBottom;\r\n\r\n\t\tthis.seriesWidth = maxRight - maxLeft;\r\n\t\tthis.seriesHeight = maxBottom - maxTop;\r\n\r\n\t\tif (this.seriesWidth > 0 && this.seriesHeight > 0) {\r\n\t\t\tthis.chartContainer.visible = true;\r\n\t\t\tthis._centerGeoPoint = this.projection.invert({ x: maxLeft + (maxRight - maxLeft) / 2, y: maxTop + (maxBottom - maxTop) / 2 });\r\n\r\n\t\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\t\tthis._zoomGeoPointReal = this._centerGeoPoint;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.chartContainer.visible = false;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Prevents map to be dragged out of the container area\r\n\t * @ignore\r\n\t */\r\n\tprotected handleDrag() {\r\n\r\n\t\tlet d = this.zoomLevel * this.scaleRatio;\r\n\r\n\t\tlet ww = this.seriesWidth * d;\r\n\t\tlet hh = this.seriesHeight * d;\r\n\r\n\t\tlet seriesContainer = this.seriesContainer;\r\n\t\tlet maxLeft = this.seriesMaxLeft * d;\r\n\t\tlet maxRight = this.seriesMaxRight * d;\r\n\t\tlet maxTop = this.seriesMaxTop * d;\r\n\t\tlet maxBottom = this.seriesMaxBottom * d;\r\n\r\n\t\tlet x = seriesContainer.pixelX;\r\n\t\tlet y = seriesContainer.pixelY;\r\n\r\n\t\tlet maxPanOut = this.maxPanOut;\r\n\r\n\t\tlet minX = Math.min(this.maxWidth * (1 - maxPanOut) - ww - maxLeft, -maxLeft);\r\n\t\tif (x < minX) {\r\n\t\t\tx = minX;\r\n\t\t}\r\n\r\n\t\tlet maxX = Math.max(this.maxWidth * maxPanOut - maxLeft, this.maxWidth - maxRight);\r\n\t\tif (x > maxX) {\r\n\t\t\tx = maxX;\r\n\t\t}\r\n\r\n\t\tlet minY = Math.min(this.maxHeight * (1 - maxPanOut) - hh - maxTop, -maxTop)\r\n\t\tif (y < minY) {\r\n\t\t\ty = minY;\r\n\t\t}\r\n\r\n\t\tlet maxY = Math.max(this.maxHeight * maxPanOut - maxTop, this.maxHeight - maxBottom);\r\n\t\tif (y > maxY) {\r\n\t\t\ty = maxY;\r\n\t\t}\r\n\r\n\t\tseriesContainer.moveTo({ x: x, y: y }, undefined, undefined, true);\r\n\r\n\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Map\");\r\n\t\t}\r\n\r\n\t\tif (!$type.hasValue(this.background.readerTitle)) {\r\n\t\t\tthis.background.readerTitle = this.language.translate(\"Use plus and minus keys on your keyboard to zoom in and out\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Handles event when a pointer presses down on the map, e.g. user presses\r\n\t * down mouse or touches the map on a screen.\r\n\t *\r\n\t * Stops all animations currently going on.\r\n\t */\r\n\tprotected handleMapDown(): void {\r\n\t\tif (this._mapAnimation) {\r\n\t\t\tthis._mapAnimation.stop();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Handles the event when user doubleclicks or dooubletaps the map: zooms\r\n\t * in on the reference point.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleDoubleHit(event: AMEvent<Sprite, ISpriteEvents>[\"doublehit\"]) {\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\t\tthis.zoomIn(geoPoint);\r\n\t}\r\n\r\n\t/**\r\n\t * Handles mouse wheel event, e.g. user rotates mouse wheel while over the\r\n\t * map: zooms in or out depending on the direction of the wheel turn.\r\n\t *\r\n\t * @param event  Original event\r\n\t */\r\n\tprotected handleWheel(event: AMEvent<Sprite, ISpriteEvents>[\"wheel\"]) {\r\n\r\n\t\t// Cancel any move inertia if there is one\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tlet svgPoint: IPoint = $utils.documentPointToSvg(event.point, this.htmlContainer, this.svgContainer.cssScale);\r\n\t\tlet geoPoint: IGeoPoint = this.svgPointToGeo(svgPoint);\r\n\r\n\t\tif (event.shift.y < 0) {\r\n\t\t\tthis.zoomIn(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.zoomOut(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Specifies what should chart do if when mouse wheel is rotated.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`\r\n\t * @param mouse wheel behavior\r\n\t * @default zoomX\r\n\t */\r\n\tpublic set mouseWheelBehavior(value: \"zoom\" | \"none\") {\r\n\r\n\t\tif (this.setPropertyValue(\"mouseWheelBehavior\", value)) {\r\n\t\t\tif (value != \"none\") {\r\n\t\t\t\tthis._mouseWheelDisposer = this.chartContainer.events.on(\"wheel\", this.handleWheel, this, false);\r\n\t\t\t\tthis._disposers.push(this._mouseWheelDisposer);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._mouseWheelDisposer) {\r\n\t\t\t\t\tthis._mouseWheelDisposer.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tthis.chartContainer.wheelable = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return mouse wheel behavior\r\n\t */\r\n\tpublic get mouseWheelBehavior(): \"zoom\" | \"none\" {\r\n\t\treturn this.getPropertyValue(\"mouseWheelBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * What \"dragging\" map does.\r\n\t *\r\n\t * Available values:\r\n\t * * `\"move\"` (default): changes position of the map.\r\n\t * * `\"rotateLat\"`: changes `deltaLatitude` (rotates the globe vertically).\r\n\t * * `\"rotateLong\"`: changes `deltaLongitude` (rotates the globe horizontally).\r\n\t * * `\"rotateLongLat\"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).\r\n\t *\r\n\t * @default \"move\"\r\n\t * @since 4.3.0\r\n\t * @param  value  Behavior\r\n\t */\r\n\tpublic set panBehavior(value: \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\") {\r\n\t\tif (this.setPropertyValue(\"panBehavior\", value)) {\r\n\t\t\tlet seriesContainer = this.seriesContainer;\r\n\t\t\tthis.panSprite.draggable = false;\r\n\t\t\tseriesContainer.draggable = false;\r\n\r\n\t\t\tswitch (value) {\r\n\t\t\t\tcase \"move\":\r\n\t\t\t\t\tseriesContainer.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.panSprite.draggable = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @returns If the map should be centered when zooming out.\r\n\t */\r\n\tpublic get centerMapOnZoomOut(): boolean {\r\n\t\treturn this.getPropertyValue(\"centerMapOnZoomOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * Specifies if the map should be centered when zooming out\r\n\t * @default true\r\n\t * @since 4.7.12\r\n\t */\r\n\tpublic set centerMapOnZoomOut(value: boolean) {\r\n\t\tthis.setPropertyValue(\"centerMapOnZoomOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @returns Behavior\r\n\t */\r\n\tpublic get panBehavior(): \"none\" | \"move\" | \"rotateLat\" | \"rotateLong\" | \"rotateLongLat\" {\r\n\t\treturn this.getPropertyValue(\"panBehavior\");\r\n\t}\r\n\r\n\t/**\r\n\t * Projection to use for the map.\r\n\t *\r\n\t * Available projections:\r\n\t * * Albers\r\n\t * * AlbersUSA\r\n\t * * AzimuthalEqualArea\r\n\t * * Eckert6\r\n\t * * EqualEarth\r\n\t * * Mercator\r\n\t * * Miller\r\n\t * * NaturalEarth\r\n\t * * Orthographic\r\n\t * * Stereographic\r\n\t *\r\n\t * ```TypeScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * map.projection = new am4maps.projections.Mercator();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"projection\": \"Mercator\"\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Setting_projection} More about projections\r\n\t * @param projection  Projection\r\n\t */\r\n\tpublic set projection(projection: Projection) {\r\n\t\tif (this.setPropertyValue(\"projection\", projection)) {\r\n\t\t\tthis.invalidateProjection();\r\n\r\n\t\t\tprojection.chart = this;\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tthis._backgroundSeries.invalidate();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.inited) {\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tseries.events.once(\"validated\", () => {\r\n\t\t\t\t\tthis.updateCenterGeoPoint();\r\n\t\t\t\t\tthis.updateScaleRatio();\r\n\t\t\t\t\tthis.goHome(0);\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Projection\r\n\t */\r\n\tpublic get projection(): Projection {\r\n\t\treturn this.getPropertyValue(\"projection\");\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems() {\r\n\t\tsuper.validateDataItems();\r\n\t\tthis.updateExtremes();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Calculates the longitudes and latitudes of the most distant points from\r\n\t * the center in all four directions: West, East, North, and South.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateExtremes(): void {\r\n\r\n\t\tlet east: number;\r\n\t\tlet north: number;\r\n\t\tlet west: number;\r\n\t\tlet south: number;\r\n\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (series.north > north || !$type.isNumber(north)) {\r\n\t\t\t\t\tnorth = series.north;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.south < south || !$type.isNumber(south)) {\r\n\t\t\t\t\tsouth = series.south;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.west < west || !$type.isNumber(west)) {\r\n\t\t\t\t\twest = series.west;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (series.east > east || !$type.isNumber(east)) {\r\n\t\t\t\t\teast = series.east;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tlet features: any[] = [];\r\n\t\tlet foundGraticule = false;\r\n\t\t// if we gave graticule, get features of these series only for faster fitSize\r\n\t\tthis.series.each((series) => {\r\n\t\t\tif (series instanceof GraticuleSeries && !series.fitExtent) {\r\n\t\t\t\tfeatures = series.getFeatures();\r\n\t\t\t\tfoundGraticule = true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (!foundGraticule) {\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.ignoreBounds || (series instanceof GraticuleSeries && series.fitExtent)) {\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfeatures = features.concat(series.getFeatures());\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet w = $math.max(50, this.innerWidth);\r\n\t\tlet h = $math.max(50, this.innerHeight);\r\n\r\n\t\tlet d3Projection = this.projection.d3Projection;\r\n\r\n\t\tif (features.length > 0 && d3Projection && (this.east != east || this.west != west || this.north != north || this.south != south)) {\r\n\t\t\tthis.east = east;\r\n\t\t\tthis.west = west;\r\n\t\t\tthis.north = north;\r\n\t\t\tthis.south = south;\r\n\t\t\tif (d3Projection.rotate) {\r\n\t\t\t\tlet rotation = d3Projection.rotate();\r\n\t\t\t\tlet deltaLong = rotation[0];\r\n\t\t\t\tlet deltaLat = rotation[1];\r\n\t\t\t\tlet deltaGamma = rotation[2];\r\n\r\n\t\t\t\tthis.deltaLongitude = deltaLong;\r\n\t\t\t\tthis.deltaLatitude = deltaLat;\r\n\t\t\t\tthis.deltaGamma = deltaGamma;\r\n\t\t\t}\r\n\r\n\t\t\tlet geoJSON = { \"type\": \"FeatureCollection\", features: features };\r\n\r\n\t\t\tlet initialScale = d3Projection.scale();\r\n\r\n\t\t\td3Projection.fitSize([w, h], <any>geoJSON);\r\n\r\n\t\t\tif (d3Projection.scale() != initialScale) {\r\n\t\t\t\tthis.invalidateDataUsers();\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series instanceof GraticuleSeries) {\r\n\t\t\t\t\tseries.invalidateData();\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tif (this._backgroundSeries) {\r\n\t\t\t\tlet polygon = this._backgroundSeries.mapPolygons.getIndex(0);\r\n\t\t\t\tif (polygon) {\r\n\t\t\t\t\tpolygon.multiPolygon = $mapUtils.getBackground(this.north, this.east, this.south, this.west);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._fitWidth = w;\r\n\t\t\tthis._fitHeight = h;\r\n\t\t}\r\n\r\n\t\tif (!this._zoomGeoPointReal || !$type.isNumber(this._zoomGeoPointReal.latitude)) {\r\n\t\t\tthis.goHome(0);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * (Re)calculates a ratio which should be used to scale the actual map so\r\n\t * that it fits perfectly into available space. Helps to avoid redrawing of all the map if container size changes\r\n\t * @ignore\r\n\t */\r\n\tprotected updateScaleRatio(): void {\r\n\t\tlet scaleRatio: number;\r\n\r\n\t\tthis.updateCenterGeoPoint();\r\n\r\n\t\tlet hScale: number = this.innerWidth / this.seriesWidth;\r\n\t\tlet vScale: number = this.innerHeight / this.seriesHeight;\r\n\r\n\t\tscaleRatio = $math.min(hScale, vScale);\r\n\r\n\t\tif ($type.isNaN(scaleRatio) || scaleRatio == Infinity) {\r\n\t\t\tscaleRatio = 1;\r\n\t\t}\r\n\r\n\t\tif (scaleRatio != this.scaleRatio) {\r\n\t\t\tthis.scaleRatio = scaleRatio;\r\n\r\n\t\t\t$iter.each(this.series.iterator(), (series) => {\r\n\t\t\t\tseries.scale = scaleRatio;\r\n\t\t\t\tseries.updateTooltipBounds();\r\n\t\t\t});\r\n\r\n\t\t\tthis.backgroundSeries.scale = scaleRatio;\r\n\r\n\t\t\tthis.dispatch(\"scaleratiochanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point within map container to geographical (lat/long)\r\n\t * coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic svgPointToGeo(point: IPoint): IGeoPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = $utils.svgPointToSprite(point, series);\r\n\t\t\treturn this.seriesPointToGeo(seriesPoint);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within map's\r\n\t * container.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSVG(point: IGeoPoint): IPoint {\r\n\t\tlet series: MapSeries = <MapSeries>this.series.getIndex(0);\r\n\t\tif (series) {\r\n\t\t\tlet seriesPoint: IPoint = this.geoPointToSeries(point);\r\n\t\t\treturn $utils.spritePointToSvg(seriesPoint, series);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Converts a point (X/Y) within actual objects of the map to geographical\r\n\t * (lat/long) coordinates.\r\n\t *\r\n\t * @param point  Source point\r\n\t * @return Geo-point\r\n\t */\r\n\tpublic seriesPointToGeo(point: IPoint): IGeoPoint {\r\n\t\treturn this.projection.invert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Converts geographical (lat/long) coordinates to an X/Y point within\r\n\t * actual elements/objects of the maps.\r\n\t *\r\n\t * @param point  Source geo-point\r\n\t * @return Point\r\n\t */\r\n\tpublic geoPointToSeries(point: IGeoPoint): IPoint {\r\n\t\treturn this.projection.convert(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Map data in GeoJSON format.\r\n\t *\r\n\t * The Map supports the following GeoJSON objects: `Point`, `LineString`,\r\n\t * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.\r\n\t *\r\n\t * @see {@link http://geojson.org/} Official GeoJSON format specification\r\n\t * @param geoJSON GeoJSON data\r\n\t */\r\n\tpublic set geodata(geodata: Object) {\r\n\t\tif (geodata != this._geodata) {\r\n\t\t\tthis._geodata = geodata;\r\n\t\t\tthis.invalidateData();\r\n\r\n\t\t\tthis.dataUsers.each((dataUser) => {\r\n\t\t\t\tfor (let i = dataUser.data.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif (dataUser.data[i].madeFromGeoData == true) {\r\n\t\t\t\t\t\tdataUser.data.splice(i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdataUser.disposeData();\r\n\t\t\t\tdataUser.invalidateData();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return GeoJSON data\r\n\t */\r\n\tpublic get geodata(): Object {\r\n\t\treturn this._geodata;\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to particular zoom level and centers on a latitude/longitude\r\n\t * coordinate.\r\n\t *\r\n\t * @param point      Center coordinate\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToGeoPoint(point: IGeoPoint, zoomLevel: number, center?: boolean, duration?: number, mapObject?: boolean): Animation {\r\n\r\n\t\tif (!point) {\r\n\t\t\tlet hasData = false;\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (series.dataItems.length > 0) {\r\n\t\t\t\t\thasData = true;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tif (hasData) {\r\n\t\t\t\tpoint = this.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!point || !$type.isNumber(point.longitude) || !$type.isNumber(point.latitude)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._zoomGeoPointReal = point;\r\n\r\n\t\tzoomLevel = $math.fitToRange(zoomLevel, this.minZoomLevel, this.maxZoomLevel);\r\n\r\n\t\tlet seriesPoint: IPoint = this.projection.convert(point);\r\n\t\tif (seriesPoint) {\r\n\r\n\t\t\tlet svgPoint: IPoint = this.geoPointToSVG(point);\r\n\r\n\t\t\tlet mapPoint = $utils.svgPointToSprite(svgPoint, this);\r\n\r\n\t\t\tif (center) {\r\n\t\t\t\tmapPoint = {\r\n\t\t\t\t\tx: this.innerWidth / 2,\r\n\t\t\t\t\ty: this.innerHeight / 2\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(duration)) {\r\n\t\t\t\tduration = this.zoomDuration;\r\n\t\t\t}\r\n\r\n\t\t\tlet x = mapPoint.x - seriesPoint.x * zoomLevel * this.scaleRatio;\r\n\t\t\tlet y = mapPoint.y - seriesPoint.y * zoomLevel * this.scaleRatio;\r\n\r\n\r\n\t\t\tif (!mapObject && zoomLevel < this.zoomLevel && this.centerMapOnZoomOut && zoomLevel < 1.5) {\r\n\t\t\t\tx = this.innerWidth / 2 - (this.seriesMaxLeft + (this.seriesMaxRight - this.seriesMaxLeft) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t\ty = this.innerHeight / 2 - (this.seriesMaxTop + (this.seriesMaxBottom - this.seriesMaxTop) / 2) * zoomLevel * this.scaleRatio;\r\n\t\t\t}\r\n\r\n\t\t\tthis._mapAnimation = this.seriesContainer.animate(\r\n\t\t\t\t[{\r\n\t\t\t\t\tproperty: \"scale\",\r\n\t\t\t\t\tto: zoomLevel\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"x\", from: this.seriesContainer.pixelX,\r\n\t\t\t\t\tto: x\r\n\t\t\t\t}, {\r\n\t\t\t\t\tproperty: \"y\", from: this.seriesContainer.pixelY,\r\n\t\t\t\t\tto: y\r\n\t\t\t\t}], duration, this.zoomEasing);\r\n\r\n\t\t\tthis._disposers.push(this._mapAnimation.events.on(\"animationended\", () => {\r\n\t\t\t\tthis._zoomGeoPointReal = this.zoomGeoPoint;\r\n\t\t\t}))\r\n\r\n\r\n\t\t\tthis.seriesContainer.validatePosition();\r\n\r\n\t\t\treturn this._mapAnimation;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular map object.\r\n\t *\r\n\t * @param mapObject  Target map object\r\n\t * @param zoomLevel  Zoom level\r\n\t * @param center     Center on the given coordinate?\r\n\t * @param duration   Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToMapObject(mapObject: MapObject, zoomLevel?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif (center == undefined) {\r\n\t\t\tcenter = true;\r\n\t\t}\r\n\r\n\t\tconst inertia = this.seriesContainer.interactions.inertias.getKey(\"move\");\r\n\t\tif (inertia) {\r\n\t\t\tinertia.done();\r\n\t\t}\r\n\r\n\t\tif (mapObject instanceof MapImage) {\r\n\t\t\tif ($type.isNaN(zoomLevel)) {\r\n\t\t\t\tzoomLevel = 5;\r\n\t\t\t}\r\n\t\t\treturn this.zoomToGeoPoint({ latitude: mapObject.latitude, longitude: mapObject.longitude }, zoomLevel, center, duration, true);\r\n\t\t}\r\n\r\n\t\tlet dataItem = mapObject.dataItem;\r\n\r\n\t\tif (dataItem && $type.isNumber(dataItem.zoomLevel)) {\r\n\t\t\tzoomLevel = dataItem.zoomLevel;\r\n\t\t}\r\n\r\n\r\n\t\tif (mapObject instanceof MapPolygon) {\r\n\t\t\tlet dataItem = mapObject.dataItem;\r\n\t\t\tlet bbox = mapObject.polygon.bbox;\r\n\t\t\tif (bbox.width == 0 || bbox.height == 0) {\r\n\t\t\t\tbbox = mapObject.polygon.group.getBBox();\r\n\t\t\t}\r\n\r\n\t\t\tif (!$type.isNumber(zoomLevel)) {\r\n\t\t\t\tzoomLevel = Math.min(this.seriesWidth / bbox.width, this.seriesHeight / bbox.height);\r\n\t\t\t}\r\n\r\n\t\t\tlet geoPoint: IGeoPoint;\r\n\r\n\t\t\tif (dataItem && $type.hasValue(dataItem.zoomGeoPoint)) {\r\n\t\t\t\tgeoPoint = dataItem.zoomGeoPoint;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// this is more accurate\r\n\t\t\t\tlet polygonPoint = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };\r\n\t\t\t\tlet seriesPoint = $utils.spritePointToSprite(polygonPoint, mapObject.polygon, mapObject.series);\r\n\r\n\t\t\t\tgeoPoint = this.seriesPointToGeo(seriesPoint);\r\n\t\t\t}\r\n\r\n\t\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the map to a particular viewport.\r\n\t *\r\n\t * The `north`, `east`, `south`, and `west` define boundaries of the\r\n\t * imaginary viewort we want to zoom the map to.\r\n\t *\r\n\t * `level` is not actual zoom level. The map will determine the zoom level\r\n\t * required to accommodated such zoom, and will adjust it by `level` if set.\r\n\t *\r\n\t * @param north     Latitude of the North-most boundary\r\n\t * @param east      Longitude of the East-most boundary\r\n\t * @param south     Latitude of the South-most boundary\r\n\t * @param west      Longitude of the West-most boundary\r\n\t * @param level     Adjust zoom level\r\n\t * @param center    Center on the given coordinate?\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomToRectangle(north: number, east: number, south: number, west: number, level?: number, center?: boolean, duration?: number): Animation {\r\n\t\tif ($type.isNaN(level)) {\r\n\t\t\tlevel = 1;\r\n\t\t}\r\n\r\n\t\tlet w = $math.min(west, east);\r\n\t\tlet e = $math.max(west, east);\r\n\r\n\t\twest = w;\r\n\t\teast = e;\r\n\r\n\t\tlet splitLongitude = $math.normalizeAngle(180 - this.deltaLongitude);\r\n\t\tif (splitLongitude > 180) {\r\n\t\t\tsplitLongitude -= 360;\r\n\t\t}\r\n\r\n\t\tlet newLong = west + (east - west) / 2;\r\n\t\tlet d = (west - east);\r\n\r\n\t\tif (west < splitLongitude && east > splitLongitude) {\r\n\t\t\tnewLong += 180;\r\n\t\t\td = $math.normalizeAngle(east - west - 360);\r\n\t\t}\r\n\r\n\t\tlet zoomLevel = level * Math.min((this.south - this.north) / (south - north), Math.abs((this.west - this.east) / d));\r\n\r\n\t\treturn this.zoomToGeoPoint({ latitude: north + (south - north) / 2, longitude: newLong }, zoomLevel, center, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms in the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomIn(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel * step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms out the map, optionally centering on particular latitude/longitude\r\n\t * point.\r\n\t *\r\n\t * @param geoPoint  Optional center point\r\n\t * @param duration  Duration for zoom animation (ms)\r\n\t * @return Zoom animation\r\n\t */\r\n\tpublic zoomOut(geoPoint?: IGeoPoint, duration?: number, sensitivity: number = 1): Animation {\r\n\t\tlet step = 1 + (this.zoomStep - 1) * sensitivity;\r\n\t\tif (step < 1) {\r\n\t\t\tstep = 1;\r\n\t\t}\r\n\t\treturn this.zoomToGeoPoint(geoPoint, this.zoomLevel / step, false, duration);\r\n\t}\r\n\r\n\t/**\r\n\t * Pans the maps using relative coordinates. E.g.:\r\n\t *\r\n\t * ```JSON\r\n\t * {\r\n\t *   x: 0.1,\r\n\t *   y: -0.1\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * The above will move the map by 10% to the right, and by 10% upwards.\r\n\t *\r\n\t * @param shift     Vertical and horizontal shift\r\n\t * @param duration  Pan animation duration (ms)\r\n\t */\r\n\tpublic pan(shift: IPoint, duration?: number): void {\r\n\t\tlet point = this.geoPointToSVG(this.zoomGeoPoint);\r\n\t\tpoint.x += this.pixelWidth * shift.x;\r\n\t\tpoint.y += this.pixelHeight * shift.y;\r\n\t\tthis.zoomToGeoPoint(this.svgPointToGeo(point), this.zoomLevel, true, duration, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Current lat/long coordinates for the center of the viewport. (default\r\n\t * zoom reference point)\r\n\t *\r\n\t * @readonly\r\n\t * @return Coordinates\r\n\t */\r\n\tpublic get zoomGeoPoint(): IGeoPoint {\r\n\t\tconst point = $utils.spritePointToSvg({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 }, this);\r\n\t\treturn this.svgPointToGeo(point);\r\n\t}\r\n\r\n\t/**\r\n\t * Current zoom level.\r\n\t *\r\n\t * @readonly\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic set zoomLevel(value: number) {\r\n\t\tthis.seriesContainer.scale = value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom level\r\n\t */\r\n\tpublic get zoomLevel(): number {\r\n\t\treturn this.seriesContainer.scale;\r\n\t}\r\n\r\n\t/**\r\n\t * Dispatches events after some map transformation, like pan or zoom.\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tprotected handleMapTransform(): void {\r\n\t\tif (this.zoomLevel != this._prevZoomLevel) {\r\n\t\t\tthis.dispatch(\"zoomlevelchanged\");\r\n\t\t\tthis._prevZoomLevel = this.zoomLevel;\r\n\t\t\tthis.svgContainer.readerAlert(this.language.translate(\"Zoom level changed to %1\", this.language.locale, $type.castString(this.zoomLevel)));\r\n\t\t}\r\n\r\n\t\tif (this.zoomGeoPoint && (this._prevZoomGeoPoint.latitude != this.zoomGeoPoint.latitude || this._prevZoomGeoPoint.longitude != this.zoomGeoPoint.longitude)) {\r\n\t\t\tthis.dispatch(\"mappositionchanged\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A [[SmallMap]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a small map\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a small map\r\n\t * map.smallMap = new am4maps.SmallMap();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"smallMap\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param smallMap  Small map\r\n\t */\r\n\tpublic set smallMap(smallMap: SmallMap) {\r\n\t\tif (this._smallMap) {\r\n\t\t\tthis.removeDispose(this._smallMap);\r\n\t\t}\r\n\t\tthis._smallMap = smallMap;\r\n\t\tthis._smallMap.chart = this;\r\n\t\tsmallMap.parent = this.chartContainer;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Small map\r\n\t */\r\n\tpublic get smallMap(): SmallMap {\r\n\t\tif (!this._smallMap) {\r\n\t\t\tlet smallMap: SmallMap = new SmallMap();\r\n\t\t\tthis.smallMap = smallMap;\r\n\t\t}\r\n\t\treturn this._smallMap;\r\n\t}\r\n\r\n\t/**\r\n\t * A [[ZoomControl]] to be used on the map.\r\n\t *\r\n\t * Please note, that accessing this property will NOT create a zoom control\r\n\t * if it has not yet been created. (except in JSON)\r\n\t *\r\n\t * ```TypeScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * // Create a zoom control\r\n\t * map.zoomControl = new am4maps.ZoomControl();\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"zoomControl\": {}\r\n\t *   // ...\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @param zoomControl  Zoom control\r\n\t */\r\n\tpublic set zoomControl(zoomControl: ZoomControl) {\r\n\t\tif (this._zoomControl) {\r\n\t\t\tthis.removeDispose(this._zoomControl);\r\n\t\t}\r\n\t\tthis._zoomControl = zoomControl;\r\n\t\tzoomControl.chart = this;\r\n\t\tzoomControl.parent = this.chartContainer;\r\n\t\tzoomControl.plusButton.exportable = false;\r\n\t\tzoomControl.minusButton.exportable = false;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom control\r\n\t */\r\n\tpublic get zoomControl(): ZoomControl {\r\n\t\treturn this._zoomControl;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a map series of appropriate type.\r\n\t *\r\n\t * @return Map series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new MapSeries();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around vertical axis (Y).\r\n\t *\r\n\t * E.g. if set to -160, the longitude 20 will become a new center, creating\r\n\t * a Pacific-centered map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLongitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLongitude\", $geo.wrapAngleTo180(value))) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLongitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLongitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around horizontal axis (X).\r\n\t *\r\n\t * E.g. setting this to 90 will put Antarctica directly in the center of\r\n\t * the map.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaLatitude(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaLatitude\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaLatitude(): number {\r\n\t\treturn this.getPropertyValue(\"deltaLatitude\");\r\n\t}\r\n\r\n\t/**\r\n\t * Degrees to rotate the map around \"Z\" axis. This is the axis that pierces\r\n\t * the globe directly from the viewer's point of view.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.\r\n\t * @since 4.3.0\r\n\t * @param  value  Rotation\r\n\t */\r\n\tpublic set deltaGamma(value: number) {\r\n\t\tvalue = $math.round(value, 3);\r\n\t\tif (this.setPropertyValue(\"deltaGamma\", value)) {\r\n\t\t\tthis.rotateMap();\r\n\t\t\tthis.updateZoomGeoPoint();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Rotation\r\n\t */\r\n\tpublic get deltaGamma(): number {\r\n\t\treturn this.getPropertyValue(\"deltaGamma\");\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected rotateMap() {\r\n\t\tif (this.projection.d3Projection) {\r\n\t\t\tif (this.projection.d3Projection.rotate) {\r\n\t\t\t\tthis.projection.d3Projection.rotate([this.deltaLongitude, this.deltaLatitude, this.deltaGamma]);\r\n\t\t\t\tthis.invalidateProjection();\r\n\t\t\t\tthis.updateExtremes();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Maximum portion of the map's width/height to allow panning \"off screen\".\r\n\t *\r\n\t * A value of 0 (zero) will prevent any portion of the the map to be panned\r\n\t * outside the viewport.\r\n\t *\r\n\t * 0.5 will allow half of the map to be outside viewable area.\r\n\t *\r\n\t * @default 0.7\r\n\t * @param value  Max pan out\r\n\t */\r\n\tpublic set maxPanOut(value: number) {\r\n\t\tthis.setPropertyValue(\"maxPanOut\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Max pan out\r\n\t */\r\n\tpublic get maxPanOut(): number {\r\n\t\treturn this.getPropertyValue(\"maxPanOut\");\r\n\t}\r\n\r\n\t/**\r\n\t * The geographical point to center map on when it is first loaded.\r\n\t *\r\n\t * The map will also be centered to this point when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home geo point\r\n\t */\r\n\tpublic set homeGeoPoint(value: IGeoPoint) {\r\n\t\tthis.setPropertyValue(\"homeGeoPoint\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home geo point\r\n\t */\r\n\tpublic get homeGeoPoint(): IGeoPoint {\r\n\t\treturn this.getPropertyValue(\"homeGeoPoint\");\r\n\t}\r\n\r\n\t/**\r\n\t * The zoom level to put the map in when it is first loaded.\r\n\t *\r\n\t * The map will also be set to this zoom level when you call `goHome()`\r\n\t * method.\r\n\t *\r\n\t * @param value  Home zoom level\r\n\t */\r\n\tpublic set homeZoomLevel(value: number) {\r\n\t\tthis.setPropertyValue(\"homeZoomLevel\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Home zoom level\r\n\t */\r\n\tpublic get homeZoomLevel(): number {\r\n\t\treturn this.getPropertyValue(\"homeZoomLevel\");\r\n\t}\r\n\r\n\t/**\r\n\t * When user zooms in or out current zoom level is multiplied or divided\r\n\t * by value of this setting.\r\n\t *\r\n\t * @default 2\r\n\t * @param value  Zoom factor\r\n\t */\r\n\tpublic set zoomStep(value: number) {\r\n\t\tthis.setPropertyValue(\"zoomStep\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Zoom factor\r\n\t */\r\n\tpublic get zoomStep(): number {\r\n\t\treturn this.getPropertyValue(\"zoomStep\");\r\n\t}\r\n\r\n\t/**\r\n\t * Invalidates projection, causing all series to be redrawn.\r\n\t *\r\n\t * Call this after changing projection or its settings.\r\n\t */\r\n\tpublic invalidateProjection() {\r\n\t\tthis.east = undefined;\r\n\t\tthis.invalidateDataUsers();\r\n\t\tthis.updateCenterGeoPoint();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a [[DataSource]] to be used for loading Component's data.\r\n\t *\r\n\t * @param value Data source\r\n\t */\r\n\tpublic set geodataSource(value: DataSource) {\r\n\t\tif (this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.removeDispose(this._dataSources[\"geodata\"]);\r\n\t\t}\r\n\t\tthis._dataSources[\"geodata\"] = value;\r\n\t\tthis._dataSources[\"geodata\"].component = this;\r\n\t\tthis.events.on(\"inited\", () => {\r\n\t\t\tthis.loadData(\"geodata\")\r\n\t\t}, this, false);\r\n\t\tthis.setDataSourceEvents(value, \"geodata\");\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[DataSource]] specifically for loading Component's data.\r\n\t *\r\n\t * @return Data source\r\n\t */\r\n\tpublic get geodataSource(): DataSource {\r\n\t\tif (!this._dataSources[\"geodata\"]) {\r\n\t\t\tthis.getDataSource(\"geodata\");\r\n\t\t}\r\n\t\treturn this._dataSources[\"geodata\"];\r\n\t}\r\n\r\n\t/**\r\n\t * Processes JSON-based config before it is applied to the object.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param config  Config\r\n\t */\r\n\tpublic processConfig(config?: { [index: string]: any }): void {\r\n\r\n\t\tif ($type.hasValue(config[\"geodata\"]) && $type.isString(config[\"geodata\"])) {\r\n\t\t\tconst name = config[\"geodata\"];\r\n\t\t\t// Check if there's a map loaded by such name\r\n\t\t\tif ($type.hasValue((<any>window)[\"am4geodata_\" + config[\"geodata\"]])) {\r\n\t\t\t\tconfig[\"geodata\"] = (<any>window)[\"am4geodata_\" + config[\"geodata\"]];\r\n\t\t\t}\r\n\t\t\t// Nope. Let's try maybe we got JSON as string?\r\n\t\t\telse {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconfig[\"geodata\"] = JSON.parse(config[\"geodata\"]);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e) {\r\n\t\t\t\t\t// No go again. Error out.\r\n\t\t\t\t\tthis.raiseCriticalError(Error(\"MapChart error: Geodata `\" + name + \"` is not loaded or is incorrect.\"), true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Instantiate projection\r\n\t\tif ($type.hasValue(config[\"projection\"]) && $type.isString(config[\"projection\"])) {\r\n\t\t\tconfig[\"projection\"] = this.createClassInstance(config[\"projection\"]);\r\n\t\t}\r\n\r\n\t\t// Set up small map\r\n\t\tif ($type.hasValue(config.smallMap) && !$type.hasValue(config.smallMap.type)) {\r\n\t\t\tconfig.smallMap.type = \"SmallMap\";\r\n\t\t}\r\n\r\n\t\t// Set up zoom control\r\n\t\tif ($type.hasValue(config.zoomControl) && !$type.hasValue(config.zoomControl.type)) {\r\n\t\t\tconfig.zoomControl.type = \"ZoomControl\";\r\n\t\t}\r\n\r\n\t\tsuper.processConfig(config);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Decorates a new [[Series]] object with required parameters when it is\r\n\t * added to the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleSeriesAdded(event: IListEvents<MapSeries>[\"inserted\"]): void {\r\n\t\tsuper.handleSeriesAdded(event);\r\n\t\tlet series = event.newValue;\r\n\t\tseries.scale = this.scaleRatio;\r\n\t\tseries.events.on(\"validated\", this.updateCenterGeoPoint, this, false);\r\n\t}\r\n\r\n\r\n\t/**\r\n \t * This function is used to sort element's JSON config properties, so that\r\n \t * some properties that absolutely need to be processed last, can be put at\r\n \t * the end.\r\n \t *\r\n \t * @ignore Exclude from docs\r\n \t * @param a  Element 1\r\n \t * @param b  Element 2\r\n \t * @return Sorting number\r\n \t */\r\n\tprotected configOrder(a: string, b: string): Ordering {\r\n\t\tif (a == b) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\t// Must come last\r\n\t\telse if (a == \"smallMap\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"smallMap\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse if (a == \"series\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\telse if (b == \"series\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn super.configOrder(a, b);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds `projection` to \"as is\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as is?\r\n\t */\r\n\tprotected asIs(field: string): boolean {\r\n\t\treturn field == \"projection\" || field == \"geodata\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * Geo point of map center\r\n\t *\r\n\t * @readonly\r\n\t */\r\n\tpublic get centerGeoPoint(): IGeoPoint {\r\n\t\treturn this._centerGeoPoint;\r\n\t}\r\n\r\n\t/**\r\n\t * Resets the map to its original position and zoom level.\r\n\t *\r\n\t * Use the only parameter to set number of milliseconds for the zoom\r\n\t * animation to play.\r\n\t *\r\n\t * @param  duration  Duration (ms)\r\n\t */\r\n\tpublic goHome(duration?: number) {\r\n\t\tlet homeGeoPoint = this.homeGeoPoint;\r\n\t\tif (!homeGeoPoint) {\r\n\t\t\thomeGeoPoint = this.centerGeoPoint;\r\n\t\t}\r\n\t\tif (homeGeoPoint) {\r\n\t\t\tthis.zoomToGeoPoint(homeGeoPoint, this.homeZoomLevel, true, duration, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets [[Paper]] instance to use to draw elements.\r\n\t *\r\n\t * @ignore\r\n\t * @param   paper  Paper\r\n\t * @return         true if paper was changed, false, if it's the same\r\n\t */\r\n\tpublic setPaper(paper: Paper): boolean {\r\n\t\tif (this.svgContainer) {\r\n\t\t\tthis.svgContainer.hideOverflow = true;\r\n\t\t}\r\n\r\n\t\treturn super.setPaper(paper);\r\n\t}\r\n\r\n\t/**\r\n\t * Background series will create polygons that will fill all the map area\r\n\t * with some color (or other fill).\r\n\t *\r\n\t * This might be useful with non-rectangular projections, like Orthographic,\r\n\t * Albers, etc.\r\n\t *\r\n\t * To change background color/opacity access polygon template.\r\n\t *\r\n\t * ```TypeScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color(\"#fff\");\r\n\t * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   \"backgroundSeries\": {\r\n\t *     \"mapPolygons\": {\r\n\t *       \"polygon\": {\r\n\t *         \"fill\": \"#fff\",\r\n\t *         \"fillOpacity\": 0.1\r\n\t *       }\r\n\t *     }\r\n\t *   }\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @since 4.3.0\r\n\t */\r\n\tpublic get backgroundSeries(): MapPolygonSeries {\r\n\t\tif (!this._backgroundSeries) {\r\n\t\t\tlet backgroundSeries = new MapPolygonSeries();\r\n\t\t\tbackgroundSeries.parent = this.seriesContainer;\r\n\t\t\tbackgroundSeries.chart = this;\r\n\r\n\t\t\tbackgroundSeries.hiddenInLegend = true;\r\n\t\t\tbackgroundSeries.mapPolygons.template.focusable = false;\r\n\t\t\tbackgroundSeries.addDisposer(new Disposer(() => {\r\n\t\t\t\tthis._backgroundSeries = undefined;\r\n\t\t\t}))\r\n\t\t\tthis._disposers.push(backgroundSeries);\r\n\r\n\t\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\t\tlet color = interfaceColors.getFor(\"background\");\r\n\r\n\t\t\tlet polygonTemplate = backgroundSeries.mapPolygons.template.polygon;\r\n\t\t\tpolygonTemplate.stroke = color;\r\n\t\t\tpolygonTemplate.fill = color;\r\n\t\t\tpolygonTemplate.fillOpacity = 0;\r\n\t\t\tpolygonTemplate.strokeOpacity = 0;\r\n\t\t\t//polygonTemplate.focusable = false;\r\n\r\n\t\t\tbackgroundSeries.mapPolygons.create();\r\n\r\n\t\t\tthis._backgroundSeries = backgroundSeries;\r\n\t\t}\r\n\r\n\t\treturn this._backgroundSeries;\r\n\t}\r\n\r\n\t/**\r\n\t * Prepares the legend instance for use in this chart.\r\n\t *\r\n\t * @param legend  Legend\r\n\t */\r\n\tprotected setLegend(legend: Legend) {\r\n\t\tsuper.setLegend(legend);\r\n\t\tif (legend) {\r\n\t\t\tlegend.parent = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param  value  Tap to activate?\r\n\t */\r\n\tprotected setTapToActivate(value: boolean): void {\r\n\t\tsuper.setTapToActivate(value);\r\n\t\t// setup other containers\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\tprotected handleTapToActivate(): void {\r\n\t\tsuper.handleTapToActivate();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = false;\r\n\t\tthis.panSprite.interactions.isTouchProtected = false;\r\n\t}\r\n\r\n\tprotected handleTapToActivateDeactivation(): void {\r\n\t\tsuper.handleTapToActivateDeactivation();\r\n\t\tthis.seriesContainer.interactions.isTouchProtected = true;\r\n\t\tthis.panSprite.interactions.isTouchProtected = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds easing functions to \"function\" fields.\r\n\t *\r\n\t * @param field  Field name\r\n\t * @return Assign as function?\r\n\t */\r\n\tprotected asFunction(field: string): boolean {\r\n\t\treturn field == \"zoomEasing\" || super.asIs(field);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @return Has license?\r\n\t */\r\n\tpublic hasLicense(): boolean {\r\n\t\tif (options.commercialLicense) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (!super.hasLicense()) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tfor (let i = 0; i < options.licenses.length; i++) {\r\n\t\t\tif (options.licenses[i].match(/^MP.{5,}/i)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapChart\"] = MapChart;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/types/MapChart.ts","/**\r\n * Map spline module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyspline } from \"../../core/elements/Polyspline\";\r\nimport { MapSplineSeriesDataItem, MapSplineSeries } from \"./MapSplineSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapSpline]].\r\n */\r\nexport interface IMapSplineProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSpline]].\r\n */\r\nexport interface IMapSplineEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSpline]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineAdapters extends IMapLineAdapters, IMapSplineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw a spline on the map.\r\n *\r\n * @see {@link IMapSplineEvents} for a list of available events\r\n * @see {@link IMapSplineAdapters} for a list of available Adapters\r\n */\r\nexport class MapSpline extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineEvents;\r\n\r\n\t/**\r\n\t * A visual element for the spline.\r\n\t */\r\n\tpublic line: Polyspline;\r\n\r\n\t/**\r\n\t * A related data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSpline\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyspline();\r\n\t\tthis.line.tensionX = 0.8;\r\n\t\tthis.line.tensionY = 0.8;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * ShortestDistance = true is not supported by MapSpline, only MapLine does support it\r\n\t * @default false\r\n\t * @param value\r\n\t * @todo: review description\r\n\t */\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSpline\"] = MapSpline;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapSpline.ts","/**\r\n * Map arched line module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLine, IMapLineProperties, IMapLineAdapters, IMapLineEvents } from \"./MapLine\";\r\nimport { Polyarc } from \"../../core/elements/Polyarc\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { MapArcSeries } from \"./MapArcSeries\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[MapArc]].\r\n */\r\nexport interface IMapArcProperties extends IMapLineProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArc]].\r\n */\r\nexport interface IMapArcEvents extends IMapLineEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArc]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcAdapters extends IMapLineAdapters, IMapArcProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw an arched line on the map.\r\n *\r\n * @see {@link IMapArcEvents} for a list of available events\r\n * @see {@link IMapArcAdapters} for a list of available Adapters\r\n */\r\nexport class MapArc extends MapLine {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcEvents;\r\n\r\n\t/**\r\n\t * A visual element.\r\n\t */\r\n\tpublic line: Polyarc;\r\n\r\n\t/**\r\n\t * A map series this object belongs to.\r\n\t */\r\n\tpublic series: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArc\";\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected createLine(){\r\n\t\tthis.line = new Polyarc();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * `shortestDistance = true` is not supported by `MapArc`.\r\n\t *\r\n\t * Only [[MapLine]] supports it.\r\n\t *\r\n\t * @default false\r\n\t * @param value\r\n\t */\r\n\tpublic set shortestDistance(value: boolean) {\r\n\r\n\t}\r\n\r\n\tpublic get shortestDistance(): boolean {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArc\"] = MapArc;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapArc.ts","/**\r\n * Map spline series module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapSpline } from \"./MapSpline\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapSplineSeries]]\r\n * @see {@link DataItem}\r\n */\r\nexport class MapSplineSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapSpline]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t */\r\n\tpublic _component!: MapSplineSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapSplineSeries]].\r\n */\r\nexport interface IMapSplineSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapSplineSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapSplineSeriesAdapters extends IMapLineSeriesAdapters, IMapSplineSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of map spline elements.\r\n *\r\n * @see {@link IMapSplineSeriesEvents} for a list of available Events\r\n * @see {@link IMapSplineSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapSplineSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapSplineSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapSplineSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapSplineSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapSplineSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapSplineSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapSpline;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapSplineSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapSplineSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapSpline();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapSplineSeries\"] = MapSplineSeries;\r\nregistry.registeredClasses[\"MapSplineSeriesDataItem\"] = MapSplineSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapSplineSeries.ts","/**\r\n * Map arc series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { MapLineSeries, MapLineSeriesDataItem, IMapLineSeriesProperties, IMapLineSeriesDataFields, IMapLineSeriesAdapters, IMapLineSeriesEvents } from \"./MapLineSeries\";\r\nimport { MapArc } from \"./MapArc\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[MapArcSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class MapArcSeriesDataItem extends MapLineSeriesDataItem {\r\n\r\n\t/**\r\n\t * A [[MapArc]] element related to this data item.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: MapArcSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeriesDataItem\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesDataFields extends IMapLineSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesProperties extends IMapLineSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[MapArcSeries]].\r\n */\r\nexport interface IMapArcSeriesEvents extends IMapLineSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[MapArcSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IMapArcSeriesAdapters extends IMapLineSeriesAdapters, IMapArcSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A series of arc elements. (curved lines)\r\n *\r\n * @see {@link IMapArcSeriesEvents} for a list of available Events\r\n * @see {@link IMapArcSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class MapArcSeries extends MapLineSeries {\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IMapArcSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IMapArcSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IMapArcSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IMapArcSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: MapArcSeriesDataItem;\r\n\r\n\t/**\r\n\t * Defines the type of the line items in this series.\r\n\t */\r\n\tpublic _mapLine: MapArc;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"MapArcSeries\";\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new MapArcSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new line instance of suitable type.\r\n\t *\r\n\t * @return New line\r\n\t */\r\n\tprotected createLine(): this[\"_mapLine\"] {\r\n\t\treturn new MapArc();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"MapArcSeries\"] = MapArcSeries;\r\nregistry.registeredClasses[\"MapArcSeriesDataItem\"] = MapArcSeriesDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/MapArcSeries.ts","/**\r\n * Zoom control module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { Sprite, ISpriteEvents, AMEvent } from \"../../core/Sprite\";\r\nimport { Button } from \"../../core/elements/Button\";\r\nimport { MapChart } from \"../types/MapChart\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { MutableValueDisposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { keyboard } from \"../../core/utils/Keyboard\";\r\nimport { getInteraction } from \"../../core/interaction/Interaction\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomControl]].\r\n */\r\nexport interface IZoomControlEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomControl]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomControlAdapters extends IContainerAdapters, IZoomControlProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a control for zooming the map.\r\n *\r\n * @see {@link IZoomControlEvents} for a list of available events\r\n * @see {@link IZoomControlAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class ZoomControl extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomControlProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomControlAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomControlEvents;\r\n\r\n\t/**\r\n\t * Zoom in button element.\r\n\t */\r\n\tpublic plusButton: Button;\r\n\r\n\t/**\r\n\t * Zoom out button element.\r\n\t */\r\n\tpublic minusButton: Button;\r\n\r\n\t/**\r\n\t * A zoom slider background element.\r\n\t */\r\n\tpublic slider: Container;\r\n\r\n\t/**\r\n\t * A zoom slider thumb element.\r\n\t */\r\n\tpublic thumb: Button;\r\n\r\n\t/**\r\n\t * A target map.\r\n\t */\r\n\tprotected _chart: MutableValueDisposer<MapChart> = new MutableValueDisposer<MapChart>();\r\n\r\n\t/**\r\n\t * A type to use for the background element for zoom control.\r\n\t */\r\n\tpublic _background: RoundedRectangle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"ZoomControl\";\r\n\r\n\t\tthis.align = \"right\";\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tthis.layout = \"vertical\";\r\n\t\tthis.padding(5, 5, 5, 5);\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet plusButton: Button = this.createChild(Button);\r\n\t\tplusButton.shouldClone = false;\r\n\t\tplusButton.label.text = \"+\";\r\n\t\t//plusButton.fontFamily = \"Verdana\";\r\n\t\tthis.plusButton = plusButton;\r\n\r\n\t\tlet slider: Container = this.createChild(Container);\r\n\t\tslider.shouldClone = false;\r\n\t\tslider.background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n\t\tslider.background.fillOpacity = 0.05;\r\n\t\tslider.background.events.on(\"hit\", this.handleBackgroundClick, this, false);\r\n\t\tslider.events.on(\"sizechanged\", this.updateThumbSize, this, false);\r\n\t\tthis.slider = slider;\r\n\r\n\t\tlet thumb: Button = slider.createChild(Button);\r\n\t\tthumb.shouldClone = false;\r\n\t\tthumb.padding(0, 0, 0, 0);\r\n\t\tthumb.draggable = true;\r\n\t\tthumb.events.on(\"drag\", this.handleThumbDrag, this, false);\r\n\t\tthis.thumb = thumb;\r\n\r\n\t\tlet minusButton: Button = this.createChild(Button);\r\n\t\tminusButton.shouldClone = false;\r\n\t\tminusButton.label.text = \"-\";\r\n\t\t//minusButton.fontFamily = \"Verdana\";\r\n\t\tthis.minusButton = minusButton;\r\n\r\n\t\t// Set roles\r\n\t\tthis.thumb.role = \"slider\";\r\n\t\tthis.thumb.readerLive = \"polite\";\r\n\r\n\t\t// Set reader text\r\n\t\tthis.thumb.readerTitle = this.language.translate(\"Use arrow keys to zoom in and out\");\r\n\t\tthis.minusButton.readerTitle = this.language.translate(\"Press ENTER to zoom in\");\r\n\t\tthis.plusButton.readerTitle = this.language.translate(\"Press ENTER to zoom out\");\r\n\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.events.on(\"propertychanged\", (event) => {\r\n\t\t\tif (event.property == \"layout\") {\r\n\t\t\t\tthis.fixLayout();\r\n\t\t\t}\r\n\t\t}, undefined, false);\r\n\r\n\t\tthis._disposers.push(this._chart);\r\n\r\n\t\tthis.fixLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected fixLayout() {\r\n\r\n\t\tlet plusButton = this.plusButton;\r\n\t\tlet minusButton = this.minusButton;\r\n\r\n\t\tlet thumb = this.thumb;\r\n\t\tlet slider = this.slider;\r\n\r\n\t\tplusButton.x = undefined;\r\n\t\tplusButton.y = undefined;\r\n\r\n\t\tminusButton.x = undefined;\r\n\t\tminusButton.y = undefined;\r\n\r\n\t\tthumb.x = undefined;\r\n\t\tthumb.y = undefined;\r\n\r\n\t\tslider.x = undefined;\r\n\t\tslider.y = undefined;\r\n\r\n\t\tplusButton.padding(6, 10, 6, 10);\r\n\t\tminusButton.padding(6, 10, 6, 10);\r\n\r\n\t\tminusButton.label.align = \"center\";\r\n\t\tminusButton.label.valign = \"middle\";\r\n\r\n\t\tplusButton.label.align = \"center\";\r\n\t\tplusButton.label.valign = \"middle\";\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tthis.width = 40;\r\n\t\t\tthis.height = undefined;\r\n\r\n\t\t\tminusButton.width = percent(100);\r\n\t\t\tminusButton.height = undefined;\r\n\r\n\t\t\tthumb.width = percent(100);\r\n\t\t\tthumb.height = undefined;\r\n\r\n\t\t\tplusButton.width = percent(100);\r\n\t\t\tplusButton.height = undefined;\r\n\r\n\t\t\tslider.width = percent(100);\r\n\t\t\tminusButton.marginTop = 1;\r\n\t\t\tplusButton.marginBottom = 2;\r\n\r\n\t\t\tslider.height = 0;\r\n\r\n\t\t\tminusButton.toFront();\r\n\t\t\tplusButton.toBack();\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.maxX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\r\n\r\n\t\t}\r\n\t\telse if (this.layout == \"horizontal\") {\r\n\t\t\tthis.height = 40;\r\n\t\t\tthis.width = undefined;\r\n\r\n\t\t\tminusButton.height = percent(100);\r\n\t\t\tminusButton.width = undefined;\r\n\r\n\t\t\tplusButton.height = percent(100);\r\n\t\t\tplusButton.width = undefined;\r\n\r\n\t\t\tthumb.height = percent(100);\r\n\t\t\tthumb.width = undefined;\r\n\r\n\t\t\tthumb.minX = 0;\r\n\t\t\tthumb.minY = 0;\r\n\t\t\tthumb.maxY = 0;\r\n\r\n\t\t\tslider.height = percent(100);\r\n\t\t\tslider.width = 0;\r\n\r\n\t\t\tminusButton.toBack();\r\n\t\t\tplusButton.toFront();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Handles zoom operation after clicking on the slider background.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param event  Event\r\n\t */\r\n\tpublic handleBackgroundClick(event: AMEvent<Sprite, ISpriteEvents>[\"hit\"]): void {\r\n\t\tlet sprite: Sprite = event.target;\r\n\t\tlet y: number = event.spritePoint.y;\r\n\t\tlet chart: MapChart = this.chart;\r\n\r\n\t\tlet maxPower: number = Math.log(chart.maxZoomLevel) / Math.LN2;\r\n\t\tlet minPower: number = Math.log(chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tlet power: number = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));\r\n\t\tlet zoomLevel: number = Math.pow(2, power);\r\n\t\tchart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);\r\n\t}\r\n\r\n\t/**\r\n\t * A main chart/map that this zoom control is for.\r\n\t *\r\n\t * @param chart  Map/chart\r\n\t */\r\n\tpublic set chart(chart: MapChart) {\r\n\t\tthis._chart.set(chart, new MultiDisposer([\r\n\t\t\tchart.events.on(\"maxsizechanged\", this.updateThumbSize, this, false),\r\n\t\t\tchart.events.on(\"zoomlevelchanged\", this.updateThumb, this, false),\r\n\r\n\t\t\tthis.minusButton.events.on(\"hit\", () => { chart.zoomOut(chart.zoomGeoPoint) }, chart, false),\r\n\r\n\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\tif (this.topParent.hasFocused) {\r\n\t\t\t\t\t// ENTER is now handled globally\r\n\t\t\t\t\tif (keyboard.isKey(ev.event, \"plus\")) {\r\n\t\t\t\t\t\tchart.zoomIn();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (keyboard.isKey(ev.event, \"minus\")) {\r\n\t\t\t\t\t\tchart.zoomOut();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, chart),\r\n\t\t\tthis.plusButton.events.on(\"hit\", () => { chart.zoomIn(chart.zoomGeoPoint) }, chart, false)\r\n\t\t]));\r\n\t}\r\n\r\n\t/**\r\n\t * @return Map/chart\r\n\t */\r\n\tpublic get chart(): MapChart {\r\n\t\treturn this._chart.get();\r\n\t}\r\n\r\n\t/**\r\n\t * Updates the slider's thumb size based on the available zoom space.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumbSize(): void {\r\n\t\tlet chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tlet slider: Container = this.slider;\r\n\t\t\tlet thumb: Button = this.thumb;\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.minHeight = Math.min(this.slider.pixelHeight, 20);\r\n\r\n\t\t\t\tthumb.height = slider.pixelHeight / this.stepCount;\r\n\t\t\t\tthumb.maxY = slider.pixelHeight - thumb.pixelHeight;\r\n\r\n\t\t\t\tif (thumb.pixelHeight <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.minWidth = Math.min(this.slider.pixelWidth, 20);\r\n\t\t\t\tthumb.width = slider.pixelWidth / this.stepCount;\r\n\t\t\t\tthumb.maxX = slider.pixelWidth - thumb.pixelWidth;\r\n\r\n\t\t\t\tif (thumb.pixelWidth <= 1) {\r\n\t\t\t\t\tthumb.visible = false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthumb.visible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Updates thumb according to current zoom position from map.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic updateThumb(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\r\n\t\tif (!thumb.isDown) {\r\n\t\t\tlet step: number = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;\r\n\r\n\t\t\tif (this.layout == \"vertical\") {\r\n\t\t\t\tthumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthumb.x = slider.pixelWidth * step / this.stepCount;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms the actual map when slider position changes.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic handleThumbDrag(): void {\r\n\t\tlet slider: Container = this.slider;\r\n\t\tlet chart: MapChart = this.chart;\r\n\t\tlet thumb: Button = this.thumb;\r\n\t\tlet step: number;\r\n\r\n\t\tlet minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\r\n\t\tif (this.layout == \"vertical\") {\r\n\t\t\tstep = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstep = this.stepCount * thumb.pixelX / slider.pixelWidth;\r\n\t\t}\r\n\t\tstep = minStep + step;\r\n\r\n\t\tlet zoomLevel: number = Math.pow(2, step);\r\n\t\tchart.zoomToGeoPoint(undefined, zoomLevel, false, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the step countfor the slider grid according to map's min and max\r\n\t * zoom level settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Step count\r\n\t */\r\n\tpublic get stepCount(): number {\r\n\t\treturn Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a background element for slider control.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Background\r\n\t */\r\n\tpublic createBackground(): this[\"_background\"] {\r\n\t\treturn new RoundedRectangle();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomControl\"] = ZoomControl;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/charts/map/ZoomControl.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Mercator projection.\r\n */\r\nexport class Mercator extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoMercator();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Mercator\"] = Mercator;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/Mercator.ts","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/math.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, pi, sin, sinci, sqrt} from \"./math.js\";\n\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y), sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n}\n\n// Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\naitoffRaw.invert = function(x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x, y1 = y, i = 25;\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n  return [x1, y1];\n};\n\nexport default function() {\n  return projection(aitoffRaw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/aitoff.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan} from \"./math.js\";\n\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [\n    4 / 3 * x * (3 + x2 - 3 * y2),\n    4 / 3 * y * (3 + 3 * x2 - y2)\n  ];\n}\n\naugustRaw.invert = function(x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [\n    sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d),\n    sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)\n  ];\n};\n\nexport default function() {\n  return projection(augustRaw)\n      .scale(66.1603);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/august.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan} from \"./math.js\";\n\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\n\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi\n      ? [lambda, log(tan(quarterPi + phi / 2))]\n      : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function(x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi, i = 25, delta, y0;\n  do {\n    var cosPhi_2 = cos(phi / 2), tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function() {\n  return projection(bakerRaw)\n      .scale(112.314);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/baker.js","import {geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {asin, cos, sin} from \"./math.js\";\n\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [\n    lambda * cos(phi) / cos(phi /= 2),\n    2 * sin(phi)\n  ];\n}\n\nhammerQuarticAuthalicRaw.invert = function(x, y) {\n  var phi = 2 * asin(y / 2);\n  return [\n    x * cos(phi / 2) / cos(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function(_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p\n    .scale(169.529);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/hammer.js","import {abs, epsilon, epsilon2} from \"./math.js\";\n\n// Approximate Newton-Raphson\n// Solve f(x) = y, start from x\nexport function solve(f, y, x) {\n  var steps = 100, delta, f0, f1;\n  x = x === undefined ? 0 : +x;\n  y = +y;\n  do {\n    f0 = f(x);\n    f1 = f(x + epsilon);\n    if (f0 === f1) f1 = f0 + epsilon;\n    x -= delta = (-1 * epsilon * (f0 - y)) / (f0 - f1);\n  } while (steps-- > 0 && abs(delta) > epsilon);\n  return steps < 0 ? NaN : x;\n}\n\n// Approximate Newton-Raphson in 2D\n// Solve f(a,b) = [x,y]\nexport function solve2d(f, MAX_ITERATIONS, eps) {\n  if (MAX_ITERATIONS === undefined) MAX_ITERATIONS = 40;\n  if (eps === undefined) eps = epsilon2;\n  return function(x, y, a, b) {\n    var err2, da, db;\n    a = a === undefined ? 0 : +a;\n    b = b === undefined ? 0 : +b;\n    for (var i = 0; i < MAX_ITERATIONS; i++) {\n      var p = f(a, b),\n        // diffs\n        tx = p[0] - x,\n        ty = p[1] - y;\n      if (abs(tx) < eps && abs(ty) < eps) break; // we're there!\n\n      // backtrack if we overshot\n      var h = tx * tx + ty * ty;\n      if (h > err2) {\n        a -= da /= 2;\n        b -= db /= 2;\n        continue;\n      }\n      err2 = h;\n\n      // partial derivatives\n      var ea = (a > 0 ? -1 : 1) * eps,\n        eb = (b > 0 ? -1 : 1) * eps,\n        pa = f(a + ea, b),\n        pb = f(a, b + eb),\n        dxa = (pa[0] - p[0]) / ea,\n        dya = (pa[1] - p[1]) / ea,\n        dxb = (pb[0] - p[0]) / eb,\n        dyb = (pb[1] - p[1]) / eb,\n        // determinant\n        D = dyb * dxa - dya * dxb,\n        // newton step — or half-step for small D\n        l = (abs(D) < 0.5 ? 0.5 : 1) / D;\n      da = (ty * dxb - tx * dyb) * l;\n      db = (tx * dya - ty * dxa) * l;\n      a += da;\n      b += db;\n      if (abs(da) < eps && abs(db) < eps) break; // we're crawling\n    }\n    return [a, b];\n  };\n}\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/newton.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math.js\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mollweide.js","import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideBromleyTheta} from \"./mollweide.js\";\nimport {abs, cos, epsilon, pi, quarterPi, sin, sqrt2} from \"./math.js\";\n\nvar k = 2.00276,\n    w = 1.11072;\n\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function(x, y) {\n  var ky = k * y, theta = y < 0 ? -quarterPi : quarterPi, i = 25, delta, phi;\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function() {\n  return projection(boggsRaw)\n      .scale(160.857);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/boggs.js","import {geoProjection as projection} from \"d3-geo\";\nimport {cos} from \"./math.js\";\n\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function(x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function() {\n  return projection(sinusoidalRaw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/sinusoidal.js","import {geoProjection as projection} from \"d3-geo\";\nimport {pi} from \"./math.js\";\nimport {mollweideBromleyRaw} from \"./mollweide.js\";\n\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\n\nexport default function() {\n  return projection(bromleyRaw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/bromley.js","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, pi, sin, sqrt, sqrtPi} from \"./math.js\";\n\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [(2 / sqrtPi) * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function(x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function() {\n  return projection(collignonRaw)\n      .scale(95.6464)\n      .center([0, 30]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/collignon.js","import {asin, atan2, cos, sin, sqrt, tan} from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\n\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function(x, y) {\n    if (x) y *= sin(x) / x;\n    var cosLambda = cos(x);\n    return [x, 2 * atan2(sqrt(cosLambda * cosLambda + tanPhi0 * tanPhi0 - y * y) - cosLambda, tanPhi0 - y)];\n  } : function(x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(craigRaw)\n      .scale(249.828)\n      .clipAngle(90);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/craig.js","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt, sqrtPi} from \"./math.js\";\n\nvar sqrt3 = sqrt(3);\n\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function(x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function() {\n  return projection(crasterRaw)\n      .scale(156.19);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/craster.js","import {asin, cos, sin} from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalEqualAreaRaw)\n      .parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n      .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/cylindricalEqualArea.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, pi, sqrt} from \"./math.js\";\n\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [\n    alpha * lambda * (1 - abs(phi) / pi),\n    alpha * phi\n  ];\n}\n\neckert1Raw.invert = function(x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [\n    x / (alpha * (1 - abs(phi) / pi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert1Raw)\n      .scale(165.664);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert1.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, pi, sign, sin, sqrt} from \"./math.js\";\n\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [\n    2 / sqrt(6 * pi) * lambda * alpha,\n    sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)\n  ];\n}\n\neckert2Raw.invert = function(x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [\n    x * sqrt(6 * pi) / (2 * alpha),\n    sign(y) * asin((4 - alpha * alpha) / 3)\n  ];\n};\n\nexport default function() {\n  return projection(eckert2Raw)\n      .scale(165.664);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert2.js","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math.js\";\n\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [\n    2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))),\n    4 / k * phi\n  ];\n}\n\neckert3Raw.invert = function(x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [\n    x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))),\n    y * k / 2\n  ];\n};\n\nexport default function() {\n  return projection(eckert3Raw)\n      .scale(180.739);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert3.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n  return [\n    2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)),\n    2 * sqrt(pi / (4 + pi)) * sin(phi)\n  ];\n}\n\neckert4Raw.invert = function(x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [\n    x / (2 / sqrt(pi * (4 + pi)) * (1 + c)),\n    asin((k + A * (c + 2)) / (2 + halfPi))\n  ];\n};\n\nexport default function() {\n  return projection(eckert4Raw)\n      .scale(180.739);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert4.js","import {geoProjection as projection} from \"d3-geo\";\nimport {cos, pi, sqrt} from \"./math.js\";\n\nexport function eckert5Raw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / sqrt(2 + pi),\n    2 * phi / sqrt(2 + pi)\n  ];\n}\n\neckert5Raw.invert = function(x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [\n    k * x / (1 + cos(phi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert5Raw)\n      .scale(173.044);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert5.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n  k = sqrt(2 + pi);\n  return [\n    lambda * (1 + cos(phi)) / k,\n    2 * phi / k\n  ];\n}\n\neckert6Raw.invert = function(x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [\n    x * 2 * k / (1 + cos(y *= k)),\n    asin((y + sin(y)) / j)\n  ];\n};\n\nexport default function() {\n  return projection(eckert6Raw)\n      .scale(173.044);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eckert6.js","import {geoProjection as projection} from \"d3-geo\";\nimport {augustRaw} from \"./august.js\";\nimport {abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2} from \"./math.js\";\n\nvar eisenlohrK = 3 + 2 * sqrt2;\n\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [\n    eisenlohrK * (c * (v - 1 / v) - 2 * log(v)),\n    eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))\n  ];\n}\n\neisenlohrRaw.invert = function(x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0], phi = p[1], i = 20, p;\n  x /= eisenlohrK, y /= eisenlohrK;\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = (sqrt2 * c1 + (c0 + s0) * k),\n        v1 = (sqrt2 * c1 + (c0 - s0) * k),\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(eisenlohrRaw)\n      .scale(62.5271);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/eisenlohr.js","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, radians, sqrt, tan} from \"./math.js\";\n\nvar faheyK = cos(35 * radians);\n\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function(x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function() {\n  return projection(faheyRaw)\n      .scale(137.152);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/fahey.js","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, sqrtPi, tan} from \"./math.js\";\n\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2, cosk = cos(k);\n  return [ 2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function(x, y) {\n  var k = atan(y / sqrtPi), cosk = cos(k), phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function() {\n  return projection(foucautRaw)\n      .scale(135.264);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/foucaut.js","import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt} from \"./math.js\";\n\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n\n      x = r;\n      var i = 50, delta;\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n    return p;\n  }\n\n  forward.invert = function(x, y) {\n    var r2 = x * x + y * y;\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n\n        if (abs(delta) < epsilon2 || !--i) break;\n\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (\n          sinx - x_halfPi * 2 * (\n            halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) -\n            rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)\n          ) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function(x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n}\n\n// Numerical integration: trapezoidal rule.\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n  for (var i = 1, x = a; i < n; ++i) s += 2 * f(x += h);\n  return s * 0.5 * h;\n}\n\nexport default function() {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function(_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function(_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .rotate([90, -40])\n      .scale(91.7095)\n      .clipAngle(180 - 1e-3);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/gingery.js","import {abs, asin, cos, epsilon, pi, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda, deltaPhi, i = 50;\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = ((lambda / pi) * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi)) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n    return [lambda, phi];\n  };\n\n  return forward;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburgPolyconic.js","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic.js\";\n\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\n\nexport default function() {\n  return projection(ginzburg4Raw)\n      .scale(149.995);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg4.js","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic.js\";\n\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435,0.082742);\n\nexport default function() {\n  return projection(ginzburg5Raw)\n      .scale(153.93);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg5.js","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic.js\";\nimport {pi} from \"./math.js\";\n\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\n\nexport default function() {\n  return projection(ginzburg6Raw)\n      .scale(130.945);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg6.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math.js\";\n\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [\n    lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2),\n    phi * (1 + phi2 / 12)\n  ];\n}\n\nginzburg8Raw.invert = function(x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50, delta;\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n  i = 50;\n  x /= 1 -0.162388 * phi2;\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(ginzburg8Raw)\n      .scale(131.747);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg8.js","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic.js\";\n\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965,0.031762);\n\nexport default function() {\n  return projection(ginzburg9Raw)\n      .scale(131.087);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/ginzburg9.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt} from \"./math.js\";\nimport squareRaw from \"./square.js\";\n\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return (point[0] *= sLambda, point[1] *= -sPhi, point);\n}\n\ngringortenRaw.invert = function(x, y) {\n  if (abs(x) > 1) x = sign(x) * 2 - x;\n  if (abs(y) > 1) y = sign(y) * 2 - y;\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n\n  if (lambda === 0) return [0, -(h + r * a)];\n\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = (0.5 * dp2dPhi) / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta;\n\n  // Slower but accurate bisection method.\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x, x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n    do {\n      var g = sqrt(a2 - x * x),\n          f = (x * (zeta + mu * g) + nu * asin(x / a)) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;\n      else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  }\n\n  // Newton-Raphson.\n  else {\n    x = epsilon, i = 25;\n    do {\n      var x2 = x * x,\n          g2 = sqrt(a2 - x2),\n          zetaMug = zeta + mu * g2,\n          f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n          df = zetaMug + (nu - mu * x2) / g2;\n      x -= delta = g2 ? f2 / df : 0;\n    } while (abs(delta) > epsilon && --i > 0);\n  }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = (1 - r2) + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;\n    else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function() {\n  return projection(squareRaw(gringortenRaw))\n      .scale(239.75);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/gringorten.js","import {abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh} from \"./math.js\";\n\n// Returns [sn, cn, dn](u + iv|m).\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [\n      [0, b[0] / b[1]],\n      [1 / b[1], 0],\n      [b[2] / b[1], 0]\n    ];\n  }\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [\n    [a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c],\n    [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c],\n    [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]\n  ];\n}\n\n// Returns [sn, cn, dn, ph](u|m).\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [\n      t - ai * b,\n      b + ai * t,\n      1 - m * t * t / 2,\n      u - ai\n    ];\n  }\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [\n      t + ai * (twon - u) / (b * b),\n      phi - ai * t * phi * (twon - u),\n      phi + ai * t * phi * (twon + u),\n      2 * atan(exp(u)) - halfPi + ai * (twon - u) / b\n    ];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n}\n\n// Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [\n      ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi),\n      ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)\n    ];\n  }\n  return [\n    0,\n    ellipticF(atan(sinhPsi), 1 - m) * sign(psi)\n  ];\n}\n\n// Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n  return phi / (pow(2, i) * a);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/elliptic.js","import {geoProjection as projection} from \"d3-geo\";\nimport {ellipticF, ellipticFi, ellipticJi} from \"./elliptic.js\";\nimport {abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan} from \"./math.js\";\nimport squareRaw from \"./square.js\";\n\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [\n   0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)),\n    -0.25 * log(t * t + 4 * x2) +0.5 * log(y_1 * y_1 + x2)\n  ];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [\n    (a[0] * b[0] + a[1] * b[1]) / denominator,\n    (a[1] * b[0] - a[0] * b[1]) / denominator\n  ];\n}\n\nguyouRaw.invert = function(x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [\n    lambda,\n    2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi\n  ];\n};\n\nexport default function() {\n  return projection(squareRaw(guyouRaw))\n      .scale(151.496);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/guyou.js","import {range} from \"d3-array\";\nimport {geoStream, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {collignonRaw} from \"./collignon.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\nimport {abs, asin, degrees, epsilon, floor, max, min, pi, radians, sqrtPi, tau} from \"./math.js\";\n\nvar K = 3,\n    healpixParallel = asin(1 - 1 / K) * degrees,\n    healpixLambert = cylindricalEqualAreaRaw(0);\n\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + (dy1 * dy1 * 4) / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function(x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphereTop(x, i) {\n  return [x, i & 1 ? 90 - epsilon : healpixParallel];\n}\n\nfunction sphereBottom(x, i) {\n  return [x, i & 1 ? -90 + epsilon : -healpixParallel];\n}\n\nfunction sphereNudge(d) {\n  return [d[0] * (1 - epsilon), d[1]];\n}\n\nfunction sphere(step) {\n  var c = [].concat(\n    range(-180, 180 + step / 2, step).map(sphereTop),\n    range(180, -180 - step / 2, -step).map(sphereBottom)\n  );\n  return {\n    type: \"Polygon\",\n    coordinates: [step === 180 ? c.map(sphereNudge) : c]\n  };\n}\n\nexport default function() {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function(_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere(180 / H), sphereStream); };\n    return rotateStream;\n  };\n\n  return p\n      .scale(239.75);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/healpix.js","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n    if (t && t < 2) {\n      var theta = halfPi - phi, i = 25, delta;\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 -0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n    return [\n      rho * sin(omega),\n      rho0 - rho * cos(omega)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [\n      asin(x / sqrt(rho2)) * pi / Bt_Bt1,\n      asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function(_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p\n      .scale(167.774)\n      .center([0, 18.67]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/hill.js","import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideRaw} from \"./mollweide.js\";\nimport {sinusoidalRaw} from \"./sinusoidal.js\";\n\nexport var sinuMollweidePhi = 0.7109889596207567;\n\nexport var sinuMollweideY = 0.0528035274542;\n\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function(x, y) {\n  return y > -sinuMollweidePhi\n      ? mollweideRaw.invert(x, y - sinuMollweideY)\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(sinuMollweideRaw)\n      .rotate([-20, -55])\n      .scale(164.263)\n      .center([0, -5.4036]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/sinuMollweide.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs} from \"./math.js\";\nimport {mollweideRaw} from \"./mollweide.js\";\nimport {sinusoidalRaw} from \"./sinusoidal.js\";\nimport {sinuMollweidePhi, sinuMollweideY} from \"./sinuMollweide.js\";\n\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function(x, y) {\n  return abs(y) > sinuMollweidePhi\n      ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY))\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(homolosineRaw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/homolosine.js","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt, tau} from \"./math.js\";\n\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function(x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function() {\n  return projection(kavrayskiy7Raw)\n      .scale(158.837);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/kavrayskiy7.js","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin} from \"./math.js\";\n\nexport function lagrangeRaw(n) {\n\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [\n      2 * sin(lambda) / c,\n      (v - 1 / v) / c\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [\n      atan2(2 * x, 1 - x2 - y2) / n,\n      asin((t - 1) / (t + 1))\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function(_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p\n      .scale(124.75);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/lagrange.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2} from \"./math.js\";\n\nvar pi_sqrt2 = pi / sqrt2;\n\nexport function larriveeRaw(lambda, phi) {\n  return [\n    lambda * (1 + sqrt(cos(phi))) / 2,\n    phi / (cos(phi / 2) * cos(lambda / 6))\n  ];\n}\n\nlarriveeRaw.invert = function(x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;\n  else lambda += 6 * acos(pi_sqrt2 / y0);\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function() {\n  return projection(larriveeRaw)\n      .scale(97.2672);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/larrivee.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, pi, sign} from \"./math.js\";\n\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda, phi2 = phi * phi;\n  return [\n    lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)),\n    phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))\n  ];\n}\n\nlaskowskiRaw.invert = function(x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(laskowskiRaw)\n      .scale(139.98);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/laskowski.js","import {geoProjection as projection} from \"d3-geo\";\nimport {acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2} from \"./math.js\";\n\nexport function littrowRaw(lambda, phi) {\n  return [\n    sin(lambda) / cos(phi),\n    tan(phi) * cos(lambda)\n  ];\n}\n\nlittrowRaw.invert = function(x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      x2_y2_1 = x2 + y2_1,\n      cosPhi = x\n          ? sqrt1_2 * sqrt((x2_y2_1 - sqrt(x2_y2_1 * x2_y2_1 - 4 * x2)) / x2)\n          : 1 / sqrt(y2_1);\n  return [\n    asin(x * cosPhi),\n    sign(y) * acos(cosPhi)\n  ];\n};\n\nexport default function() {\n  return projection(littrowRaw)\n      .scale(144.049)\n      .clipAngle(90 - 1e-3);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/littrow.js","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math.js\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/miller.js","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt} from \"./math.js\";\n\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\n\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [\n    sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7,\n    9 * sin(theta / 3) / sqrt7\n  ];\n}\n\nmtFlatPolarParabolicRaw.invert = function(x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [\n    x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)),\n    asin(sin(theta) * 3 * sqrt6 / 7)\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarParabolicRaw)\n      .scale(164.859);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2} from \"./math.js\";\n\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2),\n    2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)\n  ];\n}\n\nmtFlatPolarQuarticRaw.invert = function(x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [\n    3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)),\n    asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarQuarticRaw)\n      .scale(188.209);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math.js\";\n\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    A * (0.5 + cos(theta)) * lambda / 1.5,\n    A * theta\n  ];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function(x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [\n    1.5 * x / (A * (0.5 + cos(theta))),\n    asin((theta / 2 + sin(theta)) / (1 + pi / 4))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarSinusoidalRaw)\n      .scale(166.518);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon2} from \"./math.js\";\n\nexport function naturalEarth2Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2, phi6 = phi2 * phi4;\n  return [\n    lambda * (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))\n  ];\n}\n\nnaturalEarth2Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta, phi2, phi4, phi6;\n  do {\n    phi2 = phi * phi; phi4 = phi2 * phi2;\n    phi -= delta = ((phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))) - y) /\n      (1.01183 + phi4 * phi4 * ((9 * -0.02625) + (11 * 0.01926) * phi2 + (13 * -0.00396) * phi4));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  phi2 = phi * phi; phi4 = phi2 * phi2; phi6 = phi2 * phi4;\n  return [\n    x / (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth2Raw)\n      .scale(175.295);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/naturalEarth2.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, epsilon, tan} from \"./math.js\";\n\nexport function nellHammerRaw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / 2,\n    2 * (phi - tan(phi / 2))\n  ];\n}\n\nnellHammerRaw.invert = function(x, y) {\n  var p = y / 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n  return [\n    2 * x / (1 + cos(y)),\n    y\n  ];\n};\n\nexport default function() {\n  return projection(nellHammerRaw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/nellHammer.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, halfPi, pi, sign, sin, sqrt} from \"./math.js\";\nimport {solve} from \"./newton.js\";\n\n// Based on Torben Jansen's implementation\n// https://beta.observablehq.com/@toja/nicolosi-globular-projection\n// https://beta.observablehq.com/@toja/nicolosi-globular-inverse\n\nexport function nicolosiRaw(lambda, phi) {\n  var sinPhi = sin(phi),\n    q = cos(phi),\n    s = sign(lambda);\n\n  if (lambda === 0 || abs(phi) === halfPi) return [0, phi];\n  else if (phi === 0) return [lambda, 0];\n  else if (abs(lambda) === halfPi) return [lambda * q, halfPi * sinPhi];\n\n  var b = pi / (2 * lambda) - (2 * lambda) / pi,\n    c = (2 * phi) / pi,\n    d = (1 - c * c) / (sinPhi - c);\n\n  var b2 = b * b,\n    d2 = d * d,\n    b2d2 = 1 + b2 / d2,\n    d2b2 = 1 + d2 / b2;\n\n  var M = ((b * sinPhi) / d - b / 2) / b2d2,\n    N = ((d2 * sinPhi) / b2 + d / 2) / d2b2,\n    m = M * M + (q * q) / b2d2,\n    n = N * N - ((d2 * sinPhi * sinPhi) / b2 + d * sinPhi - 1) / d2b2;\n\n  return [\n    halfPi * (M + sqrt(m) * s),\n    halfPi * (N + sqrt(n < 0 ? 0 : n) * sign(-phi * b) * s)\n  ];\n}\n\nnicolosiRaw.invert = function(x, y) {\n\n  x /= halfPi;\n  y /= halfPi;\n\n  var x2 = x * x,\n    y2 = y * y,\n    x2y2 = x2 + y2,\n    pi2 = pi * pi;\n\n  return [\n    x ? (x2y2 -1 + sqrt((1 - x2y2) * (1 - x2y2) + 4 * x2)) / (2 * x) * halfPi : 0,\n    solve(function(phi) {\n      return (\n        x2y2 * (pi * sin(phi) - 2 * phi) * pi +\n        4 * phi * phi * (y - sin(phi)) +\n        2 * pi * phi -\n        pi2 * y\n      );\n    }, 0)\n  ];\n};\n\nexport default function() {\n  return projection(nicolosiRaw)\n    .scale(127.267);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/nicolosi.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math.js\";\n\n// Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\n\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [\n    lambda,\n    phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))\n  ];\n}\n\npattersonRaw.invert = function(x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;\n  else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y, delta;\n\n  do { // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = ((yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2)))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function() {\n  return projection(pattersonRaw)\n      .scale(139.319);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/patterson.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan} from \"./math.js\";\n\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [\n    sin(k) / tanPhi,\n    phi + (1 - cos(k)) / tanPhi\n  ];\n}\n\npolyconicRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10, delta;\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n  tanPhi = tan(phi);\n  return [\n    (abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(y) * sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(polyconicRaw)\n      .scale(103.74);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/polyconic.js","// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [\n  [0, 90],\n  [-90, 0], [0, 0], [90, 0], [180, 0],\n  [0, -90]\n];\n\nexport default [\n  [0, 2, 1],\n  [0, 3, 2],\n  [5, 1, 2],\n  [5, 2, 3],\n  [0, 1, 4],\n  [0, 4, 3],\n  [5, 4, 1],\n  [5, 3, 4]\n].map(function(face) {\n  return face.map(function(i) {\n    return octahedron[i];\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/polyhedral/octahedron.js","import {geoCentroid as centroid, geoProjection as projection} from \"d3-geo\";\nimport {collignonRaw} from \"../collignon.js\";\nimport {pi, sqrt} from \"../math.js\";\nimport polyhedral from \"./index.js\";\nimport octahedron from \"./octahedron.js\";\n\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function(x,y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .angle(-30)\n      .scale(121.906)\n      .center([0, 48.5904]);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/polyhedral/collignon.js","import {abs, acos, asin, atan, cos, epsilon, pi, sin, tan} from \"./math.js\";\nimport parallel1 from \"./parallel1.js\";\n\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [\n      sin(E) * cotPhi,\n      phi + (1 - cos(E)) * cotPhi - phi0\n    ];\n  }\n\n  // TODO return null for points outside outline.\n  forward.invert = function(x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10, delta;\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [\n      sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(rectangularPolyconicRaw)\n      .scale(131.215);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/rectangularPolyconic.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians} from \"./math.js\";\n\nvar K = [\n  [0.9986, -0.062],\n  [1.0000, 0.0000],\n  [0.9986, 0.0620],\n  [0.9954, 0.1240],\n  [0.9900, 0.1860],\n  [0.9822, 0.2480],\n  [0.9730, 0.3100],\n  [0.9600, 0.3720],\n  [0.9427, 0.4340],\n  [0.9216, 0.4958],\n  [0.8962, 0.5571],\n  [0.8679, 0.6176],\n  [0.8350, 0.6769],\n  [0.7986, 0.7346],\n  [0.7597, 0.7903],\n  [0.7186, 0.8435],\n  [0.6732, 0.8936],\n  [0.6213, 0.9394],\n  [0.5722, 0.9761],\n  [0.5322, 1.0000]\n];\n\nK.forEach(function(d) {\n  d[1] *= 1.0144;\n});\n\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [\n    lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)\n  ];\n}\n\nrobinsonRaw.invert = function(x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50, delta;\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n      break;\n    }\n  } while (--i0 >= 0);\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [\n    x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    phi * radians\n  ];\n};\n\nexport default function() {\n  return projection(robinsonRaw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/robinson.js","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, quarterPi, sin, tan} from \"./math.js\";\n\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [\n    lambda * (0.74482 - 0.34588 * s * s),\n    1.70711 * t\n  ];\n}\n\ntimesRaw.invert = function(x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [\n    x / (0.74482 - 0.34588 * s * s),\n    2 * atan(t)\n  ];\n};\n\nexport default function() {\n  return projection(timesRaw)\n      .scale(146.153);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/times.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math.js\";\n\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [\n    sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2,\n    sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2\n  ];\n}\n\nvanDerGrintenRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [\n    pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x),\n    sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrintenRaw)\n      .scale(79.4183);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan} from \"./math.js\";\n\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [\n    sign(lambda) * pi * x1,\n    sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))\n  ];\n}\n\nvanDerGrinten2Raw.invert = function(x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [\n    sign(x) * pi * (B - A),\n    sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten2Raw)\n      .scale(79.4183);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten2.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math.js\";\n\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [\n    pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A),\n    pi * y1\n  ];\n}\n\nvanDerGrinten3Raw.invert = function(x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [\n    x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0,\n    halfPi * sin(2 * atan(y1))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten3Raw)\n        .scale(79.4183);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten3.js","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, halfPi, min, pi, sign, sqrt} from \"./math.js\";\n\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [\n    sign(lambda) * halfPi * x1,\n    sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)\n  ];\n}\n\nvanDerGrinten4Raw.invert = function(x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  var sy = sign(y);\n  y = abs(y) / pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = y * (2 - (y > 0.5 ? min(y, abs(x)) : 0)),\n      r = x * x + y * y,\n      i = 50;\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta * r * r > epsilon && --i > 0);\n  return [\n    sign(x) * (sqrt(D * D + 4) + D) * pi / 4,\n    sy * halfPi * B\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten4Raw)\n      .scale(127.16);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/vanDerGrinten4.js","import {geoProjection as projection} from \"d3-geo\";\nimport {sqrt, pi} from \"./math.js\";\nimport {mollweideBromleyRaw} from \"./mollweide.js\";\n\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\n\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\n\nexport default function() {\n  return projection(wagner4Raw)\n      .scale(176.84);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/wagner4.js","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math.js\";\n\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function(x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function() {\n  return projection(wagner6Raw)\n      .scale(152.63);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/wagner6.js","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [\n    sinLambda * cosPhi - cosLambda * sin1_Phi,\n    -cosLambda * cosPhi - sinLambda * sin1_Phi\n  ];\n}\n\nwiechelRaw.invert = function(x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [\n    atan2(k * b, D * (1 + w)),\n    D ? -asin(k * a / D) : 0\n  ];\n};\n\nexport default function() {\n  return projection(wiechelRaw)\n      .rotate([0, -90, 45])\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/wiechel.js","import {geoProjection as projection} from \"d3-geo\";\nimport {aitoffRaw} from \"./aitoff.js\";\nimport {halfPi, epsilon, sin, cos, sqrt, abs, acos} from \"./math.js\";\n\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [\n    (coordinates[0] + lambda / halfPi) / 2,\n    (coordinates[1] + phi) / 2\n  ];\n}\n\nwinkel3Raw.invert = function(x, y) {\n  var lambda = x, phi = y, i = 25;\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(winkel3Raw)\n      .scale(158.837);\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-geo-projection/src/winkel3.js","/**\n * Functionality for Miller projection\n *\n * The function(s) below are from D3.js library (https://d3js.org/)\n *\n * ```\n * Copyright 2017 Mike Bostock\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its\n *    contributors may be used to endorse or promote products derived from this\n *    software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n * ```\n */\n\n/**\n * ============================================================================\n * IMPORTS\n * ============================================================================\n * @hidden\n */\nimport { Projection } from \"./Projection\";\nimport { registry } from \"../../../core/Registry\";\n// @ts-ignore\nimport * as d3geoprojection from \"d3-geo-projection\";\n\n\n/**\n * Miller projection.\n */\nexport class Miller extends Projection {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.d3Projection = d3geoprojection.geoMiller();\n\t}\n}\n\n/**\n * Register class in system, so that it can be instantiated using its name from\n * anywhere.\n *\n * @ignore\n */\nregistry.registeredClasses[\"Miller\"] = Miller;\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/Miller.ts","/**\r\n * Functionality for Eckert6 projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\n// @ts-ignore\r\nimport * as d3geoprojection from \"d3-geo-projection\";\r\n\r\n/**\r\n * Eckert6 projection.\r\n */\r\nexport class Eckert6 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geoprojection.geoEckert6();\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Eckert6\"] = Eckert6;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/Eckert6.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Orthographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoOrthographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Orthographic\"] = Orthographic;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/Orthographic.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Stereographic extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoStereographic();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Stereographic\"] = Stereographic;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/Stereographic.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class Albers extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbers();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Albers\"] = Albers;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/Albers.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AlbersUsa extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAlbersUsa();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AlbersUsa\"] = AlbersUsa;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/AlbersUsa.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class NaturalEarth1 extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoNaturalEarth1();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NaturalEarth1\"] = NaturalEarth1;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/NaturalEarth1.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class AzimuthalEqualArea extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoAzimuthalEqualArea();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AzimuthalEqualArea\"] = AzimuthalEqualArea;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/AzimuthalEqualArea.ts","/**\r\n * Functionality for Mercator projection\r\n *\r\n * The function(s) below are from D3.js library (https://d3js.org/)\r\n *\r\n * ```\r\n * Copyright 2017 Mike Bostock\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice,\r\n *    this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n *    this list of conditions and the following disclaimer in the documentation\r\n *    and/or other materials provided with the distribution.\r\n *\r\n * 3. Neither the name of the copyright holder nor the names of its\r\n *    contributors may be used to endorse or promote products derived from this\r\n *    software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\r\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\r\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\r\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\r\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\r\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n * POSSIBILITY OF SUCH DAMAGE.\r\n * ```\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Projection } from \"./Projection\";\r\nimport { registry } from \"../../../core/Registry\";\r\nimport * as d3geo from \"d3-geo\";\r\n\r\n\r\n/**\r\n * Orthographic projection.\r\n */\r\nexport class EqualEarth extends Projection {\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.d3Projection = d3geo.geoEqualEarth();\r\n\t}\t\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"EqualEarth\"] = EqualEarth;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../../src/.internal/charts/map/projections/EqualEarth.ts","import * as m from \"../es2015/maps\";\nwindow.am4maps = m;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./maps.js\n// module id = null\n// module chunks = ","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/tinyqueue/index.js","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/polylabel/polylabel.js\n// module id = o+vr\n// module chunks = cc1e"],"sourceRoot":""}